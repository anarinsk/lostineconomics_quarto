<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>lostineconomics.com</title>
<link>https://www.lostineconomics.com/index.html</link>
<atom:link href="https://www.lostineconomics.com/index.xml" rel="self" type="application/rss+xml"/>
<description>Another useless blog</description>
<generator>quarto-1.3.56</generator>
<lastBuildDate>Wed, 21 Dec 2022 15:00:00 GMT</lastBuildDate>
<item>
  <title>보유 도메인을 GitHub Pages에 연결하자.</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-12-22-my-domains.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>도메인과 깃허브 페이지스를 연결하는 법을 알아보자.</li>
</ul>
<section id="not-in-this-post" class="level3">
<h3 class="anchored" data-anchor-id="not-in-this-post">Not in this Post</h3>
<ul>
<li>도메인에 관한 상세한 지식</li>
<li>Github Pages의 일반적인 설정 방법</li>
</ul>
</section>
<section id="what-in-this-post" class="level3">
<h3 class="anchored" data-anchor-id="what-in-this-post">What in this Post</h3>
<ul>
<li>도메인 구입하고 깃헙 페이지스로 연결하는 법</li>
</ul>
</section>
</section>
<section id="도메인-구입" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="도메인-구입">도메인 구입</h2>
<p>구입은 편한 곳에서 하시면 되겠다. 나는 <a href="https://domains.google/">Google Domains</a>를 이용했다. 도메인을 산다는 것은 무엇일까? 예를 들어 이 홈페이지를 위해 구입한 도메인은 <code>lostineconomics.com</code>이다. 나는 <code>www.lostineconomics.com</code>을 산 것이 아니었다! 웹 서비스 <code>www</code>을 도메인의 하위 도메인으로 설정할 수 있지만, 구입한 것은 도메인 <code>lostineconomics.com</code>이다. 그리고 하위 도메인에는 <code>www</code>만 있는 것은 아니다. <code>blog.lostineconomics.com</code>이나 <code>mail.lostineconomics.com</code>도 설정할 수 있다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>자세한 내용은 <a href="https://joonius.tistory.com/19">여기</a>를 참고하자.</p>
</div></div><p>보통 도메인 구입처에서 DNS, 도메인네임서버 관련한 기본적인 서비스를 제공한다. 가장 기초적인 서비스는 포워딩 서비스다. 즉, <code>lostineconomics.com</code>을 호출했을 때 이를 다른 도메인으로 연결시켜주는 서비스다. 개념이 직관적이고 이용이 편리하지만, 포워딩되는 주소로 바뀌는 것이 조금 머쓱하다. 도메인 이름이 좋아서 구입했다면, 녀석이 계속 주소 창에 남아야 하지 않겠는가!</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>여기서는 구글 도메인스의 설정을 소개한다. 대체로 많은 도메인 서비스들이 DNS 관련 설정 서비스를 제공하니 업체별로 검색하면 대체로 비슷한 역할을 수행하는 기능을 발견할 수 있을 것이다.</p>
</div></div></section>
<section id="github에-보유-도메인-소유-증명하기" class="level2">
<h2 class="anchored" data-anchor-id="github에-보유-도메인-소유-증명하기">GitHub에 보유 도메인 소유 증명하기</h2>
<p>GitHub Pages는 훌륭한 스태틱 웹 서비스다. js, css 정도를 쓰는 html 문서를 전달하는 데에는 이 보다 싸고 편리한 서비스를 찾기 어려울 것이다. GitHub Pages에는 외부 도메인을 연결할 수 있다. 다만 연결을 위해 몇 가지 절차를 거쳐야 한다.</p>
<section id="도메인-확인하기-1-github" class="level3">
<h3 class="anchored" data-anchor-id="도메인-확인하기-1-github">도메인 확인하기 1 (GitHub)</h3>
<p>먼저 연결하고자 하는 도메인이 소유자의 것이 맞는지를 확인하는 절차가 필요하다. 깃허브의 계정 <code>Settings</code> &gt; “Code, planning, and autiomation” 섹션에 <code>Pages</code>라는 항목으로 들어가보자.</p>
<p><code>www</code>를 제외하고 구입한 도메인 이름을 넣으면 아래와 같은 창이 뜬다. 1번은 도메인의 앞에 붙여줄 하위 주소 이름이고, 2번은 이를 인증할 수 있는 값이다. 이 창을 띄워 두고 도에인 구입처로 가자. 두 값은 아래 그림처럼 버튼을 통해 복사하면 된다.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 60.0%;justify-content: center;">
<figure class="figure">
<p><a href="images/verifying-domain-masked.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://www.lostineconomics.com/posts/computer-tool/images/verifying-domain-masked.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
<p>자세한 내용은 <a href="https://docs.github.com/ko/pages/configuring-a-custom-domain-for-your-github-pages-site/verifying-your-custom-domain-for-github-pages">여기</a>를 확인하자.</p>
</section>
<section id="도메인-확인하기-2-google-domains" class="level3">
<h3 class="anchored" data-anchor-id="도메인-확인하기-2-google-domains">도메인 확인하기 2 (Google Domains)</h3>
<p>구글 도메인스를 비롯한 도메인 구입처는 대체로 DNS와 관련해서 다양한 서비스를 제공한다.</p>
<ul>
<li>인증하려는 도메인의 DNS 설정 메뉴로 가자.</li>
<li><code>맞춤 레코드 관리</code> &gt; <code>새 레코드 만들기</code></li>
<li>아래 그림에 각 번호에 위 GitHub 인증 메뉴의 1, 2번을 붙여 넣고 저장한다.
<ul>
<li>1번은 “호스트 이름”이고 2번은 “데이터”다.</li>
<li>“유형”은 “TXT”로 설정한다.</li>
<li>옆의 3600은 그대로 두면 된다. 구글 도메인스에서도 이를 권장한다.</li>
</ul></li>
</ul>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 60.0%;justify-content: center;">
<figure class="figure">
<p><a href="images/position.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://www.lostineconomics.com/posts/computer-tool/images/position.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
</section>
<section id="도메인-확인하기-3-github" class="level3">
<h3 class="anchored" data-anchor-id="도메인-확인하기-3-github">도메인 확인하기 3 (GitHub)</h3>
<p>다시 <code>Pages</code> 설정 메뉴로 돌아가서 <code>verify</code>를 눌러준다. 설정되는데 다소 시간이 걸리지만 “verifyig”을 눌러 요구하다보면 인증이 된다. 앞서 도메인 서비스에서 설정한 값이 해당 DNS에 반영되고 이를 깃허브에서 끌어와 확인하면 도메인 소유 확인이 완료된다.</p>
</section>
</section>
<section id="github-pages를-도메인에-연결하기" class="level2">
<h2 class="anchored" data-anchor-id="github-pages를-도메인에-연결하기">GitHub Pages를 도메인에 연결하기</h2>
<p>특정한 리포지터리의 깃허브 페이지(<code>{유저-ID}.github.io/{리포지터리-이름}</code>)를 도메인과 연결하기 위해서는 두 가지 과정이 필요하다. Google Domains에서 DNS 설정을 통해 CNAME을 설정해야 한다. CNAME이란 도메인의 이름에서 도메인의 이름으로 연결해주기 위한 설정이라고 생각하면 쉽다. 앞서와 같이 구글 도메인스의 DNS 설정으로 가자.</p>
<section id="도메인-연결-1-google-domains" class="level3">
<h3 class="anchored" data-anchor-id="도메인-연결-1-google-domains">도메인 연결 1 (Google Domains)</h3>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 60.0%;justify-content: center;">
<figure class="figure">
<p><a href="images/cname.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://www.lostineconomics.com/posts/computer-tool/images/cname.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
<p>위 그림에서 보듯이 유형을 “CNAME”으로 잡는다. 이제 구입한 도메인 앞에 접두어(하위 도메인)이 들어간다. 가장 흔하게 쓸 수 있는 것이 <code>www</code>다. 즉, <code>www.lostineconomics.com</code>을 치면 어디로 포워딩되어야 하는지를 표시하면 된다. 호스트 이름이 <code>www</code>가 되고, 데이터는 <code>anarinsk.github.io</code>가 된다.</p>
<p>주의할 점; 데이터에 해당 것허브 페이지스의 주소가 <code>/{리포시터리-이름}</code>까지 전부 전달되어야 할 것 같지만, 깃허브 페이지스의 최상위 페이지까지만 DNS에 전달해야 한다. 이후 과정은 연결은 GitHub Pages의 몫이다. <code>/</code>가 들어간 디렉토리는 전달할 수 없다. <code>{이용자-ID}.github.io</code>까지만 전달하면 해당 깃허브 페이지스의 디렉토리 자원과 도메인의 연결이 자동적으로 이루어진다.</p>
<p>해당 도메인이 깃허브 페이지까지 잘 연결되는지 보려면, 아래의 셸 명령을 활용해보자.</p>
<pre class="shell"><code>$ dig www.lostineconomics.com +nostats +nocomments +nocmd</code></pre>
<p>윈도 파워셸에는 <code>dig</code> 명령어가 없다. 설치가 가능하니 검색을 통해 적절히 방법을 찾으시라. 결과가 <code>{이용자-ID}.github.io</code>까지 잘 타고 들어가는지 확인하면 된다. 뒤에서 다루겠지만 여기서 IP 주소도 확인할 수 있는데, 이 녀석들이 설정에서 다시 활용될 수 있다.</p>
</section>
<section id="도메인-연결-2-github-pages" class="level3">
<h3 class="anchored" data-anchor-id="도메인-연결-2-github-pages">도메인 연결 2 (GitHub Pages)</h3>
<p>이제 연결을 윈하는 리포지터리의 <code>Settings</code> &gt; <code>Pages</code>로 가자. “Custom domain” 메뉴에 앞서 설정한 주소, 즉 <code>www.lostineconomics.com</code>을 입력하고 저장하면 된다.</p>
</section>
<section id="정리-및-응용" class="level3">
<h3 class="anchored" data-anchor-id="정리-및-응용">정리 및 응용</h3>
<p>흐름을 정리해보자. 도메인의 네임 서버(DNS)가 {이용자-ID}.github.io까지 타고 들어가면 깃허브 페이지스의 설정이 해당 주소를 해당 페이지스의 랜딩 페이지와 연결한다. 따라서 크게 작업 흐름을 정리해보면 다음과 같다.</p>
<ol type="1">
<li>구글 도메인스에서 내가 원하는 도메인 이름이 것히브 페이지스 도메인(<code>{개별-ID}.github.io</code>)에 연결되도록 설정한다.</li>
<li>1이 되도록 하기 위해서 깃허브에서 내가 구입한 도메인을 인증헤야 한다.</li>
<li>각 리퍼지토리의 깃허브 페이지스 설정에서 1의 도메인이 해당 리포의 페이지를 호출할 수 있도록 연결한다.</li>
</ol>
<p>도메인으로 꼭 <code>www</code>만 써야 할까? 아니다. 다른 이름도 가능하다. 예를 들어, DNS의 레코드 관리에서 호스트의 이름으로 <code>blog</code> 설정하면 이 녀석은 <code>blog.lostineconomics.com</code>을 <code>anrinsk.github.io</code>까지 연결하고, 개별 리포에서 <code>blog.lostineconomics.com</code>을 지정하면 해당 깃허브 페이지스로 다시 연결된다. 같은 도메인 주소를 갖고 있어도 앞에 호스트 네임을 바꿔서 설정하면, 여러 깃허브 페이지스로 연결할 수 있다.</p>
</section>
</section>
<section id="곁눈질-www가-없는-호출-포위딩하기" class="level2">
<h2 class="anchored" data-anchor-id="곁눈질-www가-없는-호출-포위딩하기">곁눈질; <code>www</code>가 없는 호출 포위딩하기</h2>
<p>웹페이지에 들어갈 때 <code>www</code>를 쓰지 않는 경우가 있다. 이런 경우에도 해당 페이지로 잘 안내되는 것은 최상위 도메인이 <code>www</code> 등이 붙은 하위 도메인으로 연결되기 때문이다. 이를 구현하려면 구글 도메인스 DNS 설정에서 “A” 유형을 추가하면 된다. A 유형은 해당 호출을 바로 IP로 연결해준다. 해당 IP는 앞서 설정한 CNAME과 같기 때문에 원 도메인이 CNAME 도메인으로 연결된다.</p>
<p>앞서 <code>dig</code> 명령을 실행하면 포워딩되는 IP 주소를 확인할 수 있다. 이를 DNS 레코드 관리에서 설정해주자. 도메인 이름은 비워둔다. 유형에는 “A”를 설정하고, 데이터에는 연결되는 IP 주소를 가급적 다 적어주자.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 60.0%;justify-content: center;">
<figure class="figure">
<p><a href="images/atype.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://www.lostineconomics.com/posts/computer-tool/images/atype.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
<p>구글 도메인의 전체적인 DNS 설정을 한번 정리해보자.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 60.0%;justify-content: center;">
<figure class="figure">
<p><a href="images/google-domains.png" class="lightbox" data-gallery="quarto-lightbox-gallery-5"><img src="https://www.lostineconomics.com/posts/computer-tool/images/google-domains.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
<table class="table">
<colgroup>
<col style="width: 23%">
<col style="width: 19%">
<col style="width: 19%">
<col style="width: 19%">
<col style="width: 19%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">유형</th>
<th style="text-align: left;">기능</th>
<th style="text-align: left;">호스트 이름</th>
<th style="text-align: left;">데이터</th>
<th style="text-align: left;">예시</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">A</td>
<td style="text-align: left;">원 도메인을 IP로 연결</td>
<td style="text-align: left;"></td>
<td style="text-align: left;">IP 주소</td>
<td style="text-align: left;">yours.com → <br> 185.XXX.1X8.15X</td>
</tr>
<tr class="even">
<td style="text-align: center;">TXT</td>
<td style="text-align: left;">도메인 소유 여부 입증</td>
<td style="text-align: left;">깃허브 계정 설정 제공</td>
<td style="text-align: left;">깃허브 계정 설정 제공</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;">CNAME</td>
<td style="text-align: left;">해당 DNS에서 호출되는 이름을 다른 이름으로 연결</td>
<td style="text-align: left;"><code>www</code>, <code>blog</code>, …</td>
<td style="text-align: left;">연결될 도메인 이름</td>
<td style="text-align: left;">www.yours.com → <br> yours.github.io (호출한 리포의 페이지스로 연결)</td>
</tr>
</tbody>
</table>
</section>
<section id="참고자료" class="level2">
<h2 class="anchored" data-anchor-id="참고자료">참고자료</h2>
<ul>
<li><a href="https://docs.github.com/ko/pages/configuring-a-custom-domain-for-your-github-pages-site/verifying-your-custom-domain-for-github-pages">깃허브; 도메인 인증</a></li>
<li><a href="https://docs.github.com/ko/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages">깃허브; 깃허브 페이지스 커스텀 도메인 설정</a></li>
<li><a href="https://support.google.com/domains/answer/3290350">구글 도메인스; DNS 레코드 설정</a></li>
</ul>


</section>

 ]]></description>
  <category>computer-tool</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-12-22-my-domains.html</guid>
  <pubDate>Wed, 21 Dec 2022 15:00:00 GMT</pubDate>
  <media:content url="https://kinsta.com/wp-content/uploads/2018/05/what-is-dns.png" medium="image" type="image/png"/>
</item>
<item>
  <title>JupyterLite + GitHub Pages</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-12-06-jupyterlite-githubpages.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>인스톨 없이 주피터 노트북을 사용할 수 있다굽쇼?</li>
</ul>
<section id="not-in-this-post" class="level3">
<h3 class="anchored" data-anchor-id="not-in-this-post">Not in this Post</h3>
<ul>
<li>Jupyter, jupyterlite에 대해서 상세히 다루지 않는다.</li>
<li>Github Pages에 대해서 상세히 다루지 않는다.</li>
</ul>
</section>
<section id="what-in-this-post" class="level3">
<h3 class="anchored" data-anchor-id="what-in-this-post">What in this Post</h3>
<ul>
<li>별도의 인스톨 없이 손 쉽게 웹 브라우저에서 Jupyter 코딩 환경을 구현하는 JupyterLite를 소개한다.</li>
<li>jupyterLite를 github pages에 올리는 방법을 다룬다.</li>
</ul>
</section>
</section>
<section id="jupyterlite" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="jupyterlite">Jupyterlite</h2>
<p>보통 파이썬 작업을 하기 위해서는 사전 설치가 필요하다. 아마도,</p>
<ol type="1">
<li>로컬 PC에 필요한 소프트웨어를 설치한다.</li>
<li>원격 PC에 필요한 소프트웨어를 설치하고, 여타 클라이언트(주로 웹 브라우저)에서 접속해 활용한다.</li>
</ol>
<p>두 가지 방법 모두 소프트웨어를 어딘가에 까는 과정이 포함된다.</p>
<p>가끔은 ’공통 환경’이 필요할 때가 있다. 강의나 구현물의 시현을 해야 한다면 동일한 결과를 얻는 것이 필요하다. 결과물을 얻은 컴퓨터를 사용하거나 원격 접속을 설정하지 않고 이러한 수준의 공동 환경을 만들 수 있을까? 즉 <code>.ipynb</code>, <code>.py</code> 등의 파일을 교환하는 수준을 넘어선 ’호환성’을 게으르고 편리하게 보장할 수 있을까?</p>
<p>만일 웹 브라우저만 구동해서 이 공통 환경을 빠르게 만들어낼 수 있다면 어떨까? 이를 실현한 것이 <a href="https://github.com/jupyterlite">jupyterLite</a>이다.</p>
<p>주피터 라이트는 가벼운 노트북 환경을 구현하는 것을 목표로 한다. 이 녀석은 아직 시험 단계의 프로젝트지만 많은 주목을 받고 있다. 이때 ’가벼운 노트북’이란 주피터 환경을 구현하는 데 있어 웹 브라우저와 단순한 스태틱 웹 페이지 이외에 어떤 것도 필요하지 않다는 뜻이다.</p>
<p>웹어셈블리(WASM)로 구현된 파이썬 인터프리터를 통해서 브라우저만 있으면 아주 단순한 웹 페이지 하나로 주피터 라이트가 파이썬과 주피터(IDE)의 마법을 부린다. 원래 주피터 노트북이라는 녀석이 서버-클라이언트를 전제로 만들어진 것인데, 여기서 서버가 빠진 가벼운 변종이 주피터라이트다.</p>
<section id="패키지-설치" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="패키지-설치">패키지 설치</h3>
<p>여기까지 들으면 ‘웹 브라우저에서 도는 것은 좋은데 패키지 설치는 가능해?’ 라고 묻고 싶어질 터. 답부터 말하면, 가능하지만 전부 가능한 것은 아니다. ’일반적’으로 많이 쓰는 패키지인 pandas, numpy, scipy, scikit-learn 등은 거의 주피터라이트 위에 쉽게 올라간다. 대단한 복잡도를 지닌 앱이 아니라 개념을 입증하는 프로토타입 특히 교육용으로 주피터를 쓰려는 용도라는 주피터라이트로 충분하다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>패키지 설치는 주피터 노트북에서 매직 코멘트(<code>%</code>)를 활용한다. 예를 들어 <code>python %pip install koreanize-matplotlib</code> 한 가지 주의 사항 확인하자. 루트 디렉토리에 있는 <code>requirements.txt</code>에 속지 말자. 이 녀석은 jupyterlab, jupyterlite 그리고 두 개에 필요한 요소를 설치하기 위한 파일이다. 주피터라이트 내에서 돌아가는 파이썬 패키지 설치와는 무관하다. 주피터라이트는 WASM으로 브라우저 안에서 독립적으로 구현된 IDE 환경이다.</p>
</div></div><p>직접 체험해보시는 편이 훨씬 낫다; <a href="https://jupyterlite.github.io/demo/lab/index.html">JupyterLite</a></p>
<p>위의 예에서 보듯이 노트북의 UI로는 주피터랩(기본), 레트로, REPL(Read-Evaluate-Print Loop)를 자유롭게 쓸 수 있다.</p>
</section>
</section>
<section id="github-pages" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="github-pages">Github Pages</h2>
<p>이제 이렇게 만들어진 페이지를 웹을 통한 전달할 경로가 필요하다. 만일 별도로 서버를 복잡하게 세팅해야 한다면 주피터 라이트의 장점도 거의 사라질 것이다.</p>
<p>웹어셈블리는 css, js만 사용한다. 이는 스태틱 웹을 통해서도 주피터라이트가 돌아간다는 의미이다. 그리고 스태틱 웹을 호스팅하는 현존하는 가장 저렴하고 편리한 방식은 GitHub Pages다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>테스트로 빌드한 리포는 <a href="https://anarinsk.github.io/test_jupyterlite/lab/index.html">여기</a>를 참고하자. <code>python-notebooks</code> 디렉토리가 포함되어 있는데, 여기 matplotlib 한글을 구현하는 노트북 등 몇 가지 활용에 참고할 만한 간단한 예제를 넣어 두었다.</p>
</div></div><p>빌드하고 연동하는 방법이 <a href="https://jupyterlite.readthedocs.io/en/latest/quickstart/deploy.html">공식 페이지</a>에 잘 소개되어 있다. 호스팅을 위해서는 GitHub Actions를 통한 빌드의 과정이 필요한데, 이용자가 크게 신경 쓸 것은 없다. 소개된대로 템플릿을 가져와서 사용하면 된다. 해당 리포의 변형이 있을 떄마다 푸시를 하면 Actions를 통한 build -&gt; Pages를 통한 depoly 과정이 자동으로 발생한다. 주의 사항만 몇가지 적어두자.</p>
<ul>
<li><code>Settings &gt; General</code>에서 “Danger Zone”
<ul>
<li>“Change repository visibility”를 “public”으로 설정</li>
<li>Pro 회원이라면 Private 상태에서도 Pages를 호스팅할 수 있다. 일반 회원의 경우 소스가 공개되어 있어야 Pages 호스팅이 가능하다.</li>
</ul></li>
<li><code>Settings &gt; (왼쪽 탭에서) GitHub Pages</code>에서
<ul>
<li>“Build and deployment” 항목</li>
<li>“Source”를 “Github Actions”로 설정하도록 하자.</li>
</ul></li>
</ul>
<p>설정은 이게 전부이다. 빌드가 잘 되었는지 확인하기 위해서는 상단 탭에서 “Actions”를 선택하자. 빌드가 진행중인지 끝났는지를 확인할 수 있을 것이다. 발드가 끝났다면, 이제 Pages를 방문하도록 하자. 주소는 아래와 같다.</p>
<pre><code>{이용자-깃헙계정}.github.io/{이용자-리포이름}</code></pre>
<section id="자세히-들여다-본-빌드-과정" class="level3">
<h3 class="anchored" data-anchor-id="자세히-들여다-본-빌드-과정">자세히 들여다 본 빌드 과정</h3>
<p>깃허브 디렉토리의 감춰진 디렉토리를 보이게 설정하자. 해당 디렉토리 안에 <code>.github/workflows</code>로 들어가면 <code>deploy.yml</code>이 있다. 이 녀석이 깃허브 액션스의 빌드 순서 및 명렁을 구성한다. 내용을 전부 설명할 필요는 없다. 필요한 부분만 살펴보자.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Setup Python</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">uses</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> actions/setup-python@v4</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">with</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">python-version</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">'3.10'</span></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Install the dependencies</span></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;">    run</span><span class="kw" style="color: #003B4F;">: </span><span class="ch" style="color: #20794D;">|</span></span>
<span id="cb2-7">        python -m pip install -r requirements.txt</span>
<span id="cb2-8"><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Build the JupyterLite site</span></span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;">    run</span><span class="kw" style="color: #003B4F;">: </span><span class="ch" style="color: #20794D;">|</span></span>
<span id="cb2-10">        cp README.md content</span>
<span id="cb2-11">        jupyter lite build \</span>
<span id="cb2-12">            --XeusPythonEnv.packages=scikit-learn,matplotlib,pandas,plotly,ipywidgets,openpyxl \</span>
<span id="cb2-13">            --contents content --output-dir dist</span>
<span id="cb2-14"><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Upload artifact</span></span>
<span id="cb2-15"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">uses</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> actions/upload-pages-artifact@v1</span></span>
<span id="cb2-16"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">with</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-17"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">path</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> ./dist</span></span></code></pre></div>
<div class="callout-tip callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Code Tips
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>-name:</code> | 액션스를 행동을 구분하는 단위의 이름을 지정한다.</li>
<li><code>-name: Setup Python</code> | 깃헙 리포에서 파이썬을 쓰겠다고 선언한다. 버전도 구별할 수 있다.</li>
<li><code>-name: Install the dependencies</code> | 빌드를 위한 파이썬 관련 패키지 설치</li>
<li><code>-name: Build the JupyterLite site</code> | jupyterlite를 빌드한다. 빌드 명령어는 <code>jupyter lite build...</code>에서 확인항 수 있다.
<ul>
<li>이 명령은 기본으로 pyodide 기반의 pyolite 파이썬 커널을 설치한다.</li>
<li><code>XeusPythonEnv.packages=</code> | xeus-python 커널이 추가로 설치되며, 해당 커널에 필요한 패키지를 올린다. 공식 페이지 절차대로 템플릿을 복사해서 썼다면 이 대목이 없을 것이다. 필요하면 <code>deploy.yml</code>에 추가하면 된다.</li>
<li><code>--contents content</code> | 빌드에 사용할 노트북 파일이 들어있는 디렉토리를 지정한다.</li>
<li><code>--output-dir dist</code> | 빌드 결과물이 저장될 디렉토리를 지정한다.</li>
</ul></li>
</ul>
</div>
</div>
<p>별도로 로컬에서 빌드할 때와 명령어 자체는 동일하다. 그 앞 뒤로 깃허브 액션스에 맞는 설정이 들어간다고 보면 되겠다.</p>
</section>
</section>
<section id="github-actions-없이-빌드하고-싶다면" class="level2">
<h2 class="anchored" data-anchor-id="github-actions-없이-빌드하고-싶다면">GitHub Actions 없이 빌드하고 싶다면?</h2>
<p>가능하다. 그리 어렵지도 않다. 아래 링크를 참고하자.</p>
<p><a href="https://github.com/anarinsk/test_jupyterlite-build" class="uri">https://github.com/anarinsk/test_jupyterlite-build</a></p>
</section>
<section id="몇-가지-더" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="몇-가지-더">몇 가지 더</h2>
<section id="커널-관련outdated" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="커널-관련outdated"><del>커널 관련(outdated)</del></h3>
<p>위 빌드 과정에서 보듯이 두 개의 파이썬 커널을 설치했다. 범용성은 pyodide 기반의 pyolite 커널이 낫다. 다만 네트워크 기능을 제대로 쓰기 위해서는 xeus-python이 편리하다. 예를 들어 scikit-learn 패키지에서 데이터를 인터넷으로 끌어오는 <code>fetch</code> 계열의 명령은 XPython 커널에서 제대로 작동한다. pyolite는 네트워크를 네이티브 파이썬 환경처럼 다루지 않는다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>네트워크와 관련한 보다 상세한 내용은 <a href="https://dev.to/openhacking/3-ways-to-implement-network-requests-in-pyodide-4e5n">여기</a>를 참고하도록 하자.</p>
</div></div></section>
<section id="커널-관련updated" class="level3">
<h3 class="anchored" data-anchor-id="커널-관련updated">커널 관련(updated)</h3>
<p>꼭 xeus-python을 써야 하나 싶다. Python의 네트워크 관련 명령들이 <a href="https://github.com/koenvo/pyodide-http">pyodide-http</a> 패키지로 거의 완전하게 해결이 된다. 이 패키지는 기존 명령어를 주피터 라이트에 맞게 패치한다. 아래 코드를 참고하자.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="op" style="color: #5E5E5E;">%</span>pip install <span class="op" style="color: #5E5E5E;">-</span>q pyodide<span class="op" style="color: #5E5E5E;">-</span>http</span>
<span id="cb3-2"><span class="im" style="color: #00769E;">import</span> pyodide_http </span>
<span id="cb3-3">pyodide_http.patch_all() <span class="co" style="color: #5E5E5E;"># 기존 http 관련 명령어 패치 </span></span></code></pre></div>
</section>
<section id="몇-가지-핵심-활용법" class="level3">
<h3 class="anchored" data-anchor-id="몇-가지-핵심-활용법">몇 가지 핵심 활용법</h3>
<p><code>content/python-notebooks</code> 안에 믾이 쓸 것 같은 필요한 활용 용례를 몇 가지 넣어 두었다. 자세한 것은 <a href="https://github.com/anarinsk/test_jupyterlite">README</a>를 참고하면 된다.</p>


</section>
</section>

 ]]></description>
  <category>computer-tool</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-12-06-jupyterlite-githubpages.html</guid>
  <pubDate>Mon, 05 Dec 2022 15:00:00 GMT</pubDate>
  <media:content url="https://jupyterlite.readthedocs.io/en/latest/_static/wordmark.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>matplotlib + 한글 Redux</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-12-04-matplotlib-korfont-redux.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>matplotlib에서 한글 사용 마지막으로 정리한다.</li>
</ul>
</section>
<section id="not-in-this-post" class="level2">
<h2 class="anchored" data-anchor-id="not-in-this-post">Not in this Post</h2>
<ul>
<li>한글 폰트 설치 등의 문제는 다루지 않는다.
<ul>
<li>OS 별 한글 폰트 설치 및 활용 <a href="https://zephyrus1111.tistory.com/7">LINK</a></li>
<li>(리눅스) 컨테이너 내에서 한글 폰트 설치 <a href="https://anarinsk.github.io/lostineconomics_quarto/posts/container/2020-09-24-install-hangul-in-docker.html">LINK</a></li>
</ul></li>
</ul>
</section>
<section id="what-in-this-post" class="level2">
<h2 class="anchored" data-anchor-id="what-in-this-post">What in this Post</h2>
<ul>
<li>matplotlib 그림 안에서 한글 활용의 최종 버전</li>
</ul>
</section>
<section id="matplotlib과-한글의-라벨링" class="level2">
<h2 class="anchored" data-anchor-id="matplotlib과-한글의-라벨링">matplotlib과 한글의 라벨링</h2>
<p>matplotlib은 표준적인 파이썬 시각화 패키지다. 아쉽게도 이 녀석이 한글과 별로 안 친하다. 그래픽 렌더링 엔진에 한글 폰트가 빠져 있어서 이를 추가로 인식을 시켜야 결과물 내에서 한글 라벨을 쓸 수 있다. 가장 간단한 해결 방법은 나눔고딕 폰트를 쓸 수 있게 해주는 패키지 <a href="https://github.com/seongminp/koreanize-matplotlib">koreanize-matplotlib</a>를 쓰는 것이다.</p>
<p>먼저 문제부터 살펴보자. 테스트를 위해서 아래 코드에 간단한 함수 <code>draw_sample(fontprop)</code>를 작성했다. 인자 <code>fontprop</code>은 그래프 요소에 적용될 폰트 특성이다. 값이 없으면 전역적으로 설정된 내용에 따른다.</p>
<div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> matplotlib <span class="im" style="color: #00769E;">as</span> mpl</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> matplotlib.font_manager <span class="im" style="color: #00769E;">as</span> fm</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;"># 그릴 데이터 생성 </span></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;">def</span> draw_sample(fontprop<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">None</span>): </span>
<span id="cb1-8">    data <span class="op" style="color: #5E5E5E;">=</span> np.random.randint(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">50</span>).cumsum()</span>
<span id="cb1-9">    plt.plot(<span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">50</span>), data, <span class="st" style="color: #20794D;">'r'</span>)</span>
<span id="cb1-10">    plt.title(<span class="st" style="color: #20794D;">'가격변동 추이'</span>, fontproperties<span class="op" style="color: #5E5E5E;">=</span>fontprop)</span>
<span id="cb1-11">    plt.ylabel(<span class="st" style="color: #20794D;">'가격'</span>, fontproperties<span class="op" style="color: #5E5E5E;">=</span>fontprop)</span>
<span id="cb1-12">    plt.show()</span>
<span id="cb1-13"></span>
<span id="cb1-14">draw_sample()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stderr">
<pre><code>C:\Users\junsokhuhh\Miniconda3\envs\for-quarto\lib\site-packages\IPython\core\pylabtools.py:152: UserWarning: Glyph 44032 (\N{HANGUL SYLLABLE GA}) missing from current font.
  fig.canvas.print_figure(bytes_io, **kw)
C:\Users\junsokhuhh\Miniconda3\envs\for-quarto\lib\site-packages\IPython\core\pylabtools.py:152: UserWarning: Glyph 44201 (\N{HANGUL SYLLABLE GYEOG}) missing from current font.
  fig.canvas.print_figure(bytes_io, **kw)
C:\Users\junsokhuhh\Miniconda3\envs\for-quarto\lib\site-packages\IPython\core\pylabtools.py:152: UserWarning: Glyph 48320 (\N{HANGUL SYLLABLE BYEON}) missing from current font.
  fig.canvas.print_figure(bytes_io, **kw)
C:\Users\junsokhuhh\Miniconda3\envs\for-quarto\lib\site-packages\IPython\core\pylabtools.py:152: UserWarning: Glyph 46041 (\N{HANGUL SYLLABLE DONG}) missing from current font.
  fig.canvas.print_figure(bytes_io, **kw)
C:\Users\junsokhuhh\Miniconda3\envs\for-quarto\lib\site-packages\IPython\core\pylabtools.py:152: UserWarning: Glyph 52628 (\N{HANGUL SYLLABLE CU}) missing from current font.
  fig.canvas.print_figure(bytes_io, **kw)
C:\Users\junsokhuhh\Miniconda3\envs\for-quarto\lib\site-packages\IPython\core\pylabtools.py:152: UserWarning: Glyph 51060 (\N{HANGUL SYLLABLE I}) missing from current font.
  fig.canvas.print_figure(bytes_io, **kw)</code></pre>
</div>
<div class="cell quarto-layout-panel" data-execution_count="1">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 77.8%;justify-content: center;">
<figure class="figure">
<p><a href="2022-12-04-matplotlib-korfont-redux_files/figure-html/cell-2-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://www.lostineconomics.com/posts/computer-tool/2022-12-04-matplotlib-korfont-redux_files/figure-html/cell-2-output-2.png" class="img-fluid figure-img" width="604"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
</div>
<p>위 결과에서 보듯이 한글 폰트가 없으니 출력이 제대로 되지 않는다. 이제 <code>koreanize-matplotlib</code> 패키지를 설치하고 import 후 실행해보자</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;">$</span> pip install koreanize-matplotlib </span></code></pre></div>
<div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;">import</span> koreanize_matplotlib</span>
<span id="cb4-2">draw_sample()</span></code></pre></div>
</details>
<div class="cell quarto-layout-panel" data-execution_count="2">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 77.8%;justify-content: center;">
<figure class="figure">
<p><a href="2022-12-04-matplotlib-korfont-redux_files/figure-html/cell-3-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://www.lostineconomics.com/posts/computer-tool/2022-12-04-matplotlib-korfont-redux_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img" width="592"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
</div>
<p><code>koreanize-matplotlib</code> 패키지는 나눔고딕 폰트를 자동으로 설치하고 이를 폰트로 잡아 준다. 위에 보는 것처럼 한글 출력에 문제가 없다.</p>
</section>
<section id="koreanize-matploitlib-이외의-대안" class="level2">
<h2 class="anchored" data-anchor-id="koreanize-matploitlib-이외의-대안">koreanize-matploitlib 이외의 대안</h2>
<p><code>koreanize-matplotlib</code>이 간편하고 좋은 해결책이지만 다른 방법도 있다. 만일을 위해 두 가지를 더 알아보자.</p>
</section>
<section id="노트북에서-한글-폰트-가져오기" class="level2">
<h2 class="anchored" data-anchor-id="노트북에서-한글-폰트-가져오기">노트북에서 한글 폰트 가져오기</h2>
<p>앞서 링크에서 소개한 폰트 추가 방법은 시스템에 폰트를 먼저 깔고 해당 폰트를 matplotlib에 등록하는 방법이다. pyodide에서 활용할 수 있는 다른 방법은 없을까? 아래 소개할 방법은 ttf 폰트 파일을 바로 matplotlib이 쓸 수 있게 해주는 방법이다.</p>
<div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">font_path <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'./font/D2Coding v.1.3.2 ligature Nerd Font Complete.ttf'</span> <span class="co" style="color: #5E5E5E;"># 폰트 파일의 위치에 따라서 조정</span></span>
<span id="cb5-2">font_callsign <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'D2 Coding Nerd'</span></span>
<span id="cb5-3">fe <span class="op" style="color: #5E5E5E;">=</span> fm.FontEntry(</span>
<span id="cb5-4">    fname<span class="op" style="color: #5E5E5E;">=</span>font_path,</span>
<span id="cb5-5">    name<span class="op" style="color: #5E5E5E;">=</span>font_callsign) <span class="co" style="color: #5E5E5E;"># 원하는 폰트 호출 이름 설정 </span></span>
<span id="cb5-6">fm.fontManager.ttflist.insert(<span class="dv" style="color: #AD0000;">0</span>, fe) <span class="co" style="color: #5E5E5E;"># or simply append</span></span></code></pre></div>
</details>
<div class="cell quarto-layout-panel" data-execution_count="3">

</div>
</div>
<div class="callout-tip callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Code Tips
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>fm.FontEntry...</code> 한글 폰트를 matplotlib의 폰트 매니저에 바로 심어주는 명령
<ul>
<li><code>font_path</code>: 폰트의 ttf 파일의 위치와 파일 이름을 지정한다. 각자 알맞게 조정하자.</li>
<li><code>font_callsign</code>: 내가 지정할 폰트의 이름, 폰트를 호출할 때 활용한다. 각자 취향대로 바꾸자.</li>
</ul></li>
</ul>
</div>
</div>
<p>위 방법의 장점은 폰트의 위치를 가리지 않는다는 것이다. 적당한 위치에 두고 matplotlib이 쓸 수 있도록 폰트를 인식시키는 방식이다. 폰트가 잘 인식되었는지 확인해보자.</p>
<div class="cell" data-execution_count="4">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="bu" style="color: null;">print</span>([(f.name, f.fname) <span class="cf" style="color: #003B4F;">for</span> f <span class="kw" style="color: #003B4F;">in</span> mpl.font_manager.fontManager.ttflist <span class="cf" style="color: #003B4F;">if</span> (<span class="st" style="color: #20794D;">'D2'</span> <span class="kw" style="color: #003B4F;">in</span> f.name) <span class="op" style="color: #5E5E5E;">|</span> (<span class="st" style="color: #20794D;">'Nanum'</span> <span class="kw" style="color: #003B4F;">in</span> f.name) ])</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[('D2 Coding Nerd', './font/D2Coding v.1.3.2 ligature Nerd Font Complete.ttf'), ('NanumMyeongjo', 'C:\\WINDOWS\\Fonts\\NanumMyeongjo.ttf'), ('NanumBarunpen', 'C:\\WINDOWS\\Fonts\\NanumBarunpenR.ttf'), ('NanumBarunGothic', 'C:\\Windows\\Fonts\\NanumBarunGothic.ttf'), ('NanumGothic', 'C:\\Windows\\Fonts\\NanumGothic.ttf'), ('NanumBarunGothic', 'C:\\Windows\\Fonts\\NanumBarunGothicBold.ttf'), ('NanumSquareRound', 'C:\\WINDOWS\\Fonts\\NanumSquareRoundEB.ttf'), ('NanumMyeongjo', 'C:\\Windows\\Fonts\\NanumMyeongjoBold.ttf'), ('NanumGothic', 'C:\\WINDOWS\\Fonts\\NanumGothicExtraBold.ttf'), ('NanumBarunGothic', 'C:\\WINDOWS\\Fonts\\NanumBarunGothicUltraLight.ttf'), ('Nanum Brush Script', 'C:\\Windows\\Fonts\\NanumBrush.ttf'), ('NanumBarunGothicOTF', 'C:\\Windows\\Fonts\\NanumBarunGothic.otf'), ('NanumMyeongjo', 'C:\\Windows\\Fonts\\NanumMyeongjo.ttf'), ('NanumGothic', 'C:\\Windows\\Fonts\\NanumGothicBold.ttf'), ('NanumBarunGothicOTF', 'C:\\Windows\\Fonts\\NanumBarunGothicBold.otf'), ('NanumBarunGothicOTF', 'C:\\Windows\\Fonts\\NanumBarunGothicUltraLight.otf'), ('NanumBarunGothicOTF', 'C:\\WINDOWS\\Fonts\\NanumBarunGothicBold.otf'), ('NanumSquareRound', 'C:\\WINDOWS\\Fonts\\NanumSquareRoundL.ttf'), ('NanumBarunGothicOTF', 'C:\\WINDOWS\\Fonts\\NanumBarunGothic.otf'), ('NanumSquare', 'C:\\Windows\\Fonts\\NanumSquareR.ttf'), ('Nanum Pen Script', 'C:\\Windows\\Fonts\\NanumPen.ttf'), ('NanumBarunGothicOTF', 'C:\\WINDOWS\\Fonts\\NanumBarunGothicUltraLight.otf'), ('Nanum Pen Script', 'C:\\WINDOWS\\Fonts\\NanumPen.ttf'), ('NanumGothic', 'C:\\Windows\\Fonts\\NanumGothicLight.ttf'), ('NanumBarunGothic', 'C:\\Windows\\Fonts\\NanumBarunGothicLight.ttf'), ('D2Codingligature Nerd Font', 'C:\\Users\\junsokhuhh\\AppData\\Local\\Microsoft\\Windows\\Fonts\\D2Coding v.1.3.2 ligature Nerd Font Complete.ttf'), ('NanumSquareRound', 'C:\\Windows\\Fonts\\NanumSquareRoundL.ttf'), ('NanumBarunGothic', 'C:\\Windows\\Fonts\\NanumBarunGothicUltraLight.ttf'), ('NanumSquare', 'C:\\WINDOWS\\Fonts\\NanumSquareB.ttf'), ('NanumGothic', 'C:\\Windows\\Fonts\\NanumGothicExtraBold.ttf'), ('NanumMyeongjo', 'C:\\WINDOWS\\Fonts\\NanumMyeongjoExtraBold.ttf'), ('NanumSquareRound', 'C:\\Windows\\Fonts\\NanumSquareRoundB.ttf'), ('NanumSquare', 'C:\\Windows\\Fonts\\NanumSquareL.ttf'), ('Nanum Brush Script', 'C:\\WINDOWS\\Fonts\\NanumBrush.ttf'), ('NanumMyeongjo', 'C:\\Windows\\Fonts\\NanumMyeongjoExtraBold.ttf'), ('NanumBarunpen', 'C:\\WINDOWS\\Fonts\\NanumBarunpenB.ttf'), ('NanumBarunGothic', 'C:\\WINDOWS\\Fonts\\NanumBarunGothic.ttf'), ('NanumSquareRound', 'C:\\Windows\\Fonts\\NanumSquareRoundR.ttf'), ('NanumGothic', 'C:\\WINDOWS\\Fonts\\NanumGothicLight.ttf'), ('NanumSquare', 'C:\\WINDOWS\\Fonts\\NanumSquareL.ttf'), ('NanumSquareRound', 'C:\\WINDOWS\\Fonts\\NanumSquareRoundR.ttf'), ('NanumSquareRound', 'C:\\Windows\\Fonts\\NanumSquareRoundEB.ttf'), ('NanumGothic', 'C:\\WINDOWS\\Fonts\\NanumGothic.ttf'), ('NanumGothic', 'C:\\WINDOWS\\Fonts\\NanumGothicBold.ttf'), ('NanumSquare', 'C:\\Windows\\Fonts\\NanumSquareB.ttf'), ('NanumSquare', 'C:\\Windows\\Fonts\\NanumSquareEB.ttf'), ('D2Coding Nerd Font', 'C:\\Users\\junsokhuhh\\AppData\\Local\\Microsoft\\Windows\\Fonts\\D2Coding v.1.3.2 Nerd Font Complete.ttf'), ('NanumSquareRound', 'C:\\WINDOWS\\Fonts\\NanumSquareRoundB.ttf'), ('NanumBarunGothic', 'C:\\WINDOWS\\Fonts\\NanumBarunGothicLight.ttf'), ('NanumGothicCoding', 'C:\\Users\\junsokhuhh\\AppData\\Local\\Microsoft\\Windows\\Fonts\\NanumGothicCoding-Bold.ttf'), ('NanumBarunpen', 'C:\\Windows\\Fonts\\NanumBarunpenB.ttf'), ('NanumSquare', 'C:\\WINDOWS\\Fonts\\NanumSquareR.ttf'), ('NanumGothicCoding', 'C:\\Users\\junsokhuhh\\AppData\\Local\\Microsoft\\Windows\\Fonts\\NanumGothicCoding.ttf'), ('NanumBarunGothicOTF', 'C:\\Windows\\Fonts\\NanumBarunGothicLight.otf'), ('NanumBarunpen', 'C:\\Windows\\Fonts\\NanumBarunpenR.ttf'), ('NanumBarunGothicOTF', 'C:\\WINDOWS\\Fonts\\NanumBarunGothicLight.otf'), ('NanumMyeongjo', 'C:\\WINDOWS\\Fonts\\NanumMyeongjoBold.ttf'), ('NanumSquare', 'C:\\WINDOWS\\Fonts\\NanumSquareEB.ttf'), ('NanumBarunGothic', 'C:\\WINDOWS\\Fonts\\NanumBarunGothicBold.ttf'), ('NanumGothic', 'C:\\Users\\junsokhuhh\\Miniconda3\\envs\\for-quarto\\lib\\site-packages\\koreanize_matplotlib\\fonts\\NanumGothic.ttf')]</code></pre>
</div>
</div>
</section>
<section id="활용" class="level2">
<h2 class="anchored" data-anchor-id="활용">활용</h2>
<p>matplotlib에서 폰트를 활용하는 방법은 두 가지다. 하나는 폰트의 속성을 지정해놓고 해당 폰트가 활용될 때 이를 호출해서 쓰는 방법이고, 다른 하나는 전역적으로 해당 폰트를 기본 폰트로 지정하는 것이다.</p>
<section id="호출해서-활용" class="level3">
<h3 class="anchored" data-anchor-id="호출해서-활용">호출해서 활용</h3>
<p>아래 결과에서 보듯이, fontprop을 통해 지정된 폰트 양식을 그래프 요소에 적용해보자.</p>
<div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">fontprop <span class="op" style="color: #5E5E5E;">=</span> fm.FontProperties(fname<span class="op" style="color: #5E5E5E;">=</span>font_path, size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb8-2">draw_sample(fontprop)</span></code></pre></div>
</details>
<div class="cell quarto-layout-panel" data-execution_count="5">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 77.8%;justify-content: center;">
<figure class="figure">
<p><a href="2022-12-04-matplotlib-korfont-redux_files/figure-html/cell-6-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://www.lostineconomics.com/posts/computer-tool/2022-12-04-matplotlib-korfont-redux_files/figure-html/cell-6-output-1.png" class="img-fluid figure-img" width="597"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
</div>
</section>
<section id="전역으로-활용" class="level3">
<h3 class="anchored" data-anchor-id="전역으로-활용">전역으로 활용</h3>
<p>폰트 속성을 전역으로 지정하고 그래프를 그려보자.</p>
<div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># rcParams 설정</span></span>
<span id="cb9-2">plt.rcParams[<span class="st" style="color: #20794D;">"font.family"</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'D2 Coding Nerd'</span></span>
<span id="cb9-3">plt.rcParams[<span class="st" style="color: #20794D;">'font.size'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">15.</span></span>
<span id="cb9-4">plt.rcParams[<span class="st" style="color: #20794D;">'xtick.labelsize'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">12.</span></span>
<span id="cb9-5">plt.rcParams[<span class="st" style="color: #20794D;">'ytick.labelsize'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">12.</span></span>
<span id="cb9-6">plt.rcParams[<span class="st" style="color: #20794D;">'axes.labelsize'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">12.</span></span>
<span id="cb9-7">plt.rcParams[<span class="st" style="color: #20794D;">'axes.unicode_minus'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span></span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;"># 그림 그리기 </span></span>
<span id="cb9-10">draw_sample()</span></code></pre></div>
</details>
<div class="cell quarto-layout-panel" data-execution_count="6">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 77.8%;justify-content: center;">
<figure class="figure">
<p><a href="2022-12-04-matplotlib-korfont-redux_files/figure-html/cell-7-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://www.lostineconomics.com/posts/computer-tool/2022-12-04-matplotlib-korfont-redux_files/figure-html/cell-7-output-1.png" class="img-fluid figure-img" width="605"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>computer-tool</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-12-04-matplotlib-korfont-redux.html</guid>
  <pubDate>Sat, 03 Dec 2022 15:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/max/1400/1*aUSZsGFCMPNYCkQygs4aGQ.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Shannon’s Entropy</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/machine-learning/2022-11-29-shannon-entropy.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">tl; dr</h2>
<ul>
<li>섀넌의 (정보) 엔트로피에 대해서 궁금했던 것들</li>
</ul>
</section>
<section id="이-글은-왜-쓰나" class="level2">
<h2 class="anchored" data-anchor-id="이-글은-왜-쓰나">이 글은 왜 쓰나?</h2>
<p>섀넌의 엔트로피는 일상적으로 쓰고 중요한 개념이지만 정작 그 개념의 핵심이 뭔지 잊을 때가 있다. 내가 지금 그 꼴이고 그래서 정리 삼아서 포스트를 하나 남겨 보겠다. 미리 밝혀두겠다. 섀넌의 엔트로피와 그 역사적 의미 등 대해서는 좋은 책도 많고 구글링을 하면 이 글보다 좋은 자료가 많이 나온다. 이런 부분을 여기서 반복하지는 않겠다.</p>
</section>
<section id="정의" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="정의">정의</h2>
<p>섀넌의 정보 엔트로피 <img src="https://latex.codecogs.com/png.latex?H(X)">의 정의는 다음과 같다. <img src="https://latex.codecogs.com/png.latex?X">는 확률 변수라고 하자. <img src="https://latex.codecogs.com/png.latex?%5Cchi">는 적절한 임의의 가측 집합을 뜻하는데, 일단 넘어가도록 하자.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>약간을 사설을 늘어 놓으면, 확률 변수는 사건으로 존재하는 실험 집합(sample space)을 실수 공간으로 매핑하는 함수다. 이렇게 매핑된 실수 값은 확률 분포를 지니게 되고, 여러가지 계산을 도모할 수 있다.</p>
</div></div><p><img src="https://latex.codecogs.com/png.latex?%0AH(X)=-%5Csum_%7Bx%20%5Cin%20%5Cchi%7D%20p(x)%20%5Clog%20p(x)%20=%20%5Cmathbb%20E%20%5B-%5Clog%20p(x)%5D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20E(%5Ccdot)">의 표현이 보여주듯이 <img src="https://latex.codecogs.com/png.latex?H(X)">는 <img src="https://latex.codecogs.com/png.latex?%5Clog%20%5Cfrac%7B1%7D%7Bp(x)%7D">의 기댓값이다. 이 녀석을 먼저 들여다보자. <img src="https://latex.codecogs.com/png.latex?%5Clog%20%5Cfrac%7B1%7D%7Bp(x)%7D">는 확률 변수 <img src="https://latex.codecogs.com/png.latex?X">에서 <img src="https://latex.codecogs.com/png.latex?x">에 대응하는 사건이 일어날 확률이 주는 ’놀라움’의 크기로 해석할 수 있다. <img src="https://latex.codecogs.com/png.latex?p(x)=1">인 사건은 놀랍지 않다. 확실히 일어나는 사건이기 때문이다. 반면 일어날 확률이 높지 않은 사건은 놀라운 사건이다. 따라서 이러한 놀라움의 정도는 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Bp(x)%7D">로 측정할 수 있다. 여기에 계산의 편의성을 위해서 <img src="https://latex.codecogs.com/png.latex?%5Clog">를 취한다. 이렇게 계산된 기댓값이 섀넌의 엔트로피다.</p>
<p>엔트로피, 즉 무질서의 정도라는 말이 함축하듯이 주어진 확률 변수의 구조가 무작위일수록 엔트로피가 클 것이다. 반면 확률 변수의 구조가 무작위에서 멀어질수록 엔트로피가 줄어든다. (공정한) 동전 던지기와 (공정한) 주사위 던지기를 생각해보자. 어느 쪽이 엔트로피가 클까? 주사위 던지기 쪽이 크다. 확률이 각각 1/2, 1/6로 같다면 <img src="https://latex.codecogs.com/png.latex?H">를 결정하는 것은 <img src="https://latex.codecogs.com/png.latex?%5Clog_%7B2%7D%20%7B2%7D">과 <img src="https://latex.codecogs.com/png.latex?%5Clog_%7B2%7D%20%7B6%7D">이 된다. 보다 직관적으로 말해보자. 공정한 동전 던지기는 앞면 아니면 뒷면이다. 공정한 주사위는 6가지 경우의 수가 나온다. 후자의 불확실성, 즉 무질서한 정도가 더 크다.</p>
</section>
<section id="정보-엔트로피는-왜-유용할까" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="정보-엔트로피는-왜-유용할까">정보 엔트로피는 왜 유용할까?</h2>
<p>정보가 확률적으로 제공된다고 하자. 이 말은 정보를 일종의 확률 분포의 구조로 보겠다는 뜻이다. 영어 책 한권이 있다고 할 때 그 한권에 들어 있는 알파벳의 분포를 생각하면 된다. 확률 분포로 본 정보가 어느 정도의 엔트로피를 지니고 있는지를 요약하는 지표가 섀넌의 엔트로피다. 이러한 요약이 왜 중요할까? 이 정보를 디지털로 인코딩하는 일을 떠올려보자. 어떻게 하면 보다 효율적으로 정보를 가공할 수 있을까? 이에 지침이 되는 것이 섀넌의 엔트로피다. 사례로 살펴보자.</p>
<p>ABCD가 동일한 비율로 존재하는 정보가 있다고 하자. 이 정보를 디지털로 인코딩하려면 2비트를 사용하면 된다. 2비트로 인코딩할 수 있는 경우의 수가 4가지이기 때문이다. A는 <code>00</code>, B는 <code>01</code>, C는 <code>10</code>, D는 <code>11</code>로 인코딩할 수 있다.</p>
<p>이제 (실제의 알파벳 정보가 그렇듯이) ABCD로 구성된 정보가 다른 분포를 지닌다고 해보자. A는 0.7, B는 0.26, C와 D는 0.02의 확률로 분포한다. 이 정보를 디지털로 인코딩하려면 얼마나 많은 비트를 사용해야 할까? 2비트로 할 수도 있지만 이는 일종의 낭비다. 70%가 A라면 이 녀석을 보다 간단하게 인코딩하면 비트 크기를 아낄 수 있다. 예를 들어, A는 <code>0</code>, B는 <code>01</code>, C와 D는 각각 <code>100</code>, <code>110</code>으로 인코딩한다고 해보자. 이 인코딩은 비트를 절약해줄까? 그렇다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>비트를 더 절약하는 방법이 있긴 하다. C, D를 <code>10</code>, <code>11</code>로 인코딩하면 비트를 더 절약할 수 있다. 여기서는 같은 확률을 지닌 정보를 묶어서 같은 형태로 인코딩한다는 가정을 추가해 3비트로 표현했다. C와 D를 3비트로 표현하더라도 비트가 절약된다.</p>
</div></div><p><img src="https://latex.codecogs.com/png.latex?%0A1%20*%20(0.7)%20+%202%20*%20(0.26)%20+%203%20*%20(0.02)%20+%203%20*%20(0.02)%20=%201.34%0A"></p>
<p>1.34 비트면 된다. 이렇게 절약된 비트는 자원의 절약을 뜻하기도 한다. 저장 공간을 떠올려도 좋고 통신이라면 오고가는 전기 신호의 양으로 생각해도 좋겠다. 아래 두 개의 테이블을 비교해보자. 계산의 편의를 위해서 로그의 밑수는 4로 잡았다.</p>
<table class="table">
<colgroup>
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 25%">
<col style="width: 15%">
</colgroup>
<thead>
<tr class="header">
<th>정보</th>
<th><img src="https://latex.codecogs.com/png.latex?p"></th>
<th><img src="https://latex.codecogs.com/png.latex?%5Clog_4%20%5Cfrac%7B1%7D%7Bp%7D"></th>
<th><img src="https://latex.codecogs.com/png.latex?p%20%5Clog_4%20%5Cfrac%7B1%7D%7Bp%7D"></th>
<th style="text-align: center;">비트 표현</th>
<th>비트수</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>A</td>
<td>0.25</td>
<td>1</td>
<td>0.25</td>
<td style="text-align: center;"><code>00</code></td>
<td>2</td>
</tr>
<tr class="even">
<td>B</td>
<td>0.25</td>
<td>1</td>
<td>0.25</td>
<td style="text-align: center;"><code>01</code></td>
<td>2</td>
</tr>
<tr class="odd">
<td>C</td>
<td>0.25</td>
<td>1</td>
<td>0.25</td>
<td style="text-align: center;"><code>10</code></td>
<td>2</td>
</tr>
<tr class="even">
<td>D</td>
<td>0.25</td>
<td>1</td>
<td>0.25</td>
<td style="text-align: center;"><code>11</code></td>
<td>2</td>
</tr>
</tbody>
</table>
<table class="table">
<colgroup>
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 25%">
<col style="width: 15%">
</colgroup>
<thead>
<tr class="header">
<th>정보</th>
<th><img src="https://latex.codecogs.com/png.latex?p"></th>
<th><img src="https://latex.codecogs.com/png.latex?%5Clog_4%20%5Cfrac%7B1%7D%7Bp%7D"></th>
<th><img src="https://latex.codecogs.com/png.latex?p%20%5Clog_4%20%5Cfrac%7B1%7D%7Bp%7D"></th>
<th style="text-align: center;">비트 표현</th>
<th>비트수</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>A</td>
<td>0.7</td>
<td>0.26</td>
<td>0.18</td>
<td style="text-align: center;"><code>0</code></td>
<td>1</td>
</tr>
<tr class="even">
<td>B</td>
<td>0.26</td>
<td>0.97</td>
<td>0.25</td>
<td style="text-align: center;"><code>10</code></td>
<td>2</td>
</tr>
<tr class="odd">
<td>C</td>
<td>0.02</td>
<td>2.82</td>
<td>0.06</td>
<td style="text-align: center;"><code>100</code></td>
<td>3</td>
</tr>
<tr class="even">
<td>D</td>
<td>0.02</td>
<td>2.82</td>
<td>0.06</td>
<td style="text-align: center;"><code>110</code></td>
<td>3</td>
</tr>
</tbody>
</table>
<p>위 두 표에서 보듯이, 첫번째 정보 묶음의 섀넌 엔트로피는 1이다. 두번째 묶음의 엔트로피는 0.55다. 후자가 전자의 대략 절반이라는 점은 정보의 분포에 따라서 이를 인코딩할 때 가장 큰 엔트로피의 상황보다 효율적인 방법이 존재함을 보여준다.</p>
</section>
<section id="오지랖-cross-entropy" class="level2">
<h2 class="anchored" data-anchor-id="오지랖-cross-entropy">오지랖: Cross Entropy</h2>
<p>크로스 엔트로피 역시 섀넌 엔트로피에서 파생된 개념이다. 크로스 엔트로피는 두 확률 분포의 차이를 측정하는 지표이다. 크로스 엔트로피는 다음과 같이 정의된다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AH(p,q)=-%5Csum_%7Bx%20%5Cin%20%5Cchi%7D%20p(x)%20%5Clog%20q(x)%0A"></p>
<p>섀넌 엔트로피의 개념에 평가 값에 예측 확률을 넣었다고 보면 된다. 즉, 실제로 존재하는 확률이 <img src="https://latex.codecogs.com/png.latex?p(x)">라고 할 때 이를 예측한 값이 <img src="https://latex.codecogs.com/png.latex?q(x)">라고 하면, 위의 값은 실제 확률과 비교한 예측 확률의 성과를 나타난다. <img src="https://latex.codecogs.com/png.latex?q(x)%20=%20p(x)">일 때 <img src="https://latex.codecogs.com/png.latex?H(p,q)">는 최소값을 지니게 된다.</p>
<section id="로지스틱-함수의-경우" class="level3">
<h3 class="anchored" data-anchor-id="로지스틱-함수의-경우">로지스틱 함수의 경우</h3>
<p>로지스틱 함수란 베르누이 분포(발생하거나 그렇지 않거나)를 지니는 사건의 확률을 표현하는 함수의 하나이다. 로지스틱 함수는 다음과 같이 정의된다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csigma(x)%20=%20%5Cfrac%7B1%7D%7B1+e%5E%7B-x%7D%7D%20=%20%5Cfrac%7Be%5Ex%7D%7B1+e%5Ex%7D%0A"></p>
<p>로지스틱 함수가 편리한 이유는 <img src="https://latex.codecogs.com/png.latex?x">에 대해서 연속이고, <img src="https://latex.codecogs.com/png.latex?(0,1)"> 사이의 값이 매핑되기 때문에 확률 값으로 근사해서 사용할 수 있다. 로지스틱 함수의 크로스 엔트로피를 구해보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ah(x)%20&amp;%20=%20-p%5Clog(%5Cfrac%7Be%5Ex%7D%7B1+e%5Ex%7D)%20-%20(1-p)%5Clog(1-%5Cfrac%7Be%5Ex%7D%7B1+e%5Ex%7D)%20%5C%5C%0A%20%20%20%20&amp;%20=%20%5Clog(1+e%5Ex)%20-%20px%0A%5Cend%7Baligned%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?h'(x)">를 구하면 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ah'(x)%20=%20%5Cdfrac%7Be%5Ex%7D%7B1+e%5Ex%7D%20-%20p%20=%20%5Csigma(x)%20-%20p%0A"></p>
<p>앞서 언급한대로 <img src="https://latex.codecogs.com/png.latex?%5Csigma(x)-p%20=%200">일 때 극대화 1계 조건이 완성된다. <img src="https://latex.codecogs.com/png.latex?h''(x)%20%3E%200">이므로 1계 조건이 만족할 때 최소값을 <img src="https://latex.codecogs.com/png.latex?H(x)">는 최소값을 지니게 된다. 즉, 로지스틱 함수가 측정하는 발생 확률이 실제의 <img src="https://latex.codecogs.com/png.latex?p">와 일치할 때 크로스 에트로피가 최소값이 된다.</p>


</section>
</section>

 ]]></description>
  <category>machine-learning</category>
  <guid>https://www.lostineconomics.com/posts/machine-learning/2022-11-29-shannon-entropy.html</guid>
  <pubDate>Mon, 28 Nov 2022 15:00:00 GMT</pubDate>
  <media:content url="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Entropy_flip_2_coins.jpg/600px-Entropy_flip_2_coins.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Paradox of Friendship</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/math-simple/2022-10-05-paradox-of-friendship.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">tl; dr</h2>
<ul>
<li>친구의 역설을 식으로 풀어보자.</li>
</ul>
<section id="친구의-역설" class="level3">
<h3 class="anchored" data-anchor-id="친구의-역설">친구의 역설</h3>
<p>왜 나의 친구는 나보다 친구가 많은 것처럼 느껴질까? 그냥 그렇게 느끼는 것 뿐일까? 직관적으로 생각하면 이것은 역설이 아닐 수 있다. 나와 친구가 된 사람 중에서 친구를 많이 사귀는 경향이 있는 사람이 포함되어 있다면, 그 사람의 친구는 나보다 많다. 이런 사람의 숫자가 인구에 적당한 숫자로 분포되어 있다면 이것이 친구의 역설을 만들 수 있다. 진짜 그런지 모형을 통해 따져보자.</p>
</section>
<section id="용어-정의" class="level3">
<h3 class="anchored" data-anchor-id="용어-정의">용어 정의</h3>
<p>네트워크 이론에서 쓰는 용어 몇 가지 정리하자.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">용어</th>
<th style="text-align: left;">정의</th>
<th style="text-align: left;">기호</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">노드(node), 버텍스(vertex)</td>
<td style="text-align: left;">네트워크에 속한 개체</td>
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?V,%20v"></td>
</tr>
<tr class="even">
<td style="text-align: left;">엣지(edge)</td>
<td style="text-align: left;">노드와 노드를 연결하는 선</td>
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?E,%20e"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">차수(degree)</td>
<td style="text-align: left;">엣지의 수</td>
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?d(v)"></td>
</tr>
</tbody>
</table>
<p><img src="https://latex.codecogs.com/png.latex?V">를 노드의 집합, <img src="https://latex.codecogs.com/png.latex?E">를 엣지의 집합하자. 해당 집합에 속하는 대표 원소는 각각 소문자 <img src="https://latex.codecogs.com/png.latex?v,%20e">로 표기한다. 특정한 노드 개체 <img src="https://latex.codecogs.com/png.latex?v">의 차수는 <img src="https://latex.codecogs.com/png.latex?d(v)">로 나타낼 수 있다.</p>
<p>방향성이 없는 그래프는 <img src="https://latex.codecogs.com/png.latex?G%20=%20(V,%20E)">로 정의한다. 방향성이 없다는 것은 친구 관계가 대칭적임을 뜻한다. 즉, A가 B의 친구라면, B도 A의 친구가 된다. 만일 애정 관계라면 ’짝사랑’과 같은 것이 존재할 수 있지만, 일단 친구 관계에서는 그런 관계가 없다고 하자.</p>
</section>
<section id="평균-친구-숫자" class="level3">
<h3 class="anchored" data-anchor-id="평균-친구-숫자">‘평균’ 친구 숫자</h3>
<p>네트워크 전체의 평균 친구 숫자 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%20%5Cleft(%20d(v)%20%5Cright)%20(%5Cequiv%20%5Cmu)">를 구해보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu%20=%20%5Cdfrac%7B%5Csum_%7Bv%20%5Cin%20V%7D%20d(v)%7D%7B%7CV%7C%7D%20=%20%5Cdfrac%7B2%7CE%7C%7D%7B%7CV%7C%7D%0A"></p>
<p>식의 분모는 자명하다. 네트워크 <img src="https://latex.codecogs.com/png.latex?G">에 존재하는 개체의 크기를 나타난다. <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bv%20%5Cin%20V%7D%20d(v)%20=%202%7CE%7C">가 되는 것 중요하다. <img src="https://latex.codecogs.com/png.latex?E">는 노드와 노드 사이의 관계를 모두 표시한 집합이다. <img src="https://latex.codecogs.com/png.latex?e%20=%20(v_i,%20v_j)">라면 이는 노드 <img src="https://latex.codecogs.com/png.latex?i">와 <img src="https://latex.codecogs.com/png.latex?j">가 서로 친구임을 나타낸다. 전체 친구의 숫자는 <img src="https://latex.codecogs.com/png.latex?e"> 하나당 2개가 된다. 따라서 <img src="https://latex.codecogs.com/png.latex?E">의 크기 <img src="https://latex.codecogs.com/png.latex?%7CE%7C">의 두 배가 전체 친구의 숫자가 된다.</p>
</section>
<section id="친구의-친구를-측정하기-위한-표집-확률" class="level3">
<h3 class="anchored" data-anchor-id="친구의-친구를-측정하기-위한-표집-확률">’친구의 친구’를 측정하기 위한 표집 확률</h3>
<p>우리가 관심이 있는 것은 ’친구의 친구’의 평균적인 크기다. 친구의 수를 재기 위해 친구를 어떻게 골라야 할까? 즉, 친구의 평균 수를 재기 위한 친구를 고를 확률을 먼저 정의해야 한다. 먼저 <img src="https://latex.codecogs.com/png.latex?E">에서 <img src="https://latex.codecogs.com/png.latex?e"> 하나를 고른다. <img src="https://latex.codecogs.com/png.latex?e=(v_i,%20v_j)">라고 하자. <img src="https://latex.codecogs.com/png.latex?v_i">가 여러 친구를 갖고 있다면 집합 <img src="https://latex.codecogs.com/png.latex?E">의 여러 원소에서 <img src="https://latex.codecogs.com/png.latex?v_i">가 등장할 것이다. 이 등장 횟수는 <img src="https://latex.codecogs.com/png.latex?d(v_i)">와 같다. 마지막으로 하나의 엣지는 두 개의 노드를 지니고 있으므로 엣지에서 <img src="https://latex.codecogs.com/png.latex?v_i">를 택할 확률이 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D">이다. 정리하면 친구의 친구를 측정할 대상인 <img src="https://latex.codecogs.com/png.latex?v%5E%7Bf%7D">가 네트워크에서 선택될 확률 <img src="https://latex.codecogs.com/png.latex?P(v%5Ef)">는 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(v%5Ef)=%20%5Cdfrac%7Bd(v%5Ef)%7D%7B%7CE%7C%7D%20%5Cdfrac%7B1%7D%7B2%7D%0A"></p>
<p>이 확률에 ’친구의 역설’의 비밀이 숨어 있다. 대상 친구가 선택될 확률은 해당 친구의 차수, 즉 그가 지닌 친구의 숫자, <img src="https://latex.codecogs.com/png.latex?d(v%5Ef)">에 비례한다. 즉, 친구가 많은 친구가 대상으로 선택될 확률이 높은 것이다.</p>
</section>
<section id="평균-친구의-친구-숫자" class="level3">
<h3 class="anchored" data-anchor-id="평균-친구의-친구-숫자">평균 ‘친구의 친구’ 숫자</h3>
<p>친구의 친구의 숫자, 정확하게는 그 기대값은 다음과 같이 쉽게 계산된다. <span id="eq-friend-of-friend"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%20E(d(v%5Ef))%20=%20%5Csum_%7Bv%5Ef%20%5Cin%20V%7D%20P(v%5Ef)%20d(v%5Ef)%20=%20%5Csum_%7Bv%5Ef%20%5Cin%20V%7D%20%5Cdfrac%7Bd(v%5Ef)%7D%7B2%7CE%7C%7D%20d(v%5Ef)%20=%20%5Cdfrac%7B1%7D%7B2%7CE%7C%7D%20%5Csum_%7Bv%5Ef%20%5Cin%20V%7D%20d(v%5Ef)%5E2%0A%5Ctag%7B1%7D"></span></p>
<p><img src="https://latex.codecogs.com/png.latex?v%5Ef"> 역시 네트워크 내의 한 개체이므로 당분간 상첨자를 떼고 보자. <img src="https://latex.codecogs.com/png.latex?d(v)">의 분산을 생각해보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%7B%5Crm%20Var%7D(d(v))%20%5Cequiv%20%5Csigma%5E2%20=%20%5Cmathbb%7BE%7D((d(v)%20-%20%5Cmu)%5E2)%20=%20%5Cmathbb%7BE%7D(d(v)%5E2)%20-%20%5Cmu%5E2%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?v">를 무작위로 선택했다면, 다음과 같이 정리할 수 있다.</p>
<p><span id="eq-variance"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%7BE%7D(d(v)%5E2)%20=%20%5Cdfrac%7B%5Csum_v%20d(v)%5E2%7D%7B%7CV%7C%7D%20=%20%5Csigma%5E2%20+%20%5Cmu%5E2%0A%5Ctag%7B2%7D"></span></p>
<p>식 (2)를 식 (1)에 대입하면 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%20E(d(v%5Ef))%20%20=%20%5Cdfrac%7B1%7D%7B2%7CE%7C%7D%20%5Csum_%7Bv%5Ef%20%5Cin%20V%7D%20d(v%5Ef)%5E2%20=%20%5Cdfrac%7B%7CV%7C%7D%7B2%7CE%7C%7D%20%5Cleft(%20%5Csigma%5E2%20+%20%5Cmu%5E2%20%5Cright)%20=%20%5Cdfrac%7B%5Cmu%5E2%20+%20%5Csigma%5E2%7D%7B%5Cmu%7D%20=%20%5Cmu%20+%20%5Cdfrac%7B%5Csigma%5E2%7D%7B%5Cmu%7D.%0A"></p>
</section>
<section id="discussion" class="level3">
<h3 class="anchored" data-anchor-id="discussion">Discussion</h3>
<p>만일 네트워크에서 모든 사람의 친구의 숫자가 동일하다면, 위의 식에서 보듯이 내 친구의 숫자와 내 친구의 친구의 숫자는 동일할 것이다. 모든 사람의 친구의 숫자가 동일하다는 것은 분산이 <img src="https://latex.codecogs.com/png.latex?0">, 즉 <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2%20=%200">, 이라는 뜻이다.</p>
<p>그런데 친구 네트워크가 분산이 0이 되는 형태로 균질하지 않다면, 즉 친구 숫자의 분포가 존재하는 이상 <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2%20%3E%200">이 성립할 수 밖에 없다. 친구 숫자가 균등하지 않는 이상 평균적으로 친구의 친구의 숫자는 내 친구의 숫자보다 크게 된다.</p>
</section>
<section id="intuitively" class="level3">
<h3 class="anchored" data-anchor-id="intuitively">Intuitively…</h3>
<p>보다 직관적으로 설명할 수 있을까? 인구 혹은 그래프 전체에 대해서 보면, 각 노드가 지니는 차수의 분포에서 친구의 평균적인 크기(수)가 결정된다. 반면, ‘친구의 친구’의 크기 어떨까? 만일 어떤 개인이 많은 친구를 지니고 있다면, 그는 여러 사람의 친구로 등장할 것이다. 따라서 친구의 친구의 숫자를 평균하면 이렇게 높은 연결성을 지닌 개체가 분포에 여러 번 등장하게 된다. 따라서 친구의 친구의 수를 생각하면 평균적인 ’내’ 친구의 수보다 크다!</p>
<p><a href="https://www.youtube.com/watch?v=sF1wy6OkeLE" class="uri">https://www.youtube.com/watch?v=sF1wy6OkeLE</a></p>


</section>
</section>

 ]]></description>
  <category>math-simple</category>
  <guid>https://www.lostineconomics.com/posts/math-simple/2022-10-05-paradox-of-friendship.html</guid>
  <pubDate>Tue, 04 Oct 2022 15:00:00 GMT</pubDate>
  <media:content url="https://static01.nyt.com/images/2010/09/19/business/STREAM/STREAM-jumbo.jpg?quality=75&amp;auto=webp" medium="image"/>
</item>
<item>
  <title>RSA, Simply Explained</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/math-simple/2022-10-03-RSA.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">tl; dr</h2>
<ul>
<li>RSA 알고리즘을 쉽게 풀어보자.</li>
</ul>
</section>
<section id="왜" class="level2">
<h2 class="anchored" data-anchor-id="왜">왜?</h2>
<p>한글로 된 책이나 블로그 등을 찾아보면 RSA가 제법 많이 소개되어 있다. 아쉽게도 대체로 개념 혹은 전체적인 그림 정도의 설명이 많았고, 알고리즘을 구체적으로 해설하는 경우는 드물더라. 보안 지식이 일천한 나는 그렇게 느꼈다. 알고리즘 자체를 보다 친절하게 소개하는 내용을 두루 찾다가 아래 두 개의 위키를 찾았다. 나중에 까먹을 나 놈을 위해서 내용을 간단히 정리해두도록 하곘다.</p>
<div class="callout-tip callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
References
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://brilliant.org/wiki/eulers-totient-function/">Euler’s Totient Function | Brilliant Math &amp; Science Wiki</a></li>
<li><a href="https://brilliant.org/wiki/rsa-encryption/">RSA Encryption | Brilliant Math &amp; Science Wiki</a></li>
</ul>
</div>
</div>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure quarto-figure-center" style="flex-basis: 49.0%;justify-content: center;">
<figure class="figure">
<p><a href="https://ds055uzetaobb.cloudfront.net/brioche/uploads/JO18nrj1mE-rsa-encryption.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="수신자는 발송자에게 상자와 열쇠를 보낸다. 해당 열쇠는 수신자의 개인 키로만 열 수 있다."><img src="https://www.lostineconomics.com/posts/math-simple/https:/ds055uzetaobb.cloudfront.net/brioche/uploads/JO18nrj1mE-rsa-encryption.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">수신자는 발송자에게 상자와 열쇠를 보낸다. 해당 열쇠는 수신자의 개인 키로만 열 수 있다.</figcaption><p></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 2.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 49.0%;justify-content: center;">
<figure class="figure">
<p><a href="https://miro.medium.com/max/1400/0*yeF86NncRejLnXJz.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="메시지 전달에서 비대칭 암호 체계"><img src="https://www.lostineconomics.com/posts/math-simple/https:/miro.medium.com/max/1400/0*yeF86NncRejLnXJz.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">메시지 전달에서 비대칭 암호 체계</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>비대칭 암호의 핵심은 공개 키로 어떤 메시지 혹은 내용을 암호화를 하고 이를 개인 키를 통해서 풀 수 있게 (복호화) 하는 것이다. 공개 키는 널리 퍼트리고, 개인 키는 해당 개인이 보유하고 관리한다. 이런 구조 때문에 암호화와 복호화에 필요한 키를 공유하는 대칭 암호 체계에 비해 비대칭 암호가 보안에 우수하다.</p>
<p>만일 암호화를 수행해서 공개 키를 불특정 다수에게 전달하고 개인 키를 갖는 쪽이 sender(센더)면 이는 ’전자 서명’이다. 반대로 receiver(리시버)가 공개 키를 배포하고 자신이 개인 키를 보유한다면, 이는 암호화 기반 메시지 전달이다. 동전의 양면 처럼 동일한 개념이므로 여기서는 후자, 즉 암호화 메시지 교환을 다루도록 하겠다.</p>
</section>
<section id="개념" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="개념">개념</h2>
<p>RSA 알고리즘의 핵심은 소수의 활용 그리고 오일러 정리다. 필요한 개념 몇 가지 미리 정리하고 가자.</p>
<section id="euler-phi-function" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="euler-phi-function">Euler <img src="https://latex.codecogs.com/png.latex?%5Cphi"> function</h3>
<p>오일러 피 함수(Euler totient function), <img src="https://latex.codecogs.com/png.latex?%5Cphi(n)">, 은 <img src="https://latex.codecogs.com/png.latex?n">까지의 정수 중에서 <img src="https://latex.codecogs.com/png.latex?n">와 서로소(coprime)인 정수 집합의 크기를 나타낸다. 오일러 피 함수에 관해서 아래와 같은 내용이 성립함을 확인하자.</p>
<ol type="1">
<li>만일 <img src="https://latex.codecogs.com/png.latex?p">가 소수일 때, <img src="https://latex.codecogs.com/png.latex?%5Cphi(p)%20=%20p-1">가 성립한다. <img src="https://latex.codecogs.com/png.latex?p">가 소수라면 정의상 <img src="https://latex.codecogs.com/png.latex?1,%20%5Cdotsc,%20p-1">의 모든 수와 <img src="https://latex.codecogs.com/png.latex?p">는 서로소가 된다.</li>
<li>만일 <img src="https://latex.codecogs.com/png.latex?p,q">가 서로소이면, <img src="https://latex.codecogs.com/png.latex?%5Cphi%20(pq)%20=%20%5Cphi(p)%20%5Cphi(q)">. 증명이 간단하지 않으니 일단 받아들이자.</li>
</ol>

<div class="no-row-height column-margin column-container"><div class="">
<p>증명은 <a href="https://brilliant.org/wiki/eulers-totient-function/">여기</a>를 참고하자.</p>
</div></div></section>
<section id="euler-theorem" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="euler-theorem">Euler theorem</h3>
<div class="callout-important callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
오일러 정리
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?n">이 양의 정수라고 하고, <img src="https://latex.codecogs.com/png.latex?a">와 <img src="https://latex.codecogs.com/png.latex?n">은 서로소라고 하자. 이때 아래의 관계가 성립한다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Aa%5E%7B%5Cphi(n)%7D%20%5Cequiv%201~(%5Ctext%7Bmod%20%7D%20n)%0A"></p>
</div>
</div>
<p>즉, 오일러 정리는 <img src="https://latex.codecogs.com/png.latex?n">에 관한 오일러 피 함수와 <img src="https://latex.codecogs.com/png.latex?n">의 나머지 연산 간에 매우 편리한 관계를 보여준다. 오일러 정리애 관한 증명 역시 생략한다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>증명은 <a href="https://brilliant.org/wiki/eulers-theorem/">여기</a>를 참고하자. 증명이 몹시 난해한 것은 아니다.</p>
</div></div><p>잠깐 “나머지 연산”(modulo operation)이 왜 동원되는지 살펴보고 넘어가자. 나머지 연산을 통해 일방향 함수를 쉽게 구성할 수 있다. <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20ax">가 있다고 하자. <img src="https://latex.codecogs.com/png.latex?x">를 알면 <img src="https://latex.codecogs.com/png.latex?f(x)">를 쉽게 계산할 수 있고 반대로 <img src="https://latex.codecogs.com/png.latex?f(x)">를 알면 <img src="https://latex.codecogs.com/png.latex?x">도 쉽게 구할 수 있다. 이런 함수를 양방향 함수라고 한다. 반면, <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20a%5Ex%5Ctext%7B%20mod%20($b$)%7D">라고 하자. 이때, <img src="https://latex.codecogs.com/png.latex?a,%20b">가 주어진 값이라고 하자. <img src="https://latex.codecogs.com/png.latex?x">를 알면 쉽게 <img src="https://latex.codecogs.com/png.latex?y">가 계산된다. 반면, <img src="https://latex.codecogs.com/png.latex?f(x)">가 주어졌다고 해도 <img src="https://latex.codecogs.com/png.latex?x">를 알아내기는 쉽지 않다. 하나씩 다른 값을 넣어보면서 맞는지 확인하는 방법 밖에 없다. 일방향 함수에서는 <img src="https://latex.codecogs.com/png.latex?a%5Ex">와 <img src="https://latex.codecogs.com/png.latex?b">가 충분히 큰 값일 때, <img src="https://latex.codecogs.com/png.latex?f(x)">를 알아도 <img src="https://latex.codecogs.com/png.latex?x">를 찾기 쉽지 않다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>이런 형태의 문제를 이산 대수의 문제라고 한다.</p>
</div></div></section>
</section>
<section id="step-by-step" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="step-by-step">Step by Step</h2>
<p>여기서는 암호화를 수행하는 쪽이 리시버인 상황을 상정해서 설명하겠다. 리시버는 나에게 온 메시지가 나에게 온 것이 맞는지 그리고 메시지를 나만 볼 수 있는지가 염려된다. 이를 보장하기 위해서 리시버는 아래와 같은 과정을 통해서 공개 키 정보를 대중에게 제공한다.</p>
<ol type="1">
<li>리시버는 <img src="https://latex.codecogs.com/png.latex?p">, <img src="https://latex.codecogs.com/png.latex?q"> 두 개의 (상대적으로 큰) 소수를 생성한다. 값은 필요한 만큼 커야 한다. <img src="https://latex.codecogs.com/png.latex?p%20%5Ccdot%20q=n">이 된다. <img src="https://latex.codecogs.com/png.latex?p">, <img src="https://latex.codecogs.com/png.latex?q">는 당연히 비공개 정보여야 한다. 하지만 <img src="https://latex.codecogs.com/png.latex?n">은 공개 키가 된다. <img src="https://latex.codecogs.com/png.latex?n">으로부터 <img src="https://latex.codecogs.com/png.latex?p">, <img src="https://latex.codecogs.com/png.latex?q">를 찾는 것은 단순 무식한 작업(brute force)을 요하고, 그래서 암호로서 기능할 수 있다.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cphi(n)%20=%20%5Cphi%20(pq)%20=%20(p-1)%20(q-1)"> 이 성립한다. 만일 <img src="https://latex.codecogs.com/png.latex?%5Cphi(n)">을 알고 있으면 <img src="https://latex.codecogs.com/png.latex?p+q">을 알게 된다. <img src="https://latex.codecogs.com/png.latex?pq=n">을 알고 있으므로 이차 방정식을 풀면 <img src="https://latex.codecogs.com/png.latex?p">, <img src="https://latex.codecogs.com/png.latex?q">를 알게 된다. 따라서 <img src="https://latex.codecogs.com/png.latex?%5Cphi(n)">은 비공개 정보다. 오일러 피 함수에 해당하는 공개 키를 만들기 위해서 <img src="https://latex.codecogs.com/png.latex?%5Cphi(n)">과 서로소인 <img src="https://latex.codecogs.com/png.latex?e">를 하나 생성하도록 하자. 대신 이 녀석이 공개 키가 된다.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cphi(n)">의 나머지 연산에 대해서 <img src="https://latex.codecogs.com/png.latex?d%20e%20=%201">을 만족하는 <img src="https://latex.codecogs.com/png.latex?d">를 구하자. 이 녀석이 비밀 키가 된다.</li>
</ol>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://latex.codecogs.com/png.latex?%5Cphi(pq)%20=%20%5Cphi(p)%5Cphi(q)">가 성립한다. <img src="https://latex.codecogs.com/png.latex?p">, <img src="https://latex.codecogs.com/png.latex?q">는 각각 소수이므로 <img src="https://latex.codecogs.com/png.latex?%5Cphi(p)=p-1">, <img src="https://latex.codecogs.com/png.latex?%5Cphi(q)=q-1">이다. 한편, <img src="https://latex.codecogs.com/png.latex?e">는 대체로 공개 키의 크기 역할을 한다. 따라서 <img src="https://latex.codecogs.com/png.latex?2%5E%7B16%7D+1">이 자주 사용된다.</p>
</div></div><p>이제 공개 키와 비밀키를 한번 나누어 써보도록 하자.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: center;">secret</th>
<th style="text-align: center;">public</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?p,%20q"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?n"></td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cphi(n),%20d"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?e"></td>
</tr>
</tbody>
</table>
<p>리시버는 공개 키 <img src="https://latex.codecogs.com/png.latex?n">, <img src="https://latex.codecogs.com/png.latex?e">를 일반에게 공개한 상태다.</p>
<ol start="4" type="1">
<li>이 리시버에게 메시지를 보내고자 하는 센더는 자신의 메시지 <img src="https://latex.codecogs.com/png.latex?m">을 공개 키 <img src="https://latex.codecogs.com/png.latex?e">를 통해 암호화한다. 이 과정은 별게 아니다. 메시지 혹은 메시지의 해시값에 <img src="https://latex.codecogs.com/png.latex?e"> 승을 한 값에 <img src="https://latex.codecogs.com/png.latex?n">의 나머지 연산을 적용한다. 즉,</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0Ac%20%5Cequiv%20m%5Ee%20~%20(%5Ctext%7Bmod%20%7D%20n)%0A"></p>

<div class="no-row-height column-margin column-container"><div class="">
<ol type="1">
<li>아래에서 보듯이 <img src="https://latex.codecogs.com/png.latex?n">이 너무 크면 나머지 연산이 제대로 적용되지 않는다. 또한 <img src="https://latex.codecogs.com/png.latex?e">의 값이 너무 크면 계산 과정이 길고 복잡해진다.</li>
<li>메시지를 메시지 자체라고 생각할 필요는 없다. 메시지의 해시값이라고 생각하면 암호화의 대상이 되는 메시지는 원 메시지보다 훨씬 짧을 수 있다. 리시버와 센더가 맞춰봐야 하는 것은 해당 해시값이다.</li>
</ol>
</div></div><ol start="5" type="1">
<li>리시버는 암호화된 메시지를 받은 후에 여기에 <img src="https://latex.codecogs.com/png.latex?d"> 승을 하고 나머지 연산 <img src="https://latex.codecogs.com/png.latex?n">을 적용한다. 즉,</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0Ac%5Ed%20%5Cequiv%20m~(%5Ctext%7Bmod%20%7D%20n)%0A"></p>
<p>위에 보는 것처럼 두 번의 나머지 연산에서 센더는 <img src="https://latex.codecogs.com/png.latex?n">, <img src="https://latex.codecogs.com/png.latex?e">의 공개된 정보(공개 키)만을 활용했고, 리시버는 복호화 과정에서 자신이 갖고 있는 정보, 개인 키 <img src="https://latex.codecogs.com/png.latex?d">를 활용했다.</p>
<section id="증명" class="level3">
<h3 class="anchored" data-anchor-id="증명">증명</h3>
<p>오일러 정리를 활용하면 위 연산을 쉽게 증명할 수 있다.</p>
<ol type="1">
<li>오일러 정리에 따르면, <img src="https://latex.codecogs.com/png.latex?m%5E%7B%5Cphi(n)%7D%20%5Cequiv%201~(%5Ctext%7Bmod%20%7D%20n)">이 성립한다.</li>
<li>우리는 <img src="https://latex.codecogs.com/png.latex?d">와 <img src="https://latex.codecogs.com/png.latex?e">를 고를 때 <img src="https://latex.codecogs.com/png.latex?d%20e%20%5Cequiv%201~(%5Ctext%7Bmod%20%7D%5Cphi(n))">이 되도록 골랐다. 따라서 <img src="https://latex.codecogs.com/png.latex?de%20=%20k%20%5Cphi(n)%20+%201">이 되는 적절한 <img src="https://latex.codecogs.com/png.latex?k">가 존재한다는 뜻이다.</li>
</ol>
<p>이를 정리하면,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Am%5E%7Bde%7D%20&amp;%20%5Cequiv%20m%5E%7Bk%20%5Cphi(n)+1%7D%20%5C%5C%0A&amp;%20%5Cequiv%20m%5E%7Bk%20%5Cphi(n)%7D%20m%20%5C%5C%0A&amp;%20%5Cequiv%20(m%5E%5Cphi(n))%5Ek%20m%20%5C%5C%0A&amp;%20%5Cequiv%201%5Ek%20m%20%20~(%5Ctext%7Bmod%20%7D%20n)%0A%5Cend%7Baligned%7D%0A"></p>
<p>공개 키인 <img src="https://latex.codecogs.com/png.latex?n">과 <img src="https://latex.codecogs.com/png.latex?e">를 생성하는 과정을 보자. 생성 과정에서 일방향 연산, (충분히 큰) 소수 및 서로소를 활용했다. 따라서 공개 키만으로 암호화에 동원된 <img src="https://latex.codecogs.com/png.latex?p,%20q,%20%5Cphi%20(pq),%20d">를 빠른 시간 내에 쉽게 알아낼 수 없다. 이것이 암호화가 의도하는 것이다.</p>


</section>
</section>

 ]]></description>
  <category>math-simple</category>
  <guid>https://www.lostineconomics.com/posts/math-simple/2022-10-03-RSA.html</guid>
  <pubDate>Sun, 02 Oct 2022 15:00:00 GMT</pubDate>
  <media:content url="https://securityintelligence.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2022/01/Encryption-key.jpeg.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>\(\rm\LaTeX\) + VS Code</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-09-25-latex-vscode.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>Tiny<img src="https://latex.codecogs.com/png.latex?%5Crm%5CTeX">을 씁시다!</li>
<li><a href="https://anarinsk.github.io/lostineconomics_quarto/posts/computer-tool/2020-10-24-classy-latex.html">이 포스트</a>의 조금 더 실용적인 접근이다.</li>
</ul>
</section>
<section id="rmlatex의-추억" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="rmlatex의-추억"><img src="https://latex.codecogs.com/png.latex?%5Crm%5CLaTeX">의 추억</h2>
<p>아카데미 종사자가 아니라면 <img src="https://latex.codecogs.com/png.latex?%5Crm%5CLaTeX">을 일상적으로 쓰지는 않을 것이다. 아카데미를 스쳐간 사람들이라면 한 때의 기억이리라. 논문을 쓸 때 좋았던 혹은 나빴단 기억이 함께 떠올랐지만, 역시 <img src="https://latex.codecogs.com/png.latex?%5Crm%5CTeX">은 아름다운 문서 조판 도구다. 얼마나 쓸지는 모르겠지만, 그래도 한번 정리해두고 넘어가자. 이 글의 목표는 다음과 같다.</p>
<ol type="1">
<li>모든 OS에서 동일하게 쓴다.<br>
</li>
<li>VS Code를 에디터로 쓴다.</li>
<li>텍라이브(<img src="https://latex.codecogs.com/png.latex?%5Crm%5CTeX">Live)는 설치하지 않는다.</li>
</ol>

<div class="no-row-height column-margin column-container"><div class="">
<p>텍라이브가 설치도 까다롭고 도구도 크다. 많이 쓰지 않는 소프트웨어다보니 미러 사이트에서 파일을 당겨오는 데에도 시간이 제법 소요된다.</p>
</div></div></section>
<section id="tinyrmtex" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="tinyrmtex">Tiny<img src="https://latex.codecogs.com/png.latex?%5Crm%5CTeX"></h2>
<p>이 목표에 딱 부합하는 도구가 <a href="https://yihui.org/tinytex/">Tiny<img src="https://latex.codecogs.com/png.latex?%5Crm%5CTeX"></a>이다. 원래는 R의 <img src="https://latex.codecogs.com/png.latex?%5Crm%5CLaTeX"> 활용을 위해 만들어 졌으나, 제작자가 별도의 도구로 만들어 <img src="https://latex.codecogs.com/png.latex?%5Crm%5CLaTeX">을 부리는 데 활용하기에 부족하지 않다.</p>
<p><a href="https://github.com/rstudio/tinytex-releases" class="uri">https://github.com/rstudio/tinytex-releases</a></p>
<p>위 깃헙에 여러가지 배포 버전을 만들어 두었다. <code>TinyTeX-0</code>는 텍라이브를 쓰기 위한 커맨드라인 도구 정도만을 지니고 있다. <code>TinyTeX-2</code>는 풀 버전이다. 이름과 달리 작지 않은 버전이다. 선택은 각자의 몫이겠지만, 표준 버전 <code>TinyTeX</code> 정도를 설치해도 좋을 것이다.</p>
<p>Linux, Macos 버전을 sh 명령어를 다운받아서 이를 실행하도록 하자. 만일 특정한 배포 판을 깔고자 한다면, 설치 전에 환경 변수를 설정하면 된다. <a href="https://github.com/rstudio/tinytex-releases#shellbatch-scripts">여기</a>를 참고하자.</p>
<section id="tinyrmtex-for-windows" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="tinyrmtex-for-windows">Tiny<img src="https://latex.codecogs.com/png.latex?%5Crm%5CTeX"> for Windows</h3>
<p>플랫폼이 다소 이질적인 윈도 버전의 설치만 조금 더 살펴보자. 어찌보면 윈도 버전의 설치가 제일 쉽다! 공식 가이드 대로 PS 스크립트를 통한 설치가 정석이겠지만, 아래와 같이 하는 것이 더 편하다.</p>
<ol type="1">
<li><a href="https://github.com/rstudio/tinytex-releases">릴리즈 링크</a>에서 필요한 윈도용 압축 파일을 다운로드 받는다.<br>
</li>
<li>해당 파일을 <code>%APPDATA%/TinyTeX</code>에 압축을 푼다. 압축을 풀면 <code>TinyTeX</code>이 기본 디렉토리로 설정되기 떄문에 해당 파일은 <code>%APPDATA%</code>에 두고 압축을 풀면 된다.<br>
</li>
<li>환경 변수에서 <code>%APPDATA%/TinyTeX</code> 패스를 추가한다. 패스를 추가하는 방법은 <a href="https://anarinsk.github.io/lostineconomics_quarto/posts/computer-tool/2022-08-13-clean-use-of-windows.html#%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98-%EC%84%A4%EC%A0%95">여기</a>를 참고한다.</li>
<li>패스 인식을 위해서 재부팅 한다.</li>
</ol>

<div class="no-row-height column-margin column-container"><div class="">
<p><code>%APPDATA%</code>란 윈도 사용자의 홈 아래 해당 디렉토리가 위치한다는 뜻이다. 탐색기에서 찾아간다면 <code>C:\Users\{USER NAME}\AppData\</code>에 해당한다. 만일 <code>AppData</code> 폴더가 보이지 않는다면 감춘 폴더, 파일을 표시하지 않도록 설정되어 있는 것이다. 이를 바꿔주면 보일 것이다. 윈도11을 기준으로 탐색기의 “보기” 메뉴에서 표시로 가면 “숨긴 항목” 여부를 확인할 수 있다.</p>
</div></div></section>
</section>
<section id="설치-확인" class="level2">
<h2 class="anchored" data-anchor-id="설치-확인">설치 확인</h2>
<p>텍라이브 커맨드라인 도구가 잘 동작하는지 확인하면 된다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">$</span> tlmgr <span class="at" style="color: #657422;">--version</span></span></code></pre></div>
<p>버전이 잘 뜬다면, 앞으로 <code>tlmgr</code> 명령을 통해서 <img src="https://latex.codecogs.com/png.latex?%5Crm%5CTeX"> 관련 패키지를 설치하고 삭제할 수 있다. <code>tlmgr</code>의 활용에 관해서는 <a href="https://tug.org/texlive/tlmgr.html">여기</a>를 참고하자.</p>
</section>
<section id="vs-code-extension" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="vs-code-extension">VS Code Extension</h2>
<p>이제 VS Code에서 <img src="https://latex.codecogs.com/png.latex?%5Crm%5CTeX">을 부리기 위한 익스텐션을 설치하자.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop" class="uri">https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop</a></p>
<p>익스텐션을 설치한 후 몇 가지 설정을 손보도록 하자. 어떤 컴파일 엔진을 쓰는지에 따라서 설정을 손봐야 한다. PDF<img src="https://latex.codecogs.com/png.latex?%5Crm%5CLaTeX">을 쓰는 경우만 사례로 살펴보자.</p>
<ol type="1">
<li>F1을 누른다.</li>
<li><code>settings.json</code>을 검색해, 나온 파일을 클릭한다. “사용자 설정”을 열도록 하자.</li>
<li>해당 json 파일을 수정한다. 아주 게으른 설정이다. pdflatex을 컴파일을 위해서 <code>latex-workshop-tools</code>, <code>latex-workshop.latex.recipes</code>를 수정한다. 찾기로 검색해서 찾으면 편리하다.</li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb2-1"><span class="er" style="color: #AD0000;">"latex-workshop.latex.tools"</span> <span class="er" style="color: #AD0000;">:</span> <span class="ot" style="color: #003B4F;">[</span></span>
<span id="cb2-2">    <span class="fu" style="color: #4758AB;">{</span></span>
<span id="cb2-3">      <span class="dt" style="color: #AD0000;">"name"</span><span class="fu" style="color: #4758AB;">:</span> <span class="st" style="color: #20794D;">"pdflatex"</span><span class="fu" style="color: #4758AB;">,</span></span>
<span id="cb2-4">      <span class="dt" style="color: #AD0000;">"command"</span><span class="fu" style="color: #4758AB;">:</span> <span class="st" style="color: #20794D;">"pdflatex"</span><span class="fu" style="color: #4758AB;">,</span></span>
<span id="cb2-5">      <span class="dt" style="color: #AD0000;">"args"</span><span class="fu" style="color: #4758AB;">:</span> <span class="ot" style="color: #003B4F;">[</span></span>
<span id="cb2-6">        <span class="st" style="color: #20794D;">"-synctex=1"</span><span class="ot" style="color: #003B4F;">,</span></span>
<span id="cb2-7">        <span class="st" style="color: #20794D;">"-interaction=nonstopmode"</span><span class="ot" style="color: #003B4F;">,</span></span>
<span id="cb2-8">        <span class="st" style="color: #20794D;">"-file-line-error"</span><span class="ot" style="color: #003B4F;">,</span> </span>
<span id="cb2-9">        <span class="st" style="color: #20794D;">"%DOCFILE%"</span></span>
<span id="cb2-10">      <span class="ot" style="color: #003B4F;">]</span></span>
<span id="cb2-11">    <span class="fu" style="color: #4758AB;">}</span></span>
<span id="cb2-12">  <span class="ot" style="color: #003B4F;">]</span><span class="er" style="color: #AD0000;">,</span></span>
<span id="cb2-13">  <span class="er" style="color: #AD0000;">"latex-workshop.latex.recipes":</span> <span class="ot" style="color: #003B4F;">[</span></span>
<span id="cb2-14">    <span class="fu" style="color: #4758AB;">{</span></span>
<span id="cb2-15">      <span class="dt" style="color: #AD0000;">"name"</span><span class="fu" style="color: #4758AB;">:</span> <span class="st" style="color: #20794D;">"tex to pdf"</span><span class="fu" style="color: #4758AB;">,</span></span>
<span id="cb2-16">      <span class="dt" style="color: #AD0000;">"tools"</span><span class="fu" style="color: #4758AB;">:</span> <span class="ot" style="color: #003B4F;">[</span></span>
<span id="cb2-17">        <span class="st" style="color: #20794D;">"pdflatex"</span><span class="ot" style="color: #003B4F;">,</span> </span>
<span id="cb2-18">        <span class="st" style="color: #20794D;">"pdflatex"</span></span>
<span id="cb2-19">      <span class="ot" style="color: #003B4F;">]</span></span>
<span id="cb2-20">    <span class="fu" style="color: #4758AB;">}</span></span>
<span id="cb2-21">  <span class="ot" style="color: #003B4F;">]</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://raw.githubusercontent.com/anarinsk/lostineconomics_quarto/main/posts/computer-tool/images/vscode-tex.png" class="lightbox" title="VS Code에 .tex 파일을 올렸을 때 (클릭시 확대)" data-gallery="quarto-lightbox-gallery-1"><img src="https://www.lostineconomics.com/posts/computer-tool/https:/raw.githubusercontent.com/anarinsk/lostineconomics_quarto/main/posts/computer-tool/images/vscode-tex.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">VS Code에 <code>.tex</code> 파일을 올렸을 때 (클릭시 확대)</figcaption><p></p>
</figure>
</div>
<p>위 스크린 샷에서 보듯이 <code>.tex</code> 파일을 읽으면 확장에 관련 탭이 자동으로 추가된다. 앞서 <code>settings.json</code>에 설정한 대로 컴파일 레서피에 “tex to pdf”가 추가되어 있다. 컴파일은 해당 창 상단 오른쪽의 세모 버튼으로 할 수 있으며 PDF 보기는 돋보기 버튼을 누르면 된다.</p>
<p>왜 VS Code를 써야 할까? IDE를 통합적으로 활용한다는 의미도 있지만, 최근 가장 강력한 개발 보조 수단이 된 GitHub Copilot을 활용할 수 있기 때문이다. 여러 명령어를 쳐야 하는 텍 문서에서도 코파일럿의 편리함이 쏠쏠하다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>당연히 TexShop 등 여타 텍 전용 에디터를 써도 된다.</p>
</div></div></section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p><a href="http://wiki.ktug.org/wiki/wiki.php/%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/TinyTeX">KTUG의 문서</a>가 잘 되어 있다. 여기서 부족하다고 느낀 대목은 이 문서를 참고하시라.</p>


</section>

 ]]></description>
  <category>computer-tool</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-09-25-latex-vscode.html</guid>
  <pubDate>Sat, 24 Sep 2022 15:00:00 GMT</pubDate>
  <media:content url="https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Metal_movable_type.jpg/600px-Metal_movable_type.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>단순하고 깔끔한 윈도 분석 환경</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-08-13-clean-use-of-windows.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li><code>winget</code>을 씁시다!</li>
</ul>
</section>
<section id="윈도는-쓸수록-지저분해진다" class="level2">
<h2 class="anchored" data-anchor-id="윈도는-쓸수록-지저분해진다">윈도는 쓸수록 지저분해진다?</h2>
<p>윈도 환경은 빠르게 지저분해진다. 윈도의 역사를 고려하면 마이크로소프트가 다소 억울할 수도 있겠다. 윈도가 다양한 생태계를 오랫동안 유지, 포용, 확장해 온 탓이다. 인스톨러의 설치 방식 역시 조금씩 달라서, 여러 앱이 깔리면서 환경은 꼬이기 마련이다. 이런 ‘윈도’ 엔트로피의 증가 경향을 막을 수는 없겠지만, 가속할 필요는 없지 않을까?</p>
<p>개발 환경에 관한 것이라면 윈도 안에서 리눅스를 거의 완벽하게 구현한 WSL2라는 훌륭한 물건이 있다. 하지만 분석 용도로 쓰기에 WSL2가 지나치게 ’번잡하다’는 느낌을 종종 받는다. 이번 포스팅에서는 Windows Terminal + PowerShell + winget을 이용해 데이터 분석을 위한 일관된 윈도 환경 구축에 관해 다뤄보겠다. 여기 소개할 환경은 윈도 뿐 아니라 MacOS, Linux에서도 동일하게 구축할 수 있다. Unix 기반 OS에서는 구축이 더 쉽다. 윈도 구축을 무사히 마쳤다면, 다른 OS에서는 (어쩌면 Google의 도움을 약간 받아서?) 더 쉽게 구축할 수 있을 것이다.</p>
</section>
<section id="출발선" class="level2">
<h2 class="anchored" data-anchor-id="출발선">출발선</h2>
<p>내가 확인한 작동 환경은 아래와 같다.</p>
<ul>
<li>Windows 11 Version 22H2</li>
</ul>
<p>윈도11 버전 이외에 윈도를 설치해 쓰는 환경이라면 특별한 호환성 문제는 없을 것이다.</p>
</section>
<section id="winget-설치" class="level2">
<h2 class="anchored" data-anchor-id="winget-설치">winget 설치</h2>
<p><a href="https://docs.microsoft.com/ko-kr/windows/package-manager/winget">공식 문서</a></p>
<p>공식 문서가 여러모로 완벽해서 덧붙일 것이 없다. 공식 문서에서 있는 <a href="https://www.microsoft.com/p/app-installer/9nblggh4nns1#activetab=pivot:overviewtab">링크</a>를 누르면 윈도 스토어의 “앱 설치 관리자”가 뜬다. winget을 쓰기 위해서는 이 녀석을 설치해야 한다.</p>
</section>
<section id="windows-terminal-설치" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="windows-terminal-설치">Windows Terminal 설치</h2>
<p>만일 윈도 터미널(WT)이 이미 설치되어 있고 잘 설정되어 있다면 이 단계를 건너 뛰어도 된다. 아직 설치 전이라면 익숙하고 불편한 윈도 CMD 창, 즉 커맨드셸을 켜자. 커맨드셸에서 winget을 통해 기초가 되는 앱 두 개를 설치할 예정이다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>윈도에서 커맨드 창을 여는 가장 쉬운 방법은 “검색”에서 “커맨드”라고 검색하는 것이다. 그러면 “명령 프롬프트” 검색된다.</p>
</div></div><ul>
<li>Windows Terminal</li>
<li><a href="https://github.com/PowerShell/PowerShell">PowerShell</a> (Core 버전, 크로스플랫폼 버전)</li>
</ul>
<p>어떻게 설치하면 될까? 아래 사이트로 가자.</p>
<p><a href="https://winstall.app" class="uri">https://winstall.app</a></p>
<p>위 웹사이트의 검색창에 “Windows Terminal”을 넣고 엔터를 누르자. 아래 검색 결과에 정식 본과 preview 버전 두 개가 뜰 것이다. 특별한 이유가 없다면 정식 버전을 설치하도록 하자. 클릭해서 들어가면 아래와 같은 스크린 샷이 보인다.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 22.2%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 55.6%;justify-content: center;">
<figure class="figure">
<p><a href="./images/winget-wt.png" class="lightbox" title="박스를 복붙해 넣자." data-gallery="quarto-lightbox-gallery-1"><img src="https://www.lostineconomics.com/posts/computer-tool/images/winget-wt.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">박스를 복붙해 넣자.</figcaption><p></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 22.2%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
<p>박스 친 부분을 클릭으로 복사할 수 있다. 이대로 copy-paste(복붙)를 해주면 된다. CTRL-V로는 커맨드셸에서는 제대로 붙지 않을 수 있다. 복사 후 마우스 우버튼 클릭으로 붙여녛기를 선택하면 잘 들어갈 것이다. 다 안되면 직접 타이핑하자.</p>
<pre class="cmd"><code>&gt;_ winget install --id=Microsoft.WindowsTerminal  -e</code></pre>
<p>이렇게 winget을 통해서 필요한 앱들을 터미널을 통해 설치할 수 있다. Winget은 Debian의 apt 혹은 Mac의 brew와 거의 같은 방식으로 작동한다.</p>
<p>Powershell 역시 같은 방식으로 설치하자.</p>
<pre class="cmd"><code>&gt;_ winget install --id=Microsoft.PowerShell  -e</code></pre>

<div class="no-row-height column-margin column-container"><div class="">
<p>WT를 설치하면 윈도용 PowerShell이 깔려 있다. 크로스플랫폼으로 개발된 PowerShell Core를 추가로 깔도록 하자.</p>
</div></div></section>
<section id="windows-terminal-설정" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="windows-terminal-설정">Windows Terminal 설정</h2>
<p>WT는 여느 터미널 앱에 뒤지지 않을 만큼의 다양한 커스터마이징이 가능하다. 그 내용을 여기서 자세히 다루지 않겠다. WT의 폰트 설정, 윈도에서 기본셸로 쓸 파워셸(PS)의 외관 바꾸기 두 개만 보도록 하자. WT는 맥 OS의 iTerm2, 그리고 PS은 bash 혹은 zsh 정도라고 생각해도 무방하다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>WT은 다양한 방식으로 커스마이징을 지원한다. 기본적으로 <code>settings.json</code>을 활용하지만, 최선 버전은 GUI를 통한 설정도 가능하다. <a href="https://docs.microsoft.com/en-us/windows/terminal/customize-settings/profile-general">일반 설정</a>, <a href="https://docs.microsoft.com/en-us/windows/terminal/customize-settings/profile-appearance">외형</a>, <a href="https://docs.microsoft.com/en-us/windows/terminal/customize-settings/profile-advanced">세부 설정</a>을 참고하자.</p>
</div></div><section id="font-설정" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="font-설정">Font 설정</h3>
<p>폰트 설정은 코딩 환경을 좌우한다. PS를 잘 쓰려면 Nerd 패치가 된 폰트를 써야 한다. 아래 두 폰트를 추천한다.</p>
<ul>
<li>D2Coding Nerd Patched: <a href="https://github.com/kelvinks/D2Coding_Nerd">LINK</a></li>
<li>Hack Nerd Patched: <a href="https://www.nerdfonts.com/font-downloads">LINK</a>에서 Hack을 찾아서 다운로드</li>
</ul>

<div class="no-row-height column-margin column-container"><div class="">
<p>Hack의 zip을 다운받아 압축을 풀면, 윈도용과 비 윈도용 그리고 보통, 이탤릭, 볼드, 이탤릭 볼드 폰트가 구별되어 있다. 용도별로 필요한 폰트를 깔면 된다.</p>
</div></div><p>윈도 터미널은 아직 다중 폰트, 즉 한글 폰트와 영문 폰트의 분리 적용을 지원하지 않는다. 한글의 활용이 높다면 D2Coding을 그렇지 않다면 Hack이 좋다. D2Coding의 경우 Nerd Font 매핑에 조금 문제가 있지만, 사용이 불가능할 정도는 아니다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>Ligature 버전과 그렇지 않은 버전 두 가지가 있다. 리거쳐란 <code>-</code> + <code>&gt;</code>와 같은 합자를 →의 단일 글자로 바꾸는 폰트를 의미한다.</p>
</div></div><p>폰트를 설치한 후 WT 설정 → PS 설정 → 모양 안에서 앞서 설치한 폰트를 선택하면 된다.</p>
</section>
</section>
<section id="powershell-꾸미기" class="level2">
<h2 class="anchored" data-anchor-id="powershell-꾸미기">PowerShell 꾸미기</h2>
<p>기본 PS는 그리 사용성이 좋지 않다. 다행스럽게도 리눅스나 맥의 “Oh-My-Zsh” 같은 것이 PS에도 있다. “Oh-My-Posh”, 즉 “오 마이 파워셸”이다. 마찬가지로 winget을 통해 설치하도록 하자. 다만 PS의 모양새가 제대로 돌아가려면 앞서 언급한 Nerd 폰트가 필요하다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb3-1"><span class="op" style="color: #5E5E5E;">&gt;</span>_ winget install <span class="op" style="color: #5E5E5E;">--</span>id<span class="op" style="color: #5E5E5E;">=</span>JanDeDobbeleer<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">OhMyPosh</span>  <span class="op" style="color: #5E5E5E;">-</span>e</span></code></pre></div>
<p>설치 후 필요한 여러가지 테마를 골라 설정할 수 있다. 자세한 것은 <a href="https://docs.microsoft.com/ko-kr/windows/terminal/tutorials/custom-prompt-setup#choose-and-apply-a-powershell-prompt-theme">LINK</a>를 참고하자.</p>
</section>
<section id="앱-설치-i" class="level2">
<h2 class="anchored" data-anchor-id="앱-설치-i">앱 설치 I</h2>
<p>이제 데이터분석 작업을 위해 필요한 앱들을 설치할 것이다. 우선 잘 알려진 앱부터 깔도록 하자.</p>
<ul>
<li>Visual Studio Code</li>
<li>Git</li>
<li>GitHub Desktop</li>
</ul>
<p>절차는 다음과 같다.</p>
<ol type="1">
<li>WT에서 PowerShell을 실행하자.</li>
<li>winistall.app 사이트에서 필요한 앱을 검색한다.</li>
<li>설치를 위한 명령을 (복붙으로) 실행한다.</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb4-1"><span class="op" style="color: #5E5E5E;">&gt;</span>_ winget install <span class="op" style="color: #5E5E5E;">--</span>id<span class="op" style="color: #5E5E5E;">=</span>Microsoft<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">VisualStudioCode</span>  <span class="op" style="color: #5E5E5E;">-</span>e</span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;">&gt;</span>_ winget install <span class="op" style="color: #5E5E5E;">--</span>id<span class="op" style="color: #5E5E5E;">=</span>Git<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">Git</span>  <span class="op" style="color: #5E5E5E;">-</span>e</span>
<span id="cb4-3"><span class="op" style="color: #5E5E5E;">&gt;</span>_ winget install <span class="op" style="color: #5E5E5E;">--</span>id<span class="op" style="color: #5E5E5E;">=</span>GitHub<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">GitHubDesktop</span>  <span class="op" style="color: #5E5E5E;">-</span>e</span></code></pre></div>
<p>이렇게 설치하는 앱과 해당 서비스에서 직접 인스톨러를 다운받아서 설치하는 것이 많이 다를까? 기본적으로 동일하다. 다만 경우에 따라서는 설치 디렉토리 등이 보다 일관성 있게 유지된다는 점, 그리고 보다 체계적인 업데이트가 가능하다 등의 장점이 있다.</p>
</section>
<section id="앱-설치-ii" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="앱-설치-ii">앱 설치 II</h2>
<p>이제 데이터 분석을 위해서 필요한 앱을 설치하자. 아래 명령은 winstall.app에서 가져온 것이다.</p>
<table class="table">
<colgroup>
<col style="width: 50%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th>App</th>
<th>Winget command</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Miniforge3 for Python</td>
<td><code>&gt;_ winget install --id=CondaForge.Miniforge3  -e</code></td>
</tr>
<tr class="even">
<td>R</td>
<td><code>&gt;_ winget install --id=RProject.R  -e</code></td>
</tr>
<tr class="odd">
<td>Julia</td>
<td><code>&gt;_ winget install --id=Julialang.Julia  -e</code></td>
</tr>
<tr class="even">
<td>Quarto</td>
<td><code>&gt;_ winget install --id=RStudio.quarto  -e</code></td>
</tr>
</tbody>
</table>
<p>Miniforge3를 제외하고 다른 소프트웨어는 설치와 실행에 문제가 없었다. Miniforge3에는 약간의 설정이 필요하다.</p>
<section id="miniforge3-for-python" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="miniforge3-for-python">Miniforge3 (for Python)</h3>
<p>파이썬의 경우 네이티브로 깔아서 써도 된다. 다만 여러모로 conda 환경 아래 쓰는 것이 편리하다. 그리고 conda를 쓴다면 우리는 쓸모없이 크고 비효율적인 원본 아나콘다 대신 파이썬 환경 및 패키지 관리에 특화된 미니콘다를 설치할 것이다. 최근 아나콘다의 전 제품이 200 인 이상 단체에 대해서 유료화되었다. Miniforge3는 라이센스 이슈가 없는 별도의 커뮤니티 버전이다. winstall.app에서 miniforge3를 검색하자.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb5-1"><span class="op" style="color: #5E5E5E;">&gt;</span>_ winget install <span class="op" style="color: #5E5E5E;">--</span>id<span class="op" style="color: #5E5E5E;">=</span>CondaForge<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">Miniforge3</span>  <span class="op" style="color: #5E5E5E;">-</span>e</span></code></pre></div>
<p>아쉽게도 Miniforge3의 실행 경로가 윈도 path에 기본으로 잡혀있지 않다. 즉 커멘드셸에서 <code>conda</code>를 쳐도 해당 폴더에 있지 않는 이상 실행되지 않는다.</p>
<section id="환경-변수-설정" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="환경-변수-설정">환경 변수 설정</h4>
<p>아래 그림과 같이 윈도 태스크바의 검색 창에서 “환경 변수”라고 치면 아래 그림과 같은 검색 결과 비슷한 것이 뜰 것이다. “계정의 환경 변수 편집”을 선택하도록 하자.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 25.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/computer-tool/images/search-1.png" class="nolightbox img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">환경 변수 편집을 찾아가자!</figcaption><p></p>
</figure>
</div>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 25.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure quarto-figure-center" style="flex-basis: 49.0%;justify-content: center;">
<figure class="figure">
<p><a href="./images/user-env-1.png" class="lightbox" title="계정의 환경 변수(클릭시 확대)" data-gallery="quarto-lightbox-gallery-2"><img src="https://www.lostineconomics.com/posts/computer-tool/images/user-env-1.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">계정의 환경 변수(클릭시 확대)</figcaption><p></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 2.0%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 49.0%;justify-content: center;">
<figure class="figure">
<p><a href="./images/user-env-2.png" class="lightbox" title="path 추가(클릭시 확대)" data-gallery="quarto-lightbox-gallery-3"><img src="https://www.lostineconomics.com/posts/computer-tool/images/user-env-2.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">path 추가(클릭시 확대)</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>왼쪽 그림과 같은 창이 뜨면 <code>path</code> 항목 위에서 더블클릭을 하자. 그러면 오른쪽 화면이 뜬다. 여기에 miniforge3의 “윈도용 명령어 경로”를 넣어주면 된다. 설치 경로는 컴의 조건과 상황에 따라서 차이가 날 수 있다. 개인사용자 대부분은 <code>C:\Users\{USER NAME}\miniforge3</code>에 설치될 것이다. 일부 조직에서 관리하는 컴퓨터 같은 경우 <code>C:\Users\{USER NAME}\AppData\Local\miniforge3</code>에 설치될 수 있다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>한글 윈도의 경우 탐색기에서 <code>Users</code>가 “이용자”라고 보일 것이다. “이용자”가 <code>Users</code>다. 해당 폴더로 들어가서 찾으면 된다. 기우로 적으면, <code>{USER NAME}</code>은 각 이용환경에서 특정 이용자의 이름에 해당한다. 문자 그대로 저 글자를 찾지는 마시라.</p>
</div></div><ul>
<li>윈도용 명령어 경로: 설치 경로 + <code>\Script</code></li>
</ul>
<p><code>Script</code> 폴더는 conda를 위한 윈도용 명령어들을 담고 있는 폴더다. 명령어 경로를 path에 설정하고 WT을 다시 실행하자. 일단 PS이 아니라 커맨드셸이 필요하다. 커맨드셸을 열고 <code>conda --version</code>을 넣어 보자. 버전 숫자가 나오면 잘 설치된 것이다. 이제 miniforge3를 PS에서 부리기 위한 명령을 실행하자.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb6-1"><span class="op" style="color: #5E5E5E;">&gt;</span>_ conda init powershell</span></code></pre></div>
<p>조금 기다리면 PS을 위한 콘다 환경이 세팅된다. WT를 다시 실행한 후 PS에서 <code>conda --version</code>을 실행해보자. 버전이 뜨면 설정이 완료된 것이다. 이제부터 ‘익숙한’ conda 환경 그대로다!</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>Miniforge3 대신 Miniconda를 설치한다면, 위 과정을 응용하면 된다. Miniconda도 winstall.app에서 찾을 수 있다.</p>
</div></div></section>
</section>
</section>
<section id="설치-앱-업그레이드" class="level2">
<h2 class="anchored" data-anchor-id="설치-앱-업그레이드">설치 앱 업그레이드</h2>
<p>winget을 설치했다면 터미널에서 간단하고 일관되게 작업할 수 있다. 별 생각하기 싫다면, 아래와 같이 하자.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb7-1"><span class="op" style="color: #5E5E5E;">&gt;</span>_ winget upgrade <span class="op" style="color: #5E5E5E;">--</span>all</span></code></pre></div>
<p>자세한 내용은 <a href="https://docs.microsoft.com/ko-kr/windows/package-manager/winget/upgrade">여기</a>를 참고하자.</p>
</section>
<section id="vs-code-as-ide" class="level2">
<h2 class="anchored" data-anchor-id="vs-code-as-ide">VS Code as IDE</h2>
<p>이제 개별 데이터 분석 도구(언어)를 부릴 IDE로 VS Code를 쓸 것이다. VS Code가 편리한 이유는 다음과 같다.</p>
<ul>
<li>크로스 플랫폼, 크로스 랭귀지<br>
</li>
<li>다양하고 풍부한 Extension 지원</li>
<li>Jupyter 활용 가능</li>
<li>Quarto를 통해 일관된 문서 작성 가능</li>
</ul>
<p>R 이용자에게 RStudio는 정말 뛰어난 IDE이지만, 그 안에서 다른 언어와 운용하기는 쉽지 않다. VS Code가 개별 언어를 위한 최선의 환경은 아닐지 몰라도 차선 쯤은 된다. 사용하는 언어에 맞게 필요한 아래 VS Code 익스텐션을 설치하도록 하자.</p>
<section id="extenstions" class="level3">
<h3 class="anchored" data-anchor-id="extenstions">Extenstions</h3>
<table class="table">
<thead>
<tr class="header">
<th>Language</th>
<th>Extension</th>
<th>Desc</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Python</td>
<td>Python, Pylance</td>
<td><a href="https://code.visualstudio.com/updates/v1_70" class="uri">https://code.visualstudio.com/updates/v1_70</a></td>
</tr>
<tr class="even">
<td>R</td>
<td>R</td>
<td><a href="https://code.visualstudio.com/docs/languages/r" class="uri">https://code.visualstudio.com/docs/languages/r</a></td>
</tr>
<tr class="odd">
<td>Julia</td>
<td>Julia</td>
<td><a href="https://code.visualstudio.com/docs/languages/julia" class="uri">https://code.visualstudio.com/docs/languages/julia</a></td>
</tr>
<tr class="even">
<td>Jupyter</td>
<td>Juputer, Jupyter Keymap</td>
<td><a href="https://code.visualstudio.com/docs/datascience/jupyter-notebooks" class="uri">https://code.visualstudio.com/docs/datascience/jupyter-notebooks</a></td>
</tr>
<tr class="odd">
<td>Quarto</td>
<td>Quarto</td>
<td><a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto" class="uri">https://marketplace.visualstudio.com/items?itemName=quarto.quarto</a></td>
</tr>
</tbody>
</table>
</section>
<section id="some-tips-for-jupyter-in-vs-code" class="level3">
<h3 class="anchored" data-anchor-id="some-tips-for-jupyter-in-vs-code">Some Tips for Jupyter in VS Code</h3>
<section id="폰트-운용" class="level4">
<h4 class="anchored" data-anchor-id="폰트-운용">폰트 운용</h4>
<p>VS Code 설정에서 폰트를 바꿀 수 있다. VS Code는 두 개 이상의 폰트를 쓸 수 있고, 우선 순위가 자연스러운 방식으로 구현된다. 만일 Hack NF와 D2Coding을 함께 설치했다면, 폰트 설정 항목에 <code>"Hack NF", "D2Coding ligature"</code>와 같은 식으로 차례로 넣어주면 된다.</p>
</section>
<section id="jupyter-모듈-설치" class="level4">
<h4 class="anchored" data-anchor-id="jupyter-모듈-설치">Jupyter 모듈 설치</h4>
<p>Jupyter를 실행할 때 만일 해당 언어 환경에 Jupyter가 깔려 있지 않다면 어떻게 될까? 똑똑한 VS Code는 무엇을 깔아야 하는지 알려준다. 아래 그림과 같은 메시지에서 설치 관련 명령을 복사헤서 붙여 넣고 실행하자. VS Code에서 하단에 커맨드셸을 활성화하려면 CTRL-J를 누르도록 하자. 혹은 오른쪽 상단의 아이콘 중에서 하단 바가 색칠된 형태의 아이콘을 눌러도 된다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./images/vscode-instruct-1.png" class="lightbox" title="VS Code는 설치한 필요한 패키지를 알아서 알려준다!" data-gallery="quarto-lightbox-gallery-4"><img src="https://www.lostineconomics.com/posts/computer-tool/images/vscode-instruct-1.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">VS Code는 설치한 필요한 패키지를 알아서 알려준다!</figcaption><p></p>
</figure>
</div>
</section>
<section id="jupyter-인터프리터-선택" class="level4">
<h4 class="anchored" data-anchor-id="jupyter-인터프리터-선택">Jupyter 인터프리터 선택</h4>
<p>보통 주피터 환경에서는 인터프리터, 즉 어떤 언어 설정에서 명령을 실행할지는 선택할 수 있다. 콘다의 가상 환경을 쓸 때 혹은 주피터를 여러 언어 환경에서 쓸 때 유용한 기능인데 VS Code에도 그대로 구현되어 있다.</p>
<ol type="1">
<li><code>F1</code> 클릭</li>
<li>검색창에서 Python을 칠 때 나오는 것 중에서 “Python:인터프리터 선택” 클릭</li>
<li>아래 그림과 같은 창에서 인터프리터를 선택하면 된다. 만일 보이지 않으면 리프레시 버튼을 눌러서 다시 환경을 갱신해보자. Conda 가상 환경까지 잘 찾아준다.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./images/vscode-interpreter.png" class="lightbox" title="Jupyter Runtime을 선택할 수 있다. Python 뿐 아니라 다른 언어 환경도 선택할 수 있다." data-gallery="quarto-lightbox-gallery-5"><img src="https://www.lostineconomics.com/posts/computer-tool/images/vscode-interpreter.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">Jupyter Runtime을 선택할 수 있다. Python 뿐 아니라 다른 언어 환경도 선택할 수 있다.</figcaption><p></p>
</figure>
</div>
<p>간혹 내가 miniforge3를 설치한 위치의 python 환경이 보이지 않을 수 있는데, 그럴 때는 VS Code를 재시작하고 위 과정을 반복하면 된다. 뭔가 안될 때는 일단 재시작이다.</p>
</section>
<section id="quarto-환경" class="level4">
<h4 class="anchored" data-anchor-id="quarto-환경">Quarto 환경</h4>
<p>Quarto의 장점은 문서 내의 코드를 그대로 실행해 결과를 보여주는 데 있다. 이 장점을 살리기 위해서는 몇 가지 설정이 필요하다.</p>
<ol type="1">
<li>문서를 컴파일하기 전에 코드가 실행될 (특정 환경에 속한) 파이썬 인터프리터를 선택하자.</li>
<li>선택한 후 VS Code 내에서 에디터를 띄우면 <code>conda activate</code>를 통해서 적당한 환경이 자동으로 설정된다. 만일 외부의 PS에서 실행한다면 해당 환경까지 알아서 진입해야 한다.</li>
<li>ipykernel이 해당 환경에 설치되어 있어야 한다. 앞서 jupyter notebook을 VS Code에서 실행하기 위해 필요했던 ipykernel이 해당 환경에 설치되어 있어야 한다. 설치가 되어 있지 않다면 다시 확인하자. <code>{YOUR-CONDA-ENV}</code>는 이용자의 가상환경의 이름을 뜻한다.</li>
</ol>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb8-1"><span class="op" style="color: #5E5E5E;">&gt;</span>_ <span class="op" style="color: #5E5E5E;">({</span>YOUR<span class="op" style="color: #5E5E5E;">-</span>CONDA<span class="op" style="color: #5E5E5E;">-</span>ENV<span class="op" style="color: #5E5E5E;">})</span> conda install <span class="op" style="color: #5E5E5E;">-</span>n <span class="op" style="color: #5E5E5E;">{</span>YOUR<span class="op" style="color: #5E5E5E;">-</span>CONDA<span class="op" style="color: #5E5E5E;">-</span>ENV<span class="op" style="color: #5E5E5E;">}</span> ipykernel <span class="op" style="color: #5E5E5E;">--</span>update<span class="op" style="color: #5E5E5E;">-</span>deps <span class="op" style="color: #5E5E5E;">--</span>force<span class="op" style="color: #5E5E5E;">-</span>reinstall</span></code></pre></div>
<ol start="4" type="1">
<li>이제 마지막으로 콘다 환경에 아래 두 개의 패키지를 더 설치하면 된다.</li>
</ol>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb9-1"><span class="op" style="color: #5E5E5E;">&gt;</span>_ <span class="op" style="color: #5E5E5E;">({</span>YOUR<span class="op" style="color: #5E5E5E;">-</span>CONDA<span class="op" style="color: #5E5E5E;">-</span>ENV<span class="op" style="color: #5E5E5E;">})</span> conda install nbformat nbclient</span></code></pre></div>
<p>4를 설치하지 않고 Quarto 문서(<code>.qmd</code>)를 컴파일하면 <code>nbformat</code>과 <code>nbclient</code>를 설치할 것을 안내해준다. 3을 설치하지 않고 실행하면 <code>[WinError 2]...</code> 에러가 뜬다. 간혹 ipykernel을 설치를 했는데도 qmd 문서 컴파일 시 에러가 뜬다면 아래의 방법으로 다시 설치하자.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb10-1"><span class="op" style="color: #5E5E5E;">&gt;</span>_ <span class="op" style="color: #5E5E5E;">({</span>YOUR<span class="op" style="color: #5E5E5E;">-</span>CONDA<span class="op" style="color: #5E5E5E;">-</span>ENV<span class="op" style="color: #5E5E5E;">})</span> python <span class="op" style="color: #5E5E5E;">-</span>m ipykernel install <span class="op" style="color: #5E5E5E;">--</span>user</span></code></pre></div>


</section>
</section>
</section>

 ]]></description>
  <category>computer-tool</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-08-13-clean-use-of-windows.html</guid>
  <pubDate>Fri, 12 Aug 2022 15:00:00 GMT</pubDate>
  <media:content url="https://www.phxid.com/wp-content/uploads/common-window-size.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Presentation with Reveal.js</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-07-07-pt-with-quarto.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>Quarto를 쓰면 Markdown으로 편하게 PT 문서를 만들 수 있다.</li>
</ul>
</section>
<section id="pt-도구-그것이-문제로다." class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="pt-도구-그것이-문제로다.">PT 도구 그것이 문제로다.</h2>
<p><a href="https://revealjs.com/">Reveal.js</a>는 웹 기반으로 프레젠테이션 문서를 구현하는 녀석이다. 우리는 이 녀석을 써서 파워포인트나 키노트가 부럽지 않은 수준의 PT를 비교적 손쉽게 만들 수 있다. 웹 기반이니 브라우저만 있으면 문서를 볼 수 있다.</p>
<p>아쉬운 점이라면 Markdown처럼 (나같은 문돌이들도) 쉽게 쓸 수 있는 딱 떨어지는 저작 도구가 없다는 것이다. 만일 Reveal.js를 Markdown과 함께 쓸 수 있다면 그야말로 금상첨화일 터! 앞서 Markdown 기반 저작도구인 <a href="https://anarinsk.github.io/lostineconomics_quarto/posts/computer-tool/2022-05-14-blogging-with-quarto.html">Quarto</a>를 살펴 보았다. 고맙게도 이 녀석이 VS Code 혹은 Jupyter 위에서 Markdown과 Reveal.js를 함께 부릴 수 있게 해준다. Quarto + Reveal.js의 장점을 다시 따져보자.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>RStudio가 제공하는 Rmarkdown을 통해 Reveal.js와 마크다운을 함께 부릴 수 있다. 다만 도구로서 VS Code가 좀 더 보편적이라고 생각하기에 이 녀석은 다루지 않겠다.</p>
</div></div><ol type="1">
<li>Markdown의 문법을 거의 그대로 쓸 수 있다.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Crm%5CLaTeX"> 수식을 그대로 쓸 수 있다.</li>
<li>깔끔하지만 다채로운 슬라이드를 구현할 수 있다.</li>
<li>코드 및 결과물을 그대로 활용할 수 있다.</li>
<li>Github과 같은 웹 도구를 활용하면 결과물을 html로 쉽게 공유할 수 있다.</li>
</ol>

<div class="no-row-height column-margin column-container"><div class="">
<p>Quarto가 pandoc을 백엔드로 쓰기 때문에 qmd 문서를 거의 포맷(docx, pdf, html, tex, pptx 등)으로 변환할 수 있다. html이 특별한 이유는 플랫폼을 불문하고 문서를 원래 의도 그대로 잘 전달할 수 있기 때문이다.</p>
</div></div><p>이제 시작해 보자.</p>
</section>
<section id="출발선" class="level2">
<h2 class="anchored" data-anchor-id="출발선">출발선</h2>
<p>아래의 도구를 설치할 수 있고 기본적인 활용이 가능하다고 가정하겠다.</p>
<ul>
<li>Quarto (플랫폼에 따라서 설치)</li>
<li>VS Code</li>
<li>Quarto Extension for VS Code</li>
</ul>
</section>
<section id="거의-완벽한-레퍼런스" class="level2">
<h2 class="anchored" data-anchor-id="거의-완벽한-레퍼런스">거의 완벽한 레퍼런스</h2>
<p>Quarto의 문서화는 거의 완벽하다. <a href="https://quarto.org/docs/presentations/revealjs/">Quarto + Reveal.js</a>도 예외는 아니다. 링크의 내용을 따라서 쓰면 된다. Markdown 문법과도 크게 다르지 않으니 진입 장벽이 낮다. 몇 가지 주의할 사항만 확인해 보자.</p>
<section id="yaml" class="level3">
<h3 class="anchored" data-anchor-id="yaml"><code>YAML</code></h3>
<p>Markdown 문서에 Reveal.js의 기능을 붙이기 위해 문서 앞에 YAML 문을 붙인다. 문서의 앞에 붙는 YAML의 예제는 아래와 같다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="pp" style="color: #AD0000;">---</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">title</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"This Is a Testflight"</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">subtitle</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"Completely useless presentation"</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">author</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"[anarinsk](https://github.com/anarinsk/learn_quarto-revealjs/)"</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">date</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"2022-07-07"</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">format</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span></span>
<span id="cb1-7"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">revealjs</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">incremental</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span><span class="at" style="color: #657422;">   </span></span>
<span id="cb1-9"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">theme</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> black</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">css</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"index.css"</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">transition</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> concave</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">background-transition</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> fade</span></span>
<span id="cb1-13"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">smaller</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">false</span></span>
<span id="cb1-14"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">scrollable</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb1-15"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">logo</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"logo2.png"</span></span>
<span id="cb1-16"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">footer</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"This is FOOTER!"</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;">        #self-contained: true</span></span>
<span id="cb1-18"><span class="pp" style="color: #AD0000;">---</span></span></code></pre></div>
<p>대체로 항목이 자명하기 때문에 별도의 설명은 하지 않겠다. reveal.js의 각종 옵션을 지정해 줄 수 있는데, 지원하는 항목은 <a href="https://tutorial.quarto.org/docs/reference/formats/presentations/revealjs.html">여기</a>에서 확인할 수 있다.</p>
<section id="눈여겨볼-항목" class="level4">
<h4 class="anchored" data-anchor-id="눈여겨볼-항목">눈여겨볼 항목</h4>
<ul>
<li><code>theme</code>: reveal.js의 <a href="https://revealjs.com/themes/">테마</a>다. 복잡하게 생각하지 말고 간단한 거 쓰자.</li>
<li><code>transition</code>: 슬라이드 혹은 항목 등장의 시각적인 전환 효과를 지정한다.</li>
<li><code>background-transition</code>: 배경 효과를 지정한다.</li>
<li><code>css</code>: 특화를 위한 css 파일을 지정한다.</li>
</ul>
</section>
</section>
<section id="customization" class="level3">
<h3 class="anchored" data-anchor-id="customization">Customization</h3>
<p>Quarto + Reveal.js의 기본 설정을 그대로 써도 된다. 다만 영문과 한글 폰트의 괴리 등의 미묘한 대목이 걸린다면, 특화된 css 파일을 통해 볃도로 설정을 바꾸면 된다. Working Example에 소개된 예제의 css 파일을 살펴보자.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb2-1"><span class="co" style="color: #5E5E5E;">/* @import url('https://fonts.googleapis.com/css2? family=Nanum+Gothic&amp;display=swap'); */</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;">@import</span> <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">'https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css'</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-3"><span class="im" style="color: #00769E;">@import</span> <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">'https://cdn.jsdelivr.net/gh/moonspam/NanumSquare@1.0/nanumsquare.css'</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-4"><span class="im" style="color: #00769E;">@import</span> <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">"https://cdn.jsdelivr.net/gh/wan2land/d2coding/d2coding-ligature-subset.css"</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;">/*-- scss:rules --*/</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;">.reveal</span> h1<span class="op" style="color: #5E5E5E;">,</span> </span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;">.reveal</span> h2<span class="op" style="color: #5E5E5E;">,</span> </span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;">.reveal</span> h3<span class="op" style="color: #5E5E5E;">,</span> </span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;">.reveal</span> h4<span class="op" style="color: #5E5E5E;">,</span> </span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;">.reveal</span> h5<span class="op" style="color: #5E5E5E;">,</span> </span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;">.reveal</span> h6 {</span>
<span id="cb2-13">  <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'NanumSquare'</span> <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-14">  <span class="er" style="color: #AD0000;">//text-shadow: -1px -1px 0 rgba(0, 0, 0, .3);</span></span>
<span id="cb2-15">}</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="fu" style="color: #4758AB;">.reveal</span> section p {</span>
<span id="cb2-18">    <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'pretendard'</span> <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-19">    <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">90</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-20">}</span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="fu" style="color: #4758AB;">.reveal</span> ul<span class="op" style="color: #5E5E5E;">,</span> </span>
<span id="cb2-23"><span class="fu" style="color: #4758AB;">.reveal</span> li<span class="op" style="color: #5E5E5E;">,</span> </span>
<span id="cb2-24"><span class="fu" style="color: #4758AB;">.reveal</span> ol{</span>
<span id="cb2-25">    <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'pretendard'</span> <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-26">    <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">95</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-27">}</span>
<span id="cb2-28"></span>
<span id="cb2-29"><span class="fu" style="color: #4758AB;">.reveal</span> code{</span>
<span id="cb2-30">  <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'D2Coding'</span><span class="op" style="color: #5E5E5E;">,</span> <span class="dv" style="color: #AD0000;">monospace</span> <span class="at" style="color: #657422;">!</span> important<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-31">  <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">95</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb2-32">}</span></code></pre></div>
<ul>
<li><code>@import...</code> | 필요한 폰트 3종을 로드한다.</li>
<li>나머지는 지정된 요소 별로 사용할 폰트와 글자 크기 등을 지정한다.</li>
</ul>
</section>
</section>
<section id="working-example" class="level2">
<h2 class="anchored" data-anchor-id="working-example">Working Example</h2>
<p>시험 삼아서 Reveal.js의 몇 가지 기능을 Quarto로 구현해 보았다. 내용 없이 형식을 구현하는데 집중한 사례이니 참작해 주시라.</p>
<ul>
<li>예시: <a href="https://anarinsk.github.io/learn_quarto-revealjs/#/title-slide">Completely Useless Quarto-Reveal.js</a></li>
<li>코드: <a href="https://github.com/anarinsk/learn_quarto-revealjs">anarinsk/learn_quarto-revealjs</a></li>
</ul>


</section>

 ]]></description>
  <category>computer-tool</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-07-07-pt-with-quarto.html</guid>
  <pubDate>Wed, 06 Jul 2022 15:00:00 GMT</pubDate>
  <media:content url="https://revealjs.com/images/logo/reveal-black-text.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Cantor’s Theorem</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/math-simple/2022-07-03-ansys-candor-theorem.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="theorem" class="level2">
<h2 class="anchored" data-anchor-id="theorem">Theorem</h2>
<p>임의의 집합 <img src="https://latex.codecogs.com/png.latex?E">에 대해서 멱집합 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20P%20(E)">는 <img src="https://latex.codecogs.com/png.latex?E">보다 크다.</p>
</section>
<section id="proof" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="proof">Proof</h2>
<section id="part-1" class="level3">
<h3 class="anchored" data-anchor-id="part-1">Part 1</h3>
<p>일단 <img src="https://latex.codecogs.com/png.latex?E%20%5Cpreccurlyeq%20%5Cmathcal%20P%20(E)">는 쉽게 증명할 수 있다. <img src="https://latex.codecogs.com/png.latex?e%20%5Cin%20E">에 대해서 <img src="https://latex.codecogs.com/png.latex?f:%20e%20%5Cto%20%5Clbrace%20e%20%5Crbrace">는 반드시 존재하고 이는 일대일함수(injective/one-to-one function)를 이룬다. 이제 <img src="https://latex.codecogs.com/png.latex?E%20%5Cnot%5Capprox%20%5Cmathcal%20P%20(E)">임을 증명하면 <img src="https://latex.codecogs.com/png.latex?E%20%5Cprec%20%5Cmathcal%20P%20(E)">가 증명된다.</p>
</section>
<section id="part-2" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="part-2">Part 2</h3>
<p>귀류법을 활용한다. 만일 <img src="https://latex.codecogs.com/png.latex?E%20%5Capprox%20%5Cmathcal%20P%20(E)">(두 집합의 크기가 같다)이라고 가정하자. 이는 일대일대응 <img src="https://latex.codecogs.com/png.latex?%5Cphi:%20E%20%5Cto%20%5Cmathcal%20P%20(E)">가 존재한다는 뜻이다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>단사 함수(injective)를 뜻하는 일대일 함수(one-to-one function)와 전단사함수(bijective)를 뜻하는 일대일대응(one-to-one correspondence)를 혼동하지 말자.</p>
</div></div><p><img src="https://latex.codecogs.com/png.latex?%0AB%20=%20%5Clbrace%20x%20%5Cin%20E%20%7C%20x%20%5Cnotin%20%5Cphi(x)%20%5Crbrace%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?B%20%5Csubseteq%20E">이다. 따라서 <img src="https://latex.codecogs.com/png.latex?%5Cphi">에 따라서 <img src="https://latex.codecogs.com/png.latex?B">에 매핑되는 원소 <img src="https://latex.codecogs.com/png.latex?y(%5Cin%20E)">가 존재한다. 즉, <img src="https://latex.codecogs.com/png.latex?B%20=%20%5Cphi(y)">인 <img src="https://latex.codecogs.com/png.latex?y">가 존재한다.</p>
</section>
<section id="part3" class="level3">
<h3 class="anchored" data-anchor-id="part3">Part3</h3>
<section id="y-in-phiy" class="level4">
<h4 class="anchored" data-anchor-id="y-in-phiy">1. <img src="https://latex.codecogs.com/png.latex?y%20%5Cin%20%5Cphi(y)"></h4>
<p>이 가정이 맞다면 집합 <img src="https://latex.codecogs.com/png.latex?B">의 정의에 따라서 <img src="https://latex.codecogs.com/png.latex?y%20%5Cnotin%20%5Cphi(y)">여야 한다. 이는 모순이다.</p>
</section>
<section id="y-notin-phiy" class="level4">
<h4 class="anchored" data-anchor-id="y-notin-phiy">2. <img src="https://latex.codecogs.com/png.latex?y%20%5Cnotin%20%5Cphi(y)"></h4>
<p>이 가정이 맞다면 집합 <img src="https://latex.codecogs.com/png.latex?B">의 정의에 따라서 <img src="https://latex.codecogs.com/png.latex?y%20%5Cin%20%5Cphi(y)">가 되어야 한다. 이 역시 모순이다.</p>
</section>
</section>
<section id="finally" class="level3">
<h3 class="anchored" data-anchor-id="finally">Finally</h3>
<p>따라서 일대일대응을 이루는 함수 <img src="https://latex.codecogs.com/png.latex?%5Cphi(%5Ccdot)">은 존재하지 않는다. 즉, <img src="https://latex.codecogs.com/png.latex?E%20%5Cprec%20%5Cmathcal%20P%20(E)">.</p>
<p>이에 따르면 더 큰 무한 집합을 무한히 생성할 수 있다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AE%20%5Cprec%20%5Cmathcal%20P%20(E)%20%5Cprec%20%5Cmathcal%20P%20(%20%5Cmathcal%20P%20(E)%20)%20%5Cprec%20%5Cdotsb%0A"></p>


</section>
</section>

 ]]></description>
  <category>math-simple</category>
  <guid>https://www.lostineconomics.com/posts/math-simple/2022-07-03-ansys-candor-theorem.html</guid>
  <pubDate>Sat, 02 Jul 2022 15:00:00 GMT</pubDate>
  <media:content url="https://cdn.mos.cms.futurecdn.net/o6jb2hRLbHfdLAgCESuMjh-1024-80.jpg.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Berkson’s Paradox with Regression</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/regression/2022-06-06-berkson-paradox-regression.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="회귀-분석으로-보는-벅슨의-역설" class="level2">
<h2 class="anchored" data-anchor-id="회귀-분석으로-보는-벅슨의-역설">회귀 분석으로 보는 벅슨의 역설</h2>
<p>심슨의 역설과 마찬가지로 벅슨의 역설을 보통 회귀 분석으로 설명하지 않는다. 그런데 이 문제 역시 회귀 분석으로 보면 보다 명확해진다. 벅슨의 역설은 인과 추론에서 말하는 충돌 요인(collider)의 맥락에서 주로 발생한다. 정확히 말하면 벅슨의 역설은 변인의 통제 여부보다는 (인지하지 못하는) 표본의 제한성에서 비롯한다. 아쉽게도 벅슨의 역설을 예시하는 현실 데이터는 별로 없다. 여기서는 충돌 요인을 일으키는 플롯을 상정하고 이에 맞춰 가상의 데이터를 생성한다. 회귀 분석을 통해 이 데이터를 다시 음미하면서 벅슨의 역설을 살펴보도록 하자.</p>
</section>
<section id="플롯" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="플롯">플롯</h2>
<p>여기 적는 내용은 스토리텔링이지만 또 단순한 스토리텔링은 아니다. 코로나19와 흡연의 관계를 조사하기로 한 연구자가 있다고 하자. 그는 입원 환자의 자료를 살펴보고 놀라운 결론을 얻었다. 흡연하는 사람일수록 코로나 증세가 덜 심하다는 관계를 파악했다. 일반적인 통념과 반대되는 결론을 얻었던 것이다. 이것이 맞는 분석일까? 먼저 아래의 인과 다이어그램을 보자.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><a href="https://www.nature.com/articles/s41467-020-19478-2">이 연구</a>는 코로나19 인식에 있어서 충돌 요인의 문제를 다양하게 지적하고 있다.</p>
</div></div><div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 16.7%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 66.7%;justify-content: center;">
<figure class="figure">
<p><a href="./imgs/covid-hospital.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="입원 여부는 충돌 요인(collider)이 된다."><img src="https://www.lostineconomics.com/posts/regression/imgs/covid-hospital.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">입원 여부는 충돌 요인(collider)이 된다.</figcaption><p></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 16.7%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
<p>담배를 많이 피울수록 혹은 그래왔을수록 코로나19 이외의 요인으로도 병원에 입원할 가능성이 높아진다. 또한 코로나 증세가 심할수록 병원에 입원할 가능성이 높아진다. 이 경우 병원에 입원한다는 변인이 두 요인(흡연의 정도, 코로나19 중증도) 모두에 영향을 받는 충돌 요인이 된다. 따라서 충돌 요인을 통제할 경우 흡연의 정도와 코로나19의 중증도 사이의 관계가 왜곡된다. 이러한 취지로 데이터를 생성해보도록 하자.</p>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># Basic packages</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd </span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sns</span>
<span id="cb1-6"><span class="im" style="color: #00769E;">from</span> scipy <span class="im" style="color: #00769E;">import</span> stats</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;"># Stats models </span></span>
<span id="cb1-9"><span class="im" style="color: #00769E;">import</span> statsmodels.formula.api <span class="im" style="color: #00769E;">as</span> sm</span>
<span id="cb1-10"><span class="im" style="color: #00769E;">import</span> statsmodels.stats.sandwich_covariance <span class="im" style="color: #00769E;">as</span> sw</span>
<span id="cb1-11"><span class="im" style="color: #00769E;">import</span> statsmodels <span class="im" style="color: #00769E;">as</span> statsmodels</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;">def</span> generate_unit_df(pack_of_cigar, n, sd<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>, covid_threshold<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, cigar_threshold<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">6</span>):</span>
<span id="cb1-14"></span>
<span id="cb1-15">    mean_of_severity_covid <span class="op" style="color: #5E5E5E;">=</span> pack_of_cigar <span class="op" style="color: #5E5E5E;">*</span> <span class="fl" style="color: #AD0000;">0.3</span></span>
<span id="cb1-16">    mean_of_severity_cigar <span class="op" style="color: #5E5E5E;">=</span> pack_of_cigar <span class="op" style="color: #5E5E5E;">*</span> <span class="fl" style="color: #AD0000;">1.4</span></span>
<span id="cb1-17"></span>
<span id="cb1-18">    df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(</span>
<span id="cb1-19">        {   </span>
<span id="cb1-20">            <span class="st" style="color: #20794D;">'pack_of_cigar'</span>: pack_of_cigar,</span>
<span id="cb1-21">            <span class="st" style="color: #20794D;">'covid_severity'</span>: np.random.normal(mean_of_severity_covid, <span class="dv" style="color: #AD0000;">1</span>, n),</span>
<span id="cb1-22">            <span class="st" style="color: #20794D;">'cigar_severity'</span>: np.random.normal(mean_of_severity_cigar, <span class="fl" style="color: #AD0000;">0.5</span>, n)</span>
<span id="cb1-23">        }</span>
<span id="cb1-24">    )</span>
<span id="cb1-25">    df <span class="op" style="color: #5E5E5E;">=</span> df.assign(</span>
<span id="cb1-26">        <span class="op" style="color: #5E5E5E;">**</span>{</span>
<span id="cb1-27">            <span class="st" style="color: #20794D;">'covid_severity'</span>: np.where(df[<span class="st" style="color: #20794D;">'covid_severity'</span>] <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span>, df[<span class="st" style="color: #20794D;">'covid_severity'</span>], <span class="dv" style="color: #AD0000;">0</span>), </span>
<span id="cb1-28">            <span class="st" style="color: #20794D;">'cigar_severity'</span>: np.where(df[<span class="st" style="color: #20794D;">'cigar_severity'</span>] <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span>, df[<span class="st" style="color: #20794D;">'cigar_severity'</span>], <span class="dv" style="color: #AD0000;">0</span>), </span>
<span id="cb1-29">            <span class="st" style="color: #20794D;">'is_hospitalized'</span>: np.where((df[<span class="st" style="color: #20794D;">'covid_severity'</span>] <span class="op" style="color: #5E5E5E;">&gt;</span> covid_threshold) <span class="op" style="color: #5E5E5E;">|</span> (df[<span class="st" style="color: #20794D;">'cigar_severity'</span>] <span class="op" style="color: #5E5E5E;">&gt;</span> cigar_threshold), <span class="st" style="color: #20794D;">"Yes"</span>, <span class="st" style="color: #20794D;">"No"</span>),</span>
<span id="cb1-30">            <span class="st" style="color: #20794D;">'is_observed'</span>: np.random.uniform(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, n)</span>
<span id="cb1-31">        }</span>
<span id="cb1-32">    )</span>
<span id="cb1-33"></span>
<span id="cb1-34">    df <span class="op" style="color: #5E5E5E;">=</span> df.query(</span>
<span id="cb1-35">            <span class="st" style="color: #20794D;">"(`covid_severity` &lt;= 3.5)"</span></span>
<span id="cb1-36">        )</span>
<span id="cb1-37">    df <span class="op" style="color: #5E5E5E;">=</span> df.query(</span>
<span id="cb1-38">            <span class="st" style="color: #20794D;">"(`is_hospitalized` == 'Yes') | (`is_hospitalized` == 'No' &amp; `is_observed` &lt;= 0.2)"</span>  </span>
<span id="cb1-39">    )</span>
<span id="cb1-40"></span>
<span id="cb1-41">    df <span class="op" style="color: #5E5E5E;">=</span> df.query(</span>
<span id="cb1-42">            <span class="st" style="color: #20794D;">"(`is_hospitalized` == 'No' &amp; `is_observed` &lt;= 0.2) | (is_observed &lt;= 0.5)"</span></span>
<span id="cb1-43">    )</span>
<span id="cb1-44"></span>
<span id="cb1-45">    <span class="cf" style="color: #003B4F;">return</span> df </span>
<span id="cb1-46">    </span>
<span id="cb1-47">res <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame()</span>
<span id="cb1-48"></span>
<span id="cb1-49"><span class="cf" style="color: #003B4F;">for</span> pack <span class="kw" style="color: #003B4F;">in</span> np.linspace(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">60</span>):</span>
<span id="cb1-50">    n <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">int</span>(np.random.uniform(<span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">40</span>, <span class="dv" style="color: #AD0000;">1</span>)[<span class="dv" style="color: #AD0000;">0</span>])</span>
<span id="cb1-51">    res <span class="op" style="color: #5E5E5E;">=</span> pd.concat([res, generate_unit_df(pack,n)])</span></code></pre></div>
</details>
</div>
<p>위의 플롯에 따라서 가상의 데이터를 생성했다. 코로나19 중증도는 흡연의 정도에 양의 영향을 받는다. 그리고 흡연의 정도는 별도로 건강에 악영향을 준다. 따라서 코로나19 중증도, 흡연의 정도 모두 해당 환자가 입원할 가능성을 결정하게 된다.</p>
<div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">palette <span class="op" style="color: #5E5E5E;">=</span> sns.color_palette(<span class="st" style="color: #20794D;">"dark"</span>)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;">#sns.palplot(palette)</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">plt.rcParams[<span class="st" style="color: #20794D;">'figure.figsize'</span>] <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">12</span>, <span class="dv" style="color: #AD0000;">5</span>]</span>
<span id="cb2-5">plt.style.use(<span class="st" style="color: #20794D;">"fivethirtyeight"</span>)<span class="co" style="color: #5E5E5E;"># for pretty graphs</span></span>
<span id="cb2-6">fig, (ax1, ax2) <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(ncols<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, sharey<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb2-7">sns.regplot(x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'pack_of_cigar'</span>,y <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'covid_severity'</span>, data <span class="op" style="color: #5E5E5E;">=</span> res, ax<span class="op" style="color: #5E5E5E;">=</span>ax1, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'grey'</span>,scatter_kws<span class="op" style="color: #5E5E5E;">=</span>{<span class="st" style="color: #20794D;">'alpha'</span>: <span class="fl" style="color: #AD0000;">0.4</span>})</span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;">#</span></span>
<span id="cb2-9"><span class="cf" style="color: #003B4F;">for</span> i, value <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(res[<span class="st" style="color: #20794D;">'is_hospitalized'</span>].unique()):</span>
<span id="cb2-10">    ax2 <span class="op" style="color: #5E5E5E;">=</span> sns.regplot(x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"pack_of_cigar"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"covid_severity"</span>,</span>
<span id="cb2-11">                     <span class="co" style="color: #5E5E5E;">#color=colors[value],</span></span>
<span id="cb2-12">                     <span class="co" style="color: #5E5E5E;">#marker=markers[i],      </span></span>
<span id="cb2-13">                     scatter_kws<span class="op" style="color: #5E5E5E;">=</span>{<span class="st" style="color: #20794D;">'alpha'</span>: <span class="fl" style="color: #AD0000;">0.3</span> <span class="cf" style="color: #003B4F;">if</span> value <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Yes"</span> <span class="cf" style="color: #003B4F;">else</span> <span class="fl" style="color: #AD0000;">0.15</span>},        </span>
<span id="cb2-14">                     data<span class="op" style="color: #5E5E5E;">=</span>res[res[<span class="st" style="color: #20794D;">'is_hospitalized'</span>] <span class="op" style="color: #5E5E5E;">==</span> value],</span>
<span id="cb2-15">                     label<span class="op" style="color: #5E5E5E;">=</span>value, </span>
<span id="cb2-16">                     ax <span class="op" style="color: #5E5E5E;">=</span> ax2)</span>
<span id="cb2-17"></span>
<span id="cb2-18">ax2.legend(loc<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'best'</span>)<span class="op" style="color: #5E5E5E;">;</span></span></code></pre></div>
</details>
<div class="cell quarto-layout-panel" data-execution_count="2">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 77.8%;justify-content: center;">
<figure class="figure">
<p><a href="2022-06-06-berkson-paradox-regression_files/figure-html/cell-3-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="충돌 요인은 어떻게 작용하는가? pack_of_cigar는 흡연의 정도를 covid_severity는 코로나19 중증도를 의미한다."><img src="https://www.lostineconomics.com/posts/regression/2022-06-06-berkson-paradox-regression_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img" width="1084"></a></p>
<p></p><figcaption class="figure-caption">충돌 요인은 어떻게 작용하는가? <code>pack_of_cigar</code>는 흡연의 정도를 <code>covid_severity</code>는 코로나19 중증도를 의미한다.</figcaption><p></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
</div>
<p>위의 왼쪽 그래프에서 보듯이 추출된 표본 전체에 대해서는 흡연의 정도와 코로나19의 중증도 사이에 양의 관계가 존재한다. 그런데 만일 충돌 요인인 입원 여부를 회귀 분석에서 통제하면 어떻게 될까? 오른쪽 그림에서 보듯이 병원에 입원한 환자에 대해서는 음의 상관성이 관찰된다. 왜 이럴까? 병원의 입원하는 변인은 코로나19의 중증도 이외에 흡연 정도에도 영향을 받는다. 흡연을 많이 할수록 코로나와 관계없이 그 자체로 입원할 가능성이 커진다. 흡연 정도가 낮을 경우 입원을 했다면 코로나19의 중증도에 따른 것일 가능성이 크다. 반면 흡연 정도가 높을 경우 코로나19 중증도는 상대적으로 다양한 상태를 지니게 되고, 따라서 평균적으로는 흡연 정도가 낮은 입원 환자에 비해서 낮은 코로나19 중증도를 지닐 수 있다.</p>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">ols1 <span class="op" style="color: #5E5E5E;">=</span> sm.ols(formula<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"covid_severity ~ pack_of_cigar"</span>, data<span class="op" style="color: #5E5E5E;">=</span>res).fit(use_t<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb3-2">ols2 <span class="op" style="color: #5E5E5E;">=</span> sm.ols(formula<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"covid_severity ~ pack_of_cigar + is_hospitalized"</span>, data<span class="op" style="color: #5E5E5E;">=</span>res).fit(use_t<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb3-3">ols3 <span class="op" style="color: #5E5E5E;">=</span> sm.ols(formula<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"covid_severity ~ pack_of_cigar + is_hospitalized"</span>, data<span class="op" style="color: #5E5E5E;">=</span>res[res.is_hospitalized<span class="op" style="color: #5E5E5E;">==</span><span class="st" style="color: #20794D;">"Yes"</span>]).fit(use_t<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;">#ols1.summary()</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;">#ols2.summary()</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="im" style="color: #00769E;">from</span> stargazer.stargazer <span class="im" style="color: #00769E;">import</span> Stargazer</span>
<span id="cb3-8">stargazer <span class="op" style="color: #5E5E5E;">=</span> Stargazer([ols1, ols2, ols3])</span>
<span id="cb3-9">stargazer</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="18">

<table style="text-align:center"><tbody><tr><td colspan="4" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left"></td><td colspan="3"><em>Dependent variable:covid_severity</em></td></tr><tr><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td>(1)</td><td>(2)</td><td>(3)</td></tr><tr><td colspan="4" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left">Intercept</td><td>0.556<sup>***</sup></td><td>0.732<sup>***</sup></td><td>2.699<sup>***</sup></td></tr><tr><td style="text-align:left"></td><td>(0.091)</td><td>(0.079)</td><td>(0.193)</td></tr><tr><td style="text-align:left">is_hospitalized[T.Yes]</td><td></td><td>1.404<sup>***</sup></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td>(0.101)</td><td></td></tr><tr><td style="text-align:left">pack_of_cigar</td><td>0.210<sup>***</sup></td><td>-0.073<sup>***</sup></td><td>-0.194<sup>***</sup></td></tr><tr><td style="text-align:left"></td><td>(0.023)</td><td>(0.028)</td><td>(0.040)</td></tr><tr><td colspan="4" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align: left">Observations</td><td>526</td><td>526</td><td>322</td></tr><tr><td style="text-align: left">R<sup>2</sup></td><td>0.142</td><td>0.374</td><td>0.068</td></tr><tr><td style="text-align: left">Adjusted R<sup>2</sup></td><td>0.140</td><td>0.371</td><td>0.066</td></tr><tr><td style="text-align: left">Residual Std. Error</td><td>0.907 (df=524)</td><td>0.776 (df=523)</td><td>0.851 (df=320)</td></tr><tr><td style="text-align: left">F Statistic</td><td>86.550<sup>***</sup> (df=1; 524)</td><td>156.106<sup>***</sup> (df=2; 523)</td><td>23.526<sup>***</sup> (df=1; 320)</td></tr><tr><td colspan="4" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align: left">Note:</td>
 <td colspan="3" style="text-align: right">
  <sup>*</sup>p&lt;0.1;
  <sup>**</sup>p&lt;0.05;
  <sup>***</sup>p&lt;0.01
 </td></tr></tbody></table>
</div>
</div>
<p>회귀 분석에서 이러한 결과를 잘 확인할 수 있다. 회귀 분석에서 현실에 가장 근접한 분석은 (1)이다. 입원 여부를 통제하게 될 경우(식 (2))는 흡연의 정도가 코로나19의 중증도에 미치는 영향을 왜곡하게 된다. 벅슨의 역설의 극단적인 버전은 입원한 환자만 표본으로 삼아 분석을 실시하는 경우이다. (3)에서 보듯이 흡연의 정도와 코로나19 중증도의 정도가 가장 많이 왜곡된다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%20R%5E2"> 값을 무조건 분석의 성과 지표로 삼으면 안 되는 이유도 확인하고 지나가자. 충돌 요인 변수가 통제되면 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%20R%5E2">은 증가한다. 설명 변수가 늘어날수록 설명 변수의 차원이 높아지게 되므로 벡터 공간에서 잔차의 길이가 줄어들게 된다. 이는 동어 반복에 가깝다. 위에서 보듯이 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%20R%5E2">가 줄었으니 분석력이 더 높아진 것일까?</p>
</div></div><p>벅슨의 역설은 생존자 편향(survivorship bias)과도 일맥상통한다. 유명한 아래의 그림을 다시 확인해보자. 살아 돌아온 비행기들이 맞은 부위는 오히려 보강이 필요하지 않은 부위다. 돌아오지 못한 비행기들은 현재 생존한 비행기들이 맞지 않은 부위 때문에 추락했을지 모른다.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 22.2%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 55.6%;justify-content: center;">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Survivorship-bias.svg/600px-Survivorship-bias.svg.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3" title="Abraham Wald가 했다는 전설적인 통찰의 사실 여부는 검증된 바 없다고 한다."><img src="https://www.lostineconomics.com/posts/regression/https:/upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Survivorship-bias.svg/600px-Survivorship-bias.svg.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">Abraham Wald가 했다는 전설적인 통찰의 사실 여부는 검증된 바 없다고 한다.</figcaption><p></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 22.2%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>regression</category>
  <category>stats-simple</category>
  <guid>https://www.lostineconomics.com/posts/regression/2022-06-06-berkson-paradox-regression.html</guid>
  <pubDate>Sun, 05 Jun 2022 15:00:00 GMT</pubDate>
  <media:content url="https://pbs.twimg.com/media/Ew7SkFMU8AcxUam?format=jpg&amp;name=small" medium="image"/>
</item>
<item>
  <title>Simpson’s Paradox with Regression</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/regression/2022-06-04-simpson-paradox-regression.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="회귀-분석으로-보는-심슨의-역설" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="회귀-분석으로-보는-심슨의-역설">회귀 분석으로 보는 심슨의 역설</h2>
<p>심슨의 역설을 보통은 회귀 분석으로 설명하지 않는다. 그런데 회귀 분석으로 보면 보다 명확하다. 심슨 역설의 전형적인 사례를 펭귄 부리의 길이와 높이를 통해 살펴보도록 하자.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>데이터는 <a href="https://towardsdatascience.com/the-curious-case-of-simpsons-paradox-6f178548d7e8">여기</a>를 참고하자.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://user-images.githubusercontent.com/39834789/86522451-84949f00-be38-11ea-9555-6409579f3b58.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="펭귄 부리의 길이와 높이"><img src="https://www.lostineconomics.com/posts/regression/https:/user-images.githubusercontent.com/39834789/86522451-84949f00-be38-11ea-9555-6409579f3b58.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">펭귄 부리의 길이와 높이</figcaption><p></p>
</figure>
</div>
</div></div><p><code>culmen</code>은 새의 부리를 뜻한다. 옆 그림에서 보듯이 <code>length</code>는 부리의 앞으로 튀어나온 길이를, <code>depth</code>는 부리의 높이를 의미한다. 아래 데이터는 펭귄의 세 가지 종족, 성별 등을 별도로 기록하고 있다.pip</p>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"> <span class="co" style="color: #5E5E5E;"># Basic packages</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd </span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sns</span>
<span id="cb1-6"><span class="im" style="color: #00769E;">from</span> scipy <span class="im" style="color: #00769E;">import</span> stats</span>
<span id="cb1-7"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;"># Stats models pip </span></span>
<span id="cb1-9"><span class="im" style="color: #00769E;">import</span> statsmodels.formula.api <span class="im" style="color: #00769E;">as</span> sm</span>
<span id="cb1-10"><span class="im" style="color: #00769E;">import</span> statsmodels <span class="im" style="color: #00769E;">as</span> statsmodels</span>
<span id="cb1-11"><span class="op" style="color: #5E5E5E;">%</span>matplotlib inline</span>
<span id="cb1-12"></span>
<span id="cb1-13">csv_addr <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"data/penguins_size.csv"</span></span>
<span id="cb1-14">plt.style.use(<span class="st" style="color: #20794D;">"fivethirtyeight"</span>)<span class="co" style="color: #5E5E5E;"># for pretty graphs</span></span>
<span id="cb1-15">df  <span class="op" style="color: #5E5E5E;">=</span> pd.read_csv(<span class="st" style="color: #20794D;">'data/penguins_size.csv'</span>)</span>
<span id="cb1-16">df.head()<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;">#df.info();</span></span>
<span id="cb1-18">df <span class="op" style="color: #5E5E5E;">=</span> df.dropna()</span>
<span id="cb1-19">df.info()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 334 entries, 0 to 343
Data columns (total 7 columns):
 #   Column             Non-Null Count  Dtype  
---  ------             --------------  -----  
 0   species            334 non-null    object 
 1   island             334 non-null    object 
 2   culmen_length_mm   334 non-null    float64
 3   culmen_depth_mm    334 non-null    float64
 4   flipper_length_mm  334 non-null    float64
 5   body_mass_g        334 non-null    float64
 6   sex                334 non-null    object 
dtypes: float64(4), object(3)
memory usage: 20.9+ KB</code></pre>
</div>
</div>
<div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">plt.rcParams[<span class="st" style="color: #20794D;">'figure.figsize'</span>] <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">12</span>, <span class="dv" style="color: #AD0000;">6</span>]</span>
<span id="cb3-2">fig, (ax1, ax2) <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(ncols<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, sharey<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb3-3">sns.regplot(x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'culmen_length_mm'</span>,y <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'culmen_depth_mm'</span>, data <span class="op" style="color: #5E5E5E;">=</span> df, scatter_kws<span class="op" style="color: #5E5E5E;">=</span>{<span class="st" style="color: #20794D;">'alpha'</span>: <span class="fl" style="color: #AD0000;">0.4</span>}, ax<span class="op" style="color: #5E5E5E;">=</span>ax1)</span>
<span id="cb3-4">r <span class="op" style="color: #5E5E5E;">=</span> stats.pearsonr(df[<span class="st" style="color: #20794D;">'culmen_length_mm'</span>], df[<span class="st" style="color: #20794D;">'culmen_depth_mm'</span>])[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb3-5">ax1.text(<span class="fl" style="color: #AD0000;">.03</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="st" style="color: #20794D;">'r=</span><span class="sc" style="color: #5E5E5E;">{:.3f}</span><span class="st" style="color: #20794D;">'</span>.<span class="bu" style="color: null;">format</span>(r), transform<span class="op" style="color: #5E5E5E;">=</span>ax1.transAxes)</span>
<span id="cb3-6">colors <span class="op" style="color: #5E5E5E;">=</span> [<span class="st" style="color: #20794D;">'darkorange'</span>, <span class="st" style="color: #20794D;">'royalblue'</span>, <span class="st" style="color: #20794D;">'#555555'</span>]</span>
<span id="cb3-7">markers <span class="op" style="color: #5E5E5E;">=</span> [<span class="st" style="color: #20794D;">'.'</span>, <span class="st" style="color: #20794D;">'+'</span>, <span class="st" style="color: #20794D;">'x'</span>]</span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;">#</span></span>
<span id="cb3-9"><span class="cf" style="color: #003B4F;">for</span> i, value <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(df[<span class="st" style="color: #20794D;">'species'</span>].unique()):</span>
<span id="cb3-10">    ax2 <span class="op" style="color: #5E5E5E;">=</span> sns.regplot(x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"culmen_length_mm"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"culmen_depth_mm"</span>, ax<span class="op" style="color: #5E5E5E;">=</span>ax2,</span>
<span id="cb3-11">                      scatter_kws<span class="op" style="color: #5E5E5E;">=</span>{<span class="st" style="color: #20794D;">'alpha'</span>: <span class="fl" style="color: #AD0000;">0.4</span>},</span>
<span id="cb3-12">                     color<span class="op" style="color: #5E5E5E;">=</span>colors[i],</span>
<span id="cb3-13">                     <span class="co" style="color: #5E5E5E;">#marker=markers[i],                      </span></span>
<span id="cb3-14">                     data<span class="op" style="color: #5E5E5E;">=</span>df[df[<span class="st" style="color: #20794D;">'species'</span>] <span class="op" style="color: #5E5E5E;">==</span> value],</span>
<span id="cb3-15">                     label<span class="op" style="color: #5E5E5E;">=</span>value)</span>
<span id="cb3-16">ax2.legend(loc<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'best'</span>)<span class="op" style="color: #5E5E5E;">;</span></span></code></pre></div>
</details>
<div class="cell quarto-layout-panel" data-execution_count="2">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 77.8%;justify-content: center;">
<figure class="figure">
<p><a href="2022-06-04-simpson-paradox-regression_files/figure-html/cell-3-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://www.lostineconomics.com/posts/regression/2022-06-04-simpson-paradox-regression_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
<div class="quarto-figure-spacer quarto-layout-cell" style="flex-basis: 11.1%;justify-content: center;">
<p>&nbsp;</p>
</div>
</div>
</div>
</div>
<p>왼쪽 그림에서 보듯이 종 구분 없이 펭귄 부리의 길이와 높이를 보면 서로 음의 상관성을 지니고 있는 듯 보인다. 그런데 이를 종별로 구별해서 살펴보면 오히려 길이와 높이는 양의 상관성을 지니고 있다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://user-images.githubusercontent.com/39834789/86522450-7f375480-be38-11ea-9437-9fd2a382aa7b.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3" title="펭귄 종류"><img src="https://www.lostineconomics.com/posts/regression/https:/user-images.githubusercontent.com/39834789/86522450-7f375480-be38-11ea-9437-9fd2a382aa7b.png" class="img-fluid figure-img"></a></p>
<p></p><figcaption class="figure-caption">펭귄 종류</figcaption><p></p>
</figure>
</div>
</div></div><div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">ols1 <span class="op" style="color: #5E5E5E;">=</span> sm.ols(formula<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"culmen_depth_mm ~ culmen_length_mm"</span>, data<span class="op" style="color: #5E5E5E;">=</span>df).fit(use_t<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb4-2">ols2 <span class="op" style="color: #5E5E5E;">=</span> sm.ols(formula<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"culmen_depth_mm ~ species + culmen_length_mm"</span>, data<span class="op" style="color: #5E5E5E;">=</span>df).fit(use_t<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb4-3">ols3 <span class="op" style="color: #5E5E5E;">=</span> sm.ols(formula<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"culmen_depth_mm ~ species * culmen_length_mm"</span>, data<span class="op" style="color: #5E5E5E;">=</span>df).fit(use_t<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;">#ols1.summary()</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;">#ols2.summary()</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="im" style="color: #00769E;">from</span> stargazer.stargazer <span class="im" style="color: #00769E;">import</span> Stargazer</span>
<span id="cb4-9">stargazer <span class="op" style="color: #5E5E5E;">=</span> Stargazer([ols1, ols2, ols3])</span>
<span id="cb4-10">stargazer</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="6">

<table style="text-align:center"><tbody><tr><td colspan="4" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left"></td><td colspan="3"><em>Dependent variable:culmen_depth_mm</em></td></tr><tr><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td>(1)</td><td>(2)</td><td>(3)</td></tr><tr><td colspan="4" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left">Intercept</td><td>20.786<sup>***</sup></td><td>10.619<sup>***</sup></td><td>11.488<sup>***</sup></td></tr><tr><td style="text-align:left"></td><td>(0.854)</td><td>(0.691)</td><td>(1.162)</td></tr><tr><td style="text-align:left">culmen_length_mm</td><td>-0.082<sup>***</sup></td><td>0.199<sup>***</sup></td><td>0.177<sup>***</sup></td></tr><tr><td style="text-align:left"></td><td>(0.019)</td><td>(0.018)</td><td>(0.030)</td></tr><tr><td style="text-align:left">species[T.Chinstrap]</td><td></td><td>-1.919<sup>***</sup></td><td>-3.919<sup>*</sup></td></tr><tr><td style="text-align:left"></td><td></td><td>(0.226)</td><td>(2.070)</td></tr><tr><td style="text-align:left">species[T.Chinstrap]:culmen_length_mm</td><td></td><td></td><td>0.046<sup></sup></td></tr><tr><td style="text-align:left"></td><td></td><td></td><td>(0.046)</td></tr><tr><td style="text-align:left">species[T.Gentoo]</td><td></td><td>-5.080<sup>***</sup></td><td>-6.187<sup>***</sup></td></tr><tr><td style="text-align:left"></td><td></td><td>(0.194)</td><td>(1.778)</td></tr><tr><td style="text-align:left">species[T.Gentoo]:culmen_length_mm</td><td></td><td></td><td>0.027<sup></sup></td></tr><tr><td style="text-align:left"></td><td></td><td></td><td>(0.041)</td></tr><tr><td colspan="4" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align: left">Observations</td><td>334</td><td>334</td><td>334</td></tr><tr><td style="text-align: left">R<sup>2</sup></td><td>0.052</td><td>0.766</td><td>0.767</td></tr><tr><td style="text-align: left">Adjusted R<sup>2</sup></td><td>0.049</td><td>0.764</td><td>0.764</td></tr><tr><td style="text-align: left">Residual Std. Error</td><td>1.919 (df=332)</td><td>0.956 (df=330)</td><td>0.957 (df=328)</td></tr><tr><td style="text-align: left">F Statistic</td><td>18.313<sup>***</sup> (df=1; 332)</td><td>360.759<sup>***</sup> (df=3; 330)</td><td>216.026<sup>***</sup> (df=5; 328)</td></tr><tr><td colspan="4" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align: left">Note:</td>
 <td colspan="3" style="text-align: right">
  <sup>*</sup>p&lt;0.1;
  <sup>**</sup>p&lt;0.05;
  <sup>***</sup>p&lt;0.01
 </td></tr></tbody></table>
</div>
</div>
<p>회귀 분석에서 종을 통제한 경우와 그렇지 않은 경우의 <code>culmen_length_mm</code>(부리의 길이)의 계수를 비교해보자. (1)은 종족을 통제하지 않은 회귀식으로 <code>culmen_length_mm</code>의 계수는 음수이다. 반면 종족을 통제한 (2)의 회귀식은 종족의 구분해 각 절편과 해당 종족 내의 부리의 길이와 높이의 관계를 계산해 이를 적절하게 가중 평균한 값이 <code>culmen_length_mm</code>의 계수가 된다. 회귀 테이블에서 보듯이 <code>culmen_length_mm</code>의 계수는 음수에서 양수로 바뀌어 있다.</p>



<div class="no-row-height column-margin column-container"><div class="">
<p>나머지 계수의 의미는 기본이 되는 Adelie 종족을 기준으로 다른 두 개의 종족의 절편이 얼마나 떨어져 있는지를 보여준다. 회귀식을 적어보면 다음과 같다.</p>
<p>식 (1) <img src="https://latex.codecogs.com/png.latex?y_i%20=%20%5Calpha_i%20+%20%5Cbeta%20x_i"></p>
<p>식 (2) <img src="https://latex.codecogs.com/png.latex?y_i%20=%20%5Calpha_i%20+%20%5Cbeta%20x_i%20+%20D_%7B1i%7D%20+%20D_%7B2i%7D"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y_i">: <code>culmen_depth_mm</code> 부리의 높이</li>
<li><img src="https://latex.codecogs.com/png.latex?x_i">: <code>culmen_length_mm</code> 부리의 길이</li>
<li><img src="https://latex.codecogs.com/png.latex?D_%7B1i%7D">: 종족이 <code>Chinstrap</code>일 경우 1 이외는 0</li>
<li><img src="https://latex.codecogs.com/png.latex?D_%7B2i%7D">: 종족이 <code>Gentoo</code>일 경우 1이외는 0</li>
</ul>
<p>식 (3)은 <img src="https://latex.codecogs.com/png.latex?%5Cbeta_i">가 그룹별로 달라지는지 여부를 교호작용 항목을 통해 확인했다. (3)이 보여주듯이 그룹별로 <img src="https://latex.codecogs.com/png.latex?%5Cbeta_i">는 통계적으로 유의미한 차이가 없다.</p>
</div></div></section>

 ]]></description>
  <category>regression</category>
  <category>stats-simple</category>
  <guid>https://www.lostineconomics.com/posts/regression/2022-06-04-simpson-paradox-regression.html</guid>
  <pubDate>Sat, 04 Jun 2022 15:00:00 GMT</pubDate>
  <media:content url="https://pbs.twimg.com/media/E_fzweGVIAEyalV?format=jpg&amp;name=4096x4096" medium="image"/>
</item>
<item>
  <title>Markov and Chebyshev Inequalities</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/stats-simple/2022-05-30-markov-chebyshev.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><div class="hidden">
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cdef%5CE%7B%7B%5Cmathbb%20E%7D%7D%0A%5Cdef%5CV%7B%7B%5Cmathbb%20V%7D%7D%0A%5Cdef%5CES#1%7B%5Coverline%7B#1%7D%7D%0A"></p>
</div>
<section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>마르코프 부등식과 체비쇼프 부등식 정리한다.</li>
<li>대수의 법칙을 증명할 때 유용하다.</li>
</ul>
</section>
<section id="markov-inequality" class="level2">
<h2 class="anchored" data-anchor-id="markov-inequality">Markov Inequality</h2>
<p>For <img src="https://latex.codecogs.com/png.latex?X%20%5Cin%20%5Cmathbb%20R%5E+">, <img src="https://latex.codecogs.com/png.latex?%0AP(X%20%5Cgeq%20t)%20%5Cleq%20%5Cdfrac%7B%5CE(X)%7D%7Bt%7D%0A"></p>
</section>
<section id="chebyshev-inequality" class="level2">
<h2 class="anchored" data-anchor-id="chebyshev-inequality">Chebyshev Inequality</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Cvert%20X%20-%20%5Cmu%20%5Cvert%20%5Cgeq%20k)%20%5Cleq%20%5Cdfrac%7B%5Csigma%5E2%7D%7Bk%5E2%7D%0A"></p>
</section>
<section id="어디에-써먹나" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="어디에-써먹나">어디에 써먹나?</h2>
<p>약한 버전의 LLN(대수의 법칙)을 증명할 때 체비쇼프의 부등식을 쓴다. 만일 <img src="https://latex.codecogs.com/png.latex?X_1,%20X_2,%20%5Cdotsc,%20X_n">이 IID를 따르고 <img src="https://latex.codecogs.com/png.latex?%5CE%20(X_i%5E2)%20%3C%20%5Cinfty">라고 가정하자. 이때, 확률 극한의 정의를 따라, 표본 통계량 <img src="https://latex.codecogs.com/png.latex?%5CES%7BX%7D_n">가 임의의 양수 <img src="https://latex.codecogs.com/png.latex?%5Cepsilon">에 대해서 다음을 증명하면 대수의 법칙이 성립한다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20P(%5Cvert%20%5CES%7BX%7D_n%20-%20%5Cmu%20%5Cvert%20%5Cgeq%20%5Cepsilon)%20=%200%0A"></p>
<section id="증명" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="증명">증명</h3>
<p>체비쇼프 부등식을 그대로 써보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Cvert%20%5CES%7BX%7D_n%20-%20%5Cmu%20%5Cvert%20%5Cgeq%20%5Cepsilon)%20%5Cleq%20%5Cdfrac%7B%5CE%5Clbrack(%5CES%7BX%7D_n-%5Cmu)%5E2%5Crbrack%7D%7B%5Cepsilon%5E2%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cmathbb%20E%20%5Clbrack(%5CES%7BX%7D_n%20-%20%5Cmu)%5E2%5Crbrack%20=%20&amp;%20%5Cmathbb%20E%20%5CBig%5Clbrace%20%5CBig%5Clbrack%20%5Cdfrac%7B1%7D%7Bn%5E2%7D(%5Csum_%7Bi=1%7D%5E%7Bn%7D(X_i%20-%20%5Cmu))%5E2%5CBig%5Crbrack%5CBig%5Crbrace%20%5C%5C%0A=%20&amp;%20%5Cdfrac%7B1%7D%7Bn%5E2%7D%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20%5Cmathbb%20E%20(X_i%20-%20%5Cmu)(X_j%20-%20%5Cmu)%20%5C%5C%0A=%20&amp;%20%5Cdfrac%7B1%7D%7Bn%5E2%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%5Cmathbb%20E%20(X_i%20-%20%5Cmu)%5E2%20%5C%5C%0A=%20&amp;%20%5Cdfrac%7B%5Csigma%5E2%7D%7Bn%7D%0A%5Cend%7Baligned%7D%0A"></p>

<div class="no-row-height column-margin column-container"><div class="">
<p>보다 상세한 유도 과정은 <a href="https://hsm-edu.tistory.com/16">여기</a>를 참고하라.</p>
</div></div><p>위의 결과를 이용하면,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Cvert%20%5CES%7BX%7D_n%20-%20%5Cmu%20%5Cvert%20%5Cgeq%20%5Cepsilon)%20%5Cleq%20%5Cdfrac%7B%5Csigma%5E2%7D%7Bn%20%5Cepsilon%5E2%7D%0A"></p>
</section>
</section>
<section id="proof-of-chebshev-inequality" class="level2">
<h2 class="anchored" data-anchor-id="proof-of-chebshev-inequality">Proof of Chebshev Inequality</h2>
<p><img src="https://latex.codecogs.com/png.latex?P(%5Cvert%20X%20-%20%5Cmu%20%5Cvert%20%5Cgeq%20k)%20=%20P%5Clbrack%20(X%20-%20%5Cmu)%5E2%20%5Cgeq%20k%5E2%20%5Crbrack">가 성립한다.</p>
<p>마르코프 부등식에 의하여,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP%5Clbrack%20(X%20-%20%5Cmu)%5E2%20%5Cgeq%20k%5E2%20%5Crbrack%20%5Cleq%20%5Cdfrac%7B%5CE%20%5Clbrack%20(X-%5Cmu)%5E2%20%5Crbrack%7D%7Bk%5E2%7D%20=%20%5Cdfrac%7B%5Csigma%5E2%7D%7Bk%5E2%7D%0A"></p>
<p>따라서</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Cvert%20X%20-%20%5Cmu%20%5Cvert%20%5Cgeq%20k)%20%5Cleq%20%5Cdfrac%7B%5Csigma%5E2%7D%7Bk%5E2%7D%0A"></p>
</section>
<section id="proof-of-markov-inequality" class="level2">
<h2 class="anchored" data-anchor-id="proof-of-markov-inequality">Proof of Markov Inequality</h2>
<p>이산 확률변수와 연속 확률변수 모두에 대해서 증명을 해야 한다. 이산을 잘 이해하면 연속의 경우로 확장 가능하다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CE%20(X)%20=%20%5Csum_%7Bx=0%7D%5E%7B%5Cinfty%7D%20x%20P(X=x)%0A"></p>
<p>임의의 상수 <img src="https://latex.codecogs.com/png.latex?t">에 대해서,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5CE(X)%20&amp;%20=%20%5Csum_%7Bx=0%7D%5E%7Bt-1%7D%20x%20P(X=x)%20+%20%5Csum_%7Bx=t%7D%5E%7B%5Cinfty%7D%20x%20P(X=x)%20%5C%5C%0A&amp;%20%5Cgeq%20%5Csum_%7Bx=t%7D%5E%7B%5Cinfty%7D%20x%20P(X=x)%20%5C%5C%0A&amp;%20%5Cgeq%20%5Csum_%7Bx=t%7D%5E%7B%5Cinfty%7D%20t%20P(X=x)%20%5C%5C%0A&amp;%20=%20t%20%5Csum_%7Bx=t%7D%5E%7B%5Cinfty%7D%20P(X=x)%20%5C%5C%0A&amp;%20=%20t%20P(X%20%5Cgeq%20t)%0A%5Cend%7Baligned%7D%0A"></p>
<p>따라서,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(X%20%5Cgeq%20t)%20%5Cleq%20%5Cdfrac%7B%5CE(X)%7D%7Bt%7D%0A"></p>


</section>

 ]]></description>
  <category>stats-simple</category>
  <guid>https://www.lostineconomics.com/posts/stats-simple/2022-05-30-markov-chebyshev.html</guid>
  <pubDate>Sun, 29 May 2022 15:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/max/1400/1*e2LIgXPudagHYON8HdRO_g.png" medium="image" type="image/png"/>
</item>
<item>
  <title>정규 분포에 집착하지 말자.</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/regression/2022-05-28-normality.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>샘플 크기가 충분하면, 통계적 검정 시 정규 분포 가정에 집착하지 말자.</li>
</ul>
</section>
<section id="정규-분포는-필요한-가정인가" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="정규-분포는-필요한-가정인가">정규 분포는 필요한 가정인가?</h2>
<p>표분의 크기가 크지 않다면 가설 검정을 위해 (정규) 분포 가정이 필요하다. 하지만 표본의 크기가 어느 정도 이상일 때도 가설 검정을 위해 정규 분포 가정이 필요할까? 아래와 같은 다중 회귀 분석 모형을 보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AY_i%20=%20%5Calpha%20+%20%5Cbeta_1%20X_%7B1i%7D%20+%20%5Cbeta_2%20X_%7B2i%7D%20+%20%5Cdotsb%20+%20%5Cbeta_n%20X_%7Bni%7D%20+%20%5Cepsilon_i%0A"></p>
<p>원래 정규 분포 가정은 <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_i%20%5Csim%20%5Crm%20N%20(0,%20%5Csigma%5E2)">이다. 그런데 우리는 이 가정을 어떻게 확인할 수 있을까?</p>
<p><img src="https://latex.codecogs.com/png.latex?Y_i%20%5Csim%20%5Crm%20N(%5Ccdot)">을 확인하면 될까? 원래의 가정은 오차항에 대한 가정이다. 앞에 여러 가지 변수의 작용으로 <img src="https://latex.codecogs.com/png.latex?Y_i">가 결정되므로 <img src="https://latex.codecogs.com/png.latex?Y_i">가 정규 분포를 따르는 것이 <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_i">가 정규분포를 따르는 것의 충분 조건이 되지 않는다. 반면 <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_i">가 정규 분포를 따른다고 해서 반드시 <img src="https://latex.codecogs.com/png.latex?Y_i">가 정규 분포를 따른다고 볼 수도 없다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%5Cepsilon_i%20=%20Y_i%20-%20%5Chat%7BY%7D_i">가 정규 분포를 따르면 될까? 이 역시 <img src="https://latex.codecogs.com/png.latex?%5Chat%5Cepsilon_i">이 정규 분포를 따른다고 해서 <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_i">가 정규 분포를 따르리라고 볼 수 없다. <img src="https://latex.codecogs.com/png.latex?%5Chat%5Cepsilon_i">는 회귀 분석의 모델링 아래 도출된 <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_i">에 관한 추정치일 뿐이다. 추정치가 정규 분포를 따른다고 해서 원래 대상도 같은 성질을 지닐까?</p>
<p>오차항에 관한 내용은 모델링을 위한 일종의 가정이다. 모델링의 가정은 받아들이는 것이지 검증하는 것이 아니다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>표본이 크지 않을 때 즉 소 표본에 적합한 분석 방법을 찾는 것은 대 표본의 경우에 비해 까다로운 문제이다. 그런데 소 표본에서 회귀 분석은 그리 나쁜 분석 방법이 아니다.</p>
</div></div></section>
<section id="표본의-크기가-충분히-크다면" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="표본의-크기가-충분히-크다면">표본의 크기가 충분히 크다면</h2>
<p>만일 가정을 받아들일 수 없다면 회귀분석에서 검정을 수행할 수 없을까? 그렇지 않다는 걸 우리는 이미 잘 알고 있다. 만일 표본의 크기가 충분히 크다면 오차 항의 정규 분포 가정 없이도 가설 검정을 할 수 있다.</p>
<p>행렬을 활용해 나타낸 회귀 분석의 계수의 표본 추정량 <img src="https://latex.codecogs.com/png.latex?%5Chat%20%5Cbeta">는 다음과 같다. <img src="https://latex.codecogs.com/png.latex?%0A%5Chat%20%5Cbeta%20=%20(X%5ET%20X)%5E%7B-1%7D(X%20y)%0A"></p>
<p>회귀 분석에서 <img src="https://latex.codecogs.com/png.latex?%5Cbeta_i">를 검정하기 위한 t-통계량은 다음과 같이 정의된다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0At_i%20=%20%5Cdfrac%7B%5Chat%20%5Cbeta_i%20-%20%5Cbeta%7D%7BS%20%5Csqrt%7B(X%5ET%20X)_%7Bii%7D%5E%7B-1%7D%7D%7D%0A"></p>
<p>with</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AS(y_i)%20=%20%5Csqrt%7B%5Cdfrac%7B1%7D%7Bn-k%7D%20%5Csum_%7Bi=1%7D%5En%20(y_i%20-%20%20%5Chat%20y_i)%5E2%7D%0A"></p>
<p>여기서 <img src="https://latex.codecogs.com/png.latex?%5Chat%20y_i%20=%20%5Cunderset%7B(1%20%5Ctimes%20k)%7D%7Bx%5Er_i%7D%5Cunderset%7B(k%20%5Ctimes%201)%7D%7B%5Cvphantom%7Bx%5Er_i%7D%5Chat%5Cbeta%7D">이고, <img src="https://latex.codecogs.com/png.latex?x%5Er_i">은 <img src="https://latex.codecogs.com/png.latex?X">의 <img src="https://latex.codecogs.com/png.latex?i">’th 행(row) 벡터를 나타낸다.</p>
<p><img src="https://latex.codecogs.com/png.latex?n">이 커짐에 따라서 <img src="https://latex.codecogs.com/png.latex?t_i">의 분포는 <img src="https://latex.codecogs.com/png.latex?%5Crm%20N(0,1)">에 점점 다가간다. 이것이 중심극한 정리가 가설 검정에서 중요한 이유이다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://latex.codecogs.com/png.latex?%5Csqrt%7Bn%7D(%5Cbeta_i%20-%20%5Cbeta)%20%5Coverset%7Bd%7D%7B%5Clongrightarrow%7D%20%5Crm%20N%20(0,%20%5Csigma_i)"> 직관적으로 설명하면 <img src="https://latex.codecogs.com/png.latex?t_i">의 분자와 분모 모두 0으로 수렴한다. 이때 분자와 분모의 수렴이 일정한 분포, 정규 분포로 수렴한다는 것이 중심 극한 정리이다.</p>
</div></div><p>요약하면 표본의 크기가 충분할 때 오차 항의 정규 분포 가정은 잊어도 좋다. 이 가정이 없어도 중심 극한 정리에 따라서 필요한 가설 검정을 수행할 수 있다. t–값과 표준 정규 분포에 근거한 개별 계수의 검정 그리고 F–값과 F 분포에 근거한 전체 계수의 검정이 모두 가능하다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>표본의 크기가 얼마나 크면 될까? <a href="https://www.jclinepi.com/article/S0895-4356(17)%2030485-7">Schmidt and Finan</a>의 연구에 따르면 회귀 모형의 경우 변수 당 대략 10개 이상의 관찰이 필요하다. 옆 그림에서 보듯이 모평균을 추정하는 문제에서 표본 평균의 크기가 30개 이상이면 CLT을 적용할 수 있다.</p>
</div></div><div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/regression/http:/player.slideplayer.com/76/12695720/slides/slide_3.jpg" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">표본의 크기가 커질수록 표본 통계량의 분포는 정규 분포에 근접한다.</figcaption><p></p>
</figure>
</div>
<p>위 그림에서 보듯이 가설 검정에서 모집단의 분포는 우리의 관심사가 아니다. 우리의 관심사는 표본 통계량이고, 이 표본 통계량이 얼마나 믿을만지를 가설 검정을 통해 파악한다. 후자를 가능하게 하는 것이 대 표본의 표본 통계량에 대해 성립하는 중심 극한 정리인 셈이다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/regression/https:/raw.githubusercontent.com/dfsnow/clt/master/gifs/binom.gif" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption"><img src="https://latex.codecogs.com/png.latex?p=0.75">의 베르누이 시행을 <img src="https://latex.codecogs.com/png.latex?n">에 따라서 10,000 번 시뮬레이션한 분포</figcaption><p></p>
</figure>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://thestatsgeek.com/2013/08/07/assumptions-for-linear-regression/" class="my-figure7">The Stats Geek</a></li>
<li><a href="https://www.youtube.com/watch?%20v=dBB_atu-1QM">Large Sample Inference: 2. Asymptotic Normality</a></li>
</ul>


</section>

 ]]></description>
  <category>regression</category>
  <guid>https://www.lostineconomics.com/posts/regression/2022-05-28-normality.html</guid>
  <pubDate>Fri, 27 May 2022 15:00:00 GMT</pubDate>
  <media:content url="http://player.slideplayer.com/76/12695720/slides/slide_3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sample Statistics and Standard Error</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/stats-simple/2022-05-27-SE.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><div class="hidden">
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cdef%5CE%7B%7B%5Cmathbb%20E%7D%7D%0A%5Cdef%5CV%7B%7B%5Cmathbb%20V%7D%7D%0A%5Cdef%5CES#1%7B%5Coverline%7B#1%7D%7D%0A"></p>
</div>
<section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>기본 통계학 용어와 개념 몇 가를 정리해 보자.</li>
<li>자주 잊어먹는 나를 위한 개인적인 용도</li>
</ul>
</section>
<section id="why" class="level2">
<h2 class="anchored" data-anchor-id="why">Why</h2>
<p>통계학을 들은 사람들이라면 표준 오차는 대체로 잘 아는 내용이다. 그런데 가끔 까먹는다. 개인적인 용도를 위해서 관련된 앞뒤 내용 몇 가지 정리해둔다.</p>
</section>
<section id="big-ifs" class="level2">
<h2 class="anchored" data-anchor-id="big-ifs">Big Ifs</h2>
<ul>
<li>알려진 파라미터는 없다.</li>
<li>알려진 분포도 없다.</li>
<li>표본 추출은 평균이 <img src="https://latex.codecogs.com/png.latex?%5Cmu">이고 분산이 <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2%20%3C%20%5Cinfty">인 분포에서 IID(independent and identically distributed)로 생성된다.</li>
</ul>
</section>
<section id="unbiasedness-and-consistency" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="unbiasedness-and-consistency">Unbiasedness and Consistency</h2>
<p>파라미터 <img src="https://latex.codecogs.com/png.latex?%5Ctheta">와 추정량 <img src="https://latex.codecogs.com/png.latex?%5Chat%20%5Ctheta">이 있다고 하자.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>표본 <img src="https://latex.codecogs.com/png.latex?x_i">가 있다고 할 때, <img src="https://latex.codecogs.com/png.latex?%5Chat%20%5Ctheta">는 표본 <img src="https://latex.codecogs.com/png.latex?x_i">라는 정보를 통해 구성된다. 즉, <img src="https://latex.codecogs.com/png.latex?%5Chat%5Ctheta%20%5Cequiv%20%5Chat%5Ctheta(x_i)">.</p>
</div></div><p><strong>Unbiased</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CE(%5Chat%20%5Ctheta)%20=%20%5Ctheta%0A"></p>
<p>추정량의 시퀀스 <img src="https://latex.codecogs.com/png.latex?%5Clbrace%20%5Chat%5Ctheta_n%20%5Crbrace">이 있다고 할 때,</p>
<p><strong>Consistent</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cunderset%7Bn%20%5Cto%20%5Cinfty%7D%7B%5Crm%20plim%7D~%5Chat%5Ctheta_n%20=%20%5Ctheta%20%20%0A"></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/stats-simple/https:/upload.wikimedia.org/wikipedia/commons/b/b2/Consistency_of_estimator.svg" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">파라미터 값 4를 추정하기 위한 샘플 추정량; 샘플 크기가 증가하면서 4로 접근한다. 예시의 샘플 추정량은 biased된 추정량이다.</figcaption><p></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>plim의 정의는 다음과 같다. 표본 크기 <img src="https://latex.codecogs.com/png.latex?n">과 임의의 양의 상수 <img src="https://latex.codecogs.com/png.latex?c">에 대하여 표본 추정량 <img src="https://latex.codecogs.com/png.latex?%5Chat%5Ctheta_n">은 <img src="https://latex.codecogs.com/png.latex?%5Ctheta">의 일치 추정량(consistent estimator)이라고 한다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7DP%5B%7C%5Chat%5Ctheta_n%20-%20%5Ctheta%7C%5Cgeq%20c%5D=0%0A"></p>
</div></div></section>
<section id="concepts" class="level2">
<h2 class="anchored" data-anchor-id="concepts">Concepts</h2>
<table class="table">
<colgroup>
<col style="width: 40%">
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">용어</th>
<th>영어 표현</th>
<th>정의</th>
<th>사례 혹은 코멘트</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">모수</td>
<td>parameter</td>
<td>한 모집단의 고정된 특성 혹은 이를 나타내는 값</td>
<td><img src="https://latex.codecogs.com/png.latex?%5CE%5BY_i%5D">, 분포의 <img src="https://latex.codecogs.com/png.latex?%5Cmu">, <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2"></td>
</tr>
<tr class="even">
<td style="text-align: center;">표본 통계량</td>
<td>sample statistics</td>
<td>표본에 따라서 변화하는 값</td>
<td><img src="https://latex.codecogs.com/png.latex?%5CES%7BY%7D_n">, <img src="https://latex.codecogs.com/png.latex?S(Y_i)%5E2">, <img src="https://latex.codecogs.com/png.latex?SE">, <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BSE%7D"></td>
</tr>
<tr class="odd">
<td style="text-align: center;">표본 평균</td>
<td>sample mean</td>
<td>표본의 평균</td>
<td><img src="https://latex.codecogs.com/png.latex?%5CES%7BY%7D_n%20=%20%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi=1%7D%5En%20Y_i"></td>
</tr>
<tr class="even">
<td style="text-align: center;">표본 분산</td>
<td>sample variance</td>
<td>표본의 분산</td>
<td><img src="https://latex.codecogs.com/png.latex?S(Y_i)%5E2%20=%20%5Cfrac%7B1%7D%7Bn-1%7D%5Csum_%7Bi=1%7D%5En%20(Y_i%20-%20%5CES%7BY%7D_n)%5E2"></td>
</tr>
<tr class="odd">
<td style="text-align: center;">표준 오차</td>
<td>standard error</td>
<td>표본 통계량의 표준 편차</td>
<td><img src="https://latex.codecogs.com/png.latex?SE(%5CES%7BY%7D_n)%20=%20%5Cfrac%7B%5Csigma_Y%7D%7B%5Csqrt%7Bn%7D%7D"></td>
</tr>
<tr class="even">
<td style="text-align: center;">표준 오차의 추정치</td>
<td>estimated standard error</td>
<td>표준 오차 계산 시 <img src="https://latex.codecogs.com/png.latex?%5Csigma_Y%20%5Cto%20S(Y_i)"></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BSE%7D(%5CES%7BY%7D_n)%20=%20%5Cfrac%7BS(Y_i)%7D%7B%5Csqrt%7Bn%7D%7D"></td>
</tr>
<tr class="odd">
<td style="text-align: center;">t-통계량</td>
<td>t-statistic</td>
<td><img src="https://latex.codecogs.com/png.latex?t(%5Cmu)%20=%20%5Cfrac%7B%5CES%7BY%7D_n%20-%20%5Cmu%7D%7B%5Cwidehat%7BSE%7D(%5CES%7BY%7D_n)%7D"></td>
<td><img src="https://latex.codecogs.com/png.latex?n">이 커질 때 정규분포에 근접한다.</td>
</tr>
</tbody>
</table>
</section>
<section id="sample-mean" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="sample-mean">Sample Mean</h2>
<p>IID 추출로 크기 <img src="https://latex.codecogs.com/png.latex?n">의 표본 <img src="https://latex.codecogs.com/png.latex?Y_1,%20%5Cdotsc,%20Y_n">을 얻었다고 하자. <img src="https://latex.codecogs.com/png.latex?Y_i">가 모평균 <img src="https://latex.codecogs.com/png.latex?%5Cmu">와 모 표준편차 <img src="https://latex.codecogs.com/png.latex?%5Csigma">를 따른다고 할 때, 표본 평균의 정의는 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CES%7BY%7D_n%20=%20%5Csum_%7Bi=1%7D%5En%20Y_i.%0A"></p>
<p>표본 평균과 달리 <img src="https://latex.codecogs.com/png.latex?Y_i">의 기댓값, 즉 모평균은 <img src="https://latex.codecogs.com/png.latex?%5CE%20(Y_i)%20%5Cequiv%20%5Cmu">라고 쓴다. 여기는 <img src="https://latex.codecogs.com/png.latex?n">이 붙지 않는다. 이는 모평균의 특성으로 일종의 고정된 (미지의) 값이다. 기댓값 <img src="https://latex.codecogs.com/png.latex?%5CE(Y_i)">를 추정하는 값으로서 표본 평균 <img src="https://latex.codecogs.com/png.latex?%5CES%7BY%7D_n">의 특징은 아래 두 개로 요약된다.</p>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?%5CE(%5CES%20Y_n)%20=%20%5Cmu"></li>
<li><img src="https://latex.codecogs.com/png.latex?%5CV(%5CES%20Y_n)%20=%20%7B%5Csigma%5E2%7D/%7Bn%7D"></li>
</ol>
<section id="unbiasedness" class="level3">
<h3 class="anchored" data-anchor-id="unbiasedness">Unbiasedness</h3>
<p>1에서 보듯이 <img src="https://latex.codecogs.com/png.latex?%5CES%7BY%7D_n">은 불편 추정량이다.</p>
</section>
<section id="consistency" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="consistency">Consistency</h3>
<p><img src="https://latex.codecogs.com/png.latex?n">이 증가하면 LLN에 따라서 <img src="https://latex.codecogs.com/png.latex?%5CES%7BY%7D_n%20%5Coverset%7BP%7D%7B%5Clongrightarrow%7D%20%5Cmu">가 성립한다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://latex.codecogs.com/png.latex?%5Coverset%7BP%7D%7B%5Clongrightarrow%7D">는 확률적인 수렴, 즉 앞서 정의를 살펴본 probability limit을 뜻한다. LLN은 약한 버전과 강한 버전이 있다. Kolmogorov의 강한 버전의 사실 증명이 복잡하다. 약한 버전의 증명은 <a href="https://python.quantecon.org/lln_clt.html">여기</a>를 참고하자. Chebyshev 부등식과 <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5CV(%5CES%7BY%7D_n)%20=%200">을 활용한다.</p>
</div></div></section>
<section id="central-limit-theorem" class="level3">
<h3 class="anchored" data-anchor-id="central-limit-theorem">Central Limit Theorem</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0AZ_n%20=%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cdfrac%7B%5CES%7BY%7D_n%20-%20%5Cmu%7D%7B%5Cfrac%7B%5Csigma%7D%7B%5Csqrt%7Bn%7D%7D%7D%20%5Csim%20%5Crm%20N(0,1)%0A"></p>
</section>
</section>
<section id="sample-variance" class="level2">
<h2 class="anchored" data-anchor-id="sample-variance">Sample Variance</h2>
<p>얼른 생각할 수 있는 <img src="https://latex.codecogs.com/png.latex?%5Csigma">의 추정량은 표본 분산 <img src="https://latex.codecogs.com/png.latex?S_n">는 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AS%5E2_n%20=%20%5Cdfrac%7B1%7D%7Bn-1%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20(Y_i%20-%20%5CES%7BY%7D_n)%5E2%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?S%5E2_n">은 불편 추정량이고 일치 추정량이다. <img src="https://latex.codecogs.com/png.latex?n">이 충분히 크다면 불편 추정량 여부는 중요하지 않다. <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7B1%7D%7B10000%7D">과 <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7B1%7D%7B9999%7D">의 차이가 큰 의미가 있을까? <img src="https://latex.codecogs.com/png.latex?(n-1)"> 대신 <img src="https://latex.codecogs.com/png.latex?n">이 들어간 표본 추정량과 일치성을 유지한다.</p>
</section>
<section id="standard-error" class="level2">
<h2 class="anchored" data-anchor-id="standard-error">Standard Error</h2>
<p>어떤 통계량의 표준 오차(standard error: SE)는 표본 통계량의 표준 편차를 뜻한다. 표본 통계량 <img src="https://latex.codecogs.com/png.latex?%5CES%7BY%7D_n">의 표준 편차 <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B%5CV(%5CES%7BY%7D_n)%7D">을 의미한다. <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2%20%3C%20%5Cinfty">를 가정할 때,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CE(%5CES%7BY%7D_n%20-%20%5Cmu)%5E2%20=%20%5CE%20(%5Cdfrac%7B%5Csum(Y_i%20-%5Cmu)%7D%7Bn%7D)%5E2%20=%20%5Cdfrac%7B1%7D%7Bn%5E2%7D%20n%20%5Csigma%5E2%20=%20%5Cdfrac%7B%5Csigma%5E2%7D%7Bn%7D%0A"></p>
<p>표준오차 <img src="https://latex.codecogs.com/png.latex?SE">는 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0ASE%20=%20%5Cdfrac%7B%5Csigma%7D%7B%5Csqrt%7Bn%7D%7D%0A"></p>
<p>이를 대입하면 <img src="https://latex.codecogs.com/png.latex?SE">의 추정량 <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BSE%7D">는 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cwidehat%7BSE%7D%20=%20%5Cdfrac%7BS_n%7D%7B%5Csqrt%7Bn%7D%7D%0A"></p>
</section>
<section id="asymptotically-normal" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="asymptotically-normal">Asymptotically Normal</h2>
<p>t-통계량이 정규 분포에 근사하는 이유는 무엇일까?</p>
<p><img src="https://latex.codecogs.com/png.latex?%0At(%5Cmu)%20=%20%5Cfrac%7B%5Coverline%7BY%7D-%5Cmu%7D%7B%5Cwidehat%7BSE%7D(%5Coverline%7BY%7D)%7D%0A"></p>
<p>우선 t-통계량의 분자와 분모를 살펴보면, 각각 <img src="https://latex.codecogs.com/png.latex?n">이 커질 때 분자와 분모는 모두 0으로 수렴한다. 이 비율이 정규분포에 수렴하는 게 되는 이유는 중심극한 정리를 이용해 증명할 수 있다. 일단 결론만 기억하도록 하자. <img src="https://latex.codecogs.com/png.latex?t">는 표본 크기 <img src="https://latex.codecogs.com/png.latex?n">이 증가하면서 표준 정규 분포에 근사하게 된다. 이를 점근적 정규 분포(asymptotically normal)라고 칭한다.</p>
<p>다시 말하면, <img src="https://latex.codecogs.com/png.latex?%5CES%7BY%7D_n">은 평균이 <img src="https://latex.codecogs.com/png.latex?%5Cmu">이고 표준편차가 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Csigma%7D%7B%5Csqrt%7Bn%7D%7D">인 정규 분포에 근사하게 된다. 따라서 표본 크기가 커짐에 따라서 t-통계량은 표준 정규 분포를 점점 닮아간다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/stats-simple/https:/miro.medium.com/max/1400/0*V1zCLq5mboTCfq2_.jpeg" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption"><img src="https://latex.codecogs.com/png.latex?n">이 커질수록 <img src="https://latex.codecogs.com/png.latex?%5CES%7BX%7D_n">의 분포는 표준 정규 분포에 근접한다.</figcaption><p></p>
</figure>
</div>
<p>t-통계량은 대 표본(large sample)의 통계적 검정에 핵심을 이룬다. 원래 자료가 어느 분포에서 나왔는지와 관계없이 표본에 근거한 t-통계량은 정규 분포를 따르게 되고, 이를 통해 가설 검정을 실시할 수 있다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>회귀 분석의 검정 또한 t-통계량에 근거한다. 여기를 참고하도록 하자.</p>
</div></div><p>t-통계량의 크기는 검정을 위한 통계학적 증거일 뿐이다. 이 점을 잊지 말자. t-통계량의 형태에서 보듯이 분자가 충분히 크거나 혹은 분모가 충분히 작을 때 이 값이 커진다. 이는 신뢰 구간에 대해서도 마찬가지다. 신뢰 구간은 표준 오차에 반영되어 있는 통계적 정밀성에 의해 결정되지 우리가 발견하고자 하는 관계의 강도에 의해서 결정되지 않는다. 즉, t-통계량 및 신뢰 구간의 크기를 보고 해당 독립 변수가 종속 변수에 미치는 효과의 강도로 오해하면 곤란하다.</p>
</section>
<section id="more" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="more">More</h2>
<p>이하의 내용은 딱히 필요하지는 않다. 관심이 있는 경우는 살펴보면 좋겠다.</p>
<section id="s2-n-1" class="level3">
<h3 class="anchored" data-anchor-id="s2-n-1"><img src="https://latex.codecogs.com/png.latex?S%5E2">을 <img src="https://latex.codecogs.com/png.latex?(n-1)">로 나누는 이유</h3>
<p><img src="https://latex.codecogs.com/png.latex?S%5E2">의 분모에 왜 <img src="https://latex.codecogs.com/png.latex?(n-1)">이 들어갈까? 불편 추정량을 얻기 위해서다. 불편 추정량이란 해당 통계치의 기댓값이 모수가 되는 추정량을 의미한다. 직접 <img src="https://latex.codecogs.com/png.latex?S%5E2">의 기댓값을 구해보자. 먼저,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csigma%5E2%20=%20%7B%5Crm%20Var%7D(x_i)%20&amp;%20=%20%5Cmathbb%20E%5B(x_i%20-%20%5Cmu)%5E2%5D%20%5C%5C%0A&amp;%20=%20%5Cmathbb%20E%20%5Bx_i%5E2%20-%202%20x_i%20%5Cmu%20+%20%5Cmu%5E2%5D%20%5C%5C%0A&amp;%20=%20%5Cmathbb%20E(x_i%5E2)%20-%202%5Cmu%20E(x_i)%20+%20%5Cmu%5E2%20%5C%5C%0A&amp;%20=%20%20%5Cmathbb%20E(x_i%5E2)%20-%20%5Cmu%5E2%0A%5Cend%7Baligned%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20E(x_i%5E2)%20=%20%5Csigma%5E2%20+%20%5Cmu%5E2"> 임을 기억해두자.</p>
<p>이제 <img src="https://latex.codecogs.com/png.latex?S%5E2">의 기댓값을 구해보자. 분자 먼저 계산하자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cmathbb%20E%5B%5Csum(x_i%20-%20%5Coverline%7Bx%7D)%5E2%5D%20&amp;%20=%20%5Cmathbb%20E%5B%5Csum%20(x_i%5E2%20-%202%20x_i%20%5Coverline%7Bx%7D%20+%20%5Coverline%7Bx%7D%5E2)%5D%20%5C%5C%0A&amp;%20=%20%5Cmathbb%20E%5B%5Csum%20x_i%5E2%20-%20n%202%20%5Coverline%7Bx%7D%20%5Ccdot%20%5Coverline%7Bx%7D%20+%20n%20%5Coverline%7Bx%7D%5E2%5D%20%5C%5C%0A&amp;%20=%20%5Cmathbb%20E%5B%5Csum%20x_i%5E2%20-%20n%20%5Coverline%7Bx%7D%5E2)%5D%20%5C%5C%0A&amp;%20=%20%5Csum%20%5Cmathbb%20E(x_i%5E2)%20-%20n%20%5Cmathbb%20E(%5Coverline%7Bx%7D%5E2)%0A%5Cend%7Baligned%7D%0A"></p>
<p>합해지는 부분의 각각을 따져보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csum%20%5Cmathbb%20E(x_i%5E2)%20=%20n%20(%5Csigma%5E2%20+%20%5Cmu%5E2)%0A%5Cend%7Baligned%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cmathbb%20E(%5Coverline%7Bx%7D%5E2)%20&amp;%20=%20%5Cmathbb%20E%5B(%5Cdfrac%7Bx_1%20+%20x_2%20+%20%5Cdotsb%20+%20x_n%7D%7Bn%7D)%5E2%5D%20%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20E%5B(%5Cdfrac%7Bx_1%20+%20x_2%20+%20%5Cdotsb%20+%20x_n%7D%7Bn%7D)%5E2%5D">의 분자를 계산하면 된다. 먼저 각 <img src="https://latex.codecogs.com/png.latex?x_i">의 제곱이 <img src="https://latex.codecogs.com/png.latex?n">개 나온다. 다음으로 각각 <img src="https://latex.codecogs.com/png.latex?x_i">가 독립적으로 추출되었으므로 <img src="https://latex.codecogs.com/png.latex?i%20%5Cneq%20j">일 때 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20E(x_i%20x_j)%20=%20%5Cmathbb%20E(x_i)%20%5Cmathbb%20E(x_j)%20=%20%5Cmu%5E2">이 된다. <img src="https://latex.codecogs.com/png.latex?n"> 개 중에서 2개를 순서에 관계없이 뽑게 된다. 즉,</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cmathbb%20E%5B(x_1%20+%20x_2%20+%20%5Cdotsb%20+%20x_n)%5E2%5D%20%20&amp;%20=%20n%20(%5Csigma%5E2%20+%20%5Cmu%5E2)%20+%202%20%5Cdfrac%7Bn(n-1)%7D%7B2!%7D%20%5Cmu%5E2%20%5C%5C%0A&amp;%20=%20n%20%5Csigma%5E2%20+%20n%5E2%20%5Cmu%5E2%0A%5Cend%7Baligned%7D%0A"></p>
<p>따라서,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%20E(%5Coverline%7Bx%7D%5E2)%20%20=%20%5Cdfrac%7B%5Csigma%5E2%7D%7Bn%7D%20+%20%5Cmu%5E2%0A"></p>
<p>이제 각각을 넣어 계산을 완료하자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cmathbb%20E%5B%5Csum(x_i%20-%20%5Coverline%7Bx%7D)%5E2%5D%20&amp;%20=%20%5Csum%20%5Cmathbb%20E(x_i%5E2)%20-%20n%20%5Cmathbb%20E(%5Coverline%7Bx%7D%5E2)%20%5C%5C%0A&amp;%20=%20n%20%5Csigma%5E2%20+%20n%20%5Cmu%5E2%20-%20%5Csigma%5E2%20-%20n%20%5Cmu%5E2%20%5C%5C%0A&amp;%20=%20(n-1)%20%5Csigma%5E2%0A%5Cend%7Baligned%7D%0A"></p>
<p>따라서 불편 추정량이 되기 위해서는 <img src="https://latex.codecogs.com/png.latex?S%5E2">의 분모에 <img src="https://latex.codecogs.com/png.latex?(n-1)">이 필요하다.</p>
</section>
<section id="s2-consistent" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="s2-consistent"><img src="https://latex.codecogs.com/png.latex?S%5E2_n">의 일치성</h3>
<p><img src="https://latex.codecogs.com/png.latex?S%5E2">의 일치성을 증명하는 데 필요한 내용을 알아보자. 엄밀한 증명은 생략하고 간략하게 아이디어만 적도록 하겠다. <img src="https://latex.codecogs.com/png.latex?%5Csigma%20%3C%20%5Cinfty">를 가정하자. 이때</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AS_n%5E2%20&amp;%20=%20%5Cdfrac%7B1%7D%7Bn-1%7D%5Csum_%7Bi=1%7D%5En%20(X_i%20-%20%5Coverline%7BX%7D_n)%20%5C%5C%0A&amp;%20=%20%5Cdfrac%7Bn%7D%7Bn-1%7D(%5Cdfrac%7B%5Csum%20X_i%5E2%7D%7Bn%7D%20-%20%5Coverline%20X_n)%20%5C%5C%0A&amp;%20%5Cstackrel%7BP%7D%7B%5Clongrightarrow%7D%201%5Ccdot(%5CE(X%5E2)-%5Cmu%5E2)%20=%20%5Csigma%5E2%0A%5Cend%7Baligned%7D%0A"></p>
<p>위에서 보듯이 <img src="https://latex.codecogs.com/png.latex?S%5E2_n">이든 <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7B1%7D%7Bn%7D%5Csum_%7Bi=1%7D%5En%20(X_i%20-%20%5Coverline%7BX%7D_n)">이든 둘 다 일치 추정량이라는 것을 쉽게 알 수 있다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>자세한 내용은 <a href="http://www.utstat.toronto.edu/~brunner/oldclass/413f08/handouts/STA413Ch4.pdf">여기</a> 책의 해당 부분을 참고하라.</p>
</div></div></section>
<section id="regression-t-statistic" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="regression-t-statistic">회귀 분석의 t-통계량</h3>
<p>회귀 분석의 계수의 표본 추정량 <img src="https://latex.codecogs.com/png.latex?%5Chat%20%5Cbeta">는 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Chat%20%5Cbeta%20=%20(X%5ET%20X)%5E%7B-1%7D(X%20y)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0At_i%20=%20%5Cdfrac%7B%5Chat%20%5Cbeta_i%20-%20%5Cbeta%7D%7BS%20%5Csqrt%7B(X%5ET%20X)_%7Bii%7D%5E%7B-1%7D%7D%7D%0A"></p>
<p>with</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AS(y_i)%5E2%20=%20%5Cdfrac%7B1%7D%7Bn-k%7D%20%5Csum_%7Bi=1%7D%5En%20(y_i%20-%20%20x%5Er_i%20%5Chat%5Cbeta)%0A"></p>

<div class="no-row-height column-margin column-container"><div class="">
<p>여기서 <img src="https://latex.codecogs.com/png.latex?%5Cbeta_k">는 중회귀 분석의 <img src="https://latex.codecogs.com/png.latex?k">–번째 계수를 뜻한다.</p>
</div></div><ul>
<li><img src="https://latex.codecogs.com/png.latex?x%5Er_i">: <img src="https://latex.codecogs.com/png.latex?X">의 <img src="https://latex.codecogs.com/png.latex?i">’th 행(row) 벡터</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cunderset%7B(1%20%5Ctimes%20k)%7D%7Bx%5Er_i%7D%5Cunderset%7B(k%20%5Ctimes%201)%7D%7B%5Cvphantom%7Bx%5Er_i%7D%5Chat%5Cbeta%7D%20=%20%5Chat%20y_i"></li>
</ul>
<p>회귀 분석의 <img src="https://latex.codecogs.com/png.latex?i">–번째 계수인 <img src="https://latex.codecogs.com/png.latex?%5Cbeta_i">는 <img src="https://latex.codecogs.com/png.latex?t_i">를 통해 검정할 수 있다. <img src="https://latex.codecogs.com/png.latex?n">이 충분히 클 경우 <img src="https://latex.codecogs.com/png.latex?t_i%20%5Csim%20%5Crm%20N(0,1)">이 된다.</p>
</section>
<section id="clt-and-lln-illustrated" class="level3">
<h3 class="anchored" data-anchor-id="clt-and-lln-illustrated">CLT and LLN illustrated</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/stats-simple/https:/i0.wp.com/lorentzen.ch/wp-content/uploads/2021/01/image-2.png" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">CLT; 0, 1을 각각 0.8, 0.2의 확률로 갖는 베르누이 분포가 있을 때, 확률 변수의 샘플 크기가 커짐에 따라 표본 평균은 정규 분포를 닮아간다.</figcaption><p></p>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/stats-simple/https:/i0.wp.com/lorentzen.ch/wp-content/uploads/2021/01/image-3.png" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">LLN; <img src="https://latex.codecogs.com/png.latex?n">이 커짐에 따라서 평균값으로 모이는 현상이 발생한다. 위 그래프와 달리 <img src="https://latex.codecogs.com/png.latex?x"> 축의 범위를 0, 1 사이로 고정했다.</figcaption><p></p>
</figure>
</div>


</section>
</section>

 ]]></description>
  <category>statistics</category>
  <category>stats-simple</category>
  <guid>https://www.lostineconomics.com/posts/stats-simple/2022-05-27-SE.html</guid>
  <pubDate>Thu, 26 May 2022 15:00:00 GMT</pubDate>
  <media:content url="https://upload.wikimedia.org/wikipedia/commons/b/b2/Consistency_of_estimator.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>전체와 부분</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/regression/2022-05-26-total-and-parts.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>회귀 분석에서 ’통제’한다는 것의 의미를 전체와 부분이라는 시야에서 다시 음미해 보자.</li>
<li>교란 요인(confounder)와 충돌 요인(collider)을 심슨의 역설과 벅슨의 역설로 연결해 생각해 보자.</li>
</ul>
</section>
<section id="회귀-분석에서-통제한다는-것" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="회귀-분석에서-통제한다는-것">회귀 분석에서 ’통제’한다는 것</h2>
<p>회귀 분석에서 독립 변수 혹은 설명 변수와 통제 변수의 차이는 개념적인 것이다. 즉, 내가 갖고 있는 분석의 초점 혹은 모델의 취지에 따라 결정되는 것이지 어떤 기계적인 방법이나 기준은 없다. 일단 ’통제’에 초점을 맞춰서 생각해 보자. 아래와 같은 간략한 회귀 모형을 생각해 보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_i%20=%20%5Calpha%20+%20%5Cbeta%20x_i%20+%20%5Cgamma%20D_i%20+%20%5Cepsilon_i%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?x_i">는 설명 변수, <img src="https://latex.codecogs.com/png.latex?D_i">는 통제 변수라고 하자. 이해를 돕기 위해서 <img src="https://latex.codecogs.com/png.latex?D_i">는 0, 1의 값을 갖는 더미 변수다. <img src="https://latex.codecogs.com/png.latex?D_i">를 통제한다는 것의 의미는 무엇일까? <img src="https://latex.codecogs.com/png.latex?x_i">가 <img src="https://latex.codecogs.com/png.latex?y_i">에 미치는 영향을 그냥 전체로 보지 않고 두 집단 별로 나눠서 보겠다는 것이다. 이때 최소자승법을 통해 계산되는 <img src="https://latex.codecogs.com/png.latex?%5Cbeta">는 <img src="https://latex.codecogs.com/png.latex?D_i">로 구별되는 집단 각각의 효과를 구한 뒤 이를 적절하게 가중 평균한 값이 된다. ’통제’란 설명 변수의 효과를 보다 정교하게 보기 위해서 관찰을 통제 변수로 구성된 집단으로 나누는 것이라고 생각하면 쉽다. 카테고리로 구별된 집단뿐 아니라 연속 함수에 관해서도 비슷하게 이해하면 된다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>Angrist와 Pischke가 이런 맥락에서 회귀 분석이 자동화된 짝짓기(matching) 기계라고 설명한 바 있다.</p>
</div></div></section>
<section id="confounder-and-simpsons-paradox" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="confounder-and-simpsons-paradox">Confounder and Simpson’s Paradox</h2>
<p>먼저 심슨의 역설을 먼저 살펴보자. 아래는 웃자고 만든 그림인데 웃고 넘기기에는 아까운 중요한 통찰이 들어 있다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/regression/https:/149695847.v2.pressablecdn.com/wp-content/uploads/2018/12/simpsons-paradox.jpg" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">전체를 볼 것인가 부분을 볼 것인가?</figcaption><p></p>
</figure>
</div>
<p>위 그림에서 심슨가족 전체를 보면 <img src="https://latex.codecogs.com/png.latex?x"> 축 변인의 증가에 따라서 <img src="https://latex.codecogs.com/png.latex?y"> 축 변인이 증가하는 형태를 취한다. 반면, 가족 구성원 하나하나에 대해서는 반대의 관계를 취하고 있다. 심슨의 역설은 전체의 경향과 부분의 경향이 어긋나는 현상을 나타낸다. 조금 더 진지한 사례는 아래의 그림과 같다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/regression/https:/upload.wikimedia.org/wikipedia/commons/f/fb/Simpsons_paradox_-_animation.gif?1653868287578" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">심슨의 역설</figcaption><p></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>심슨의 역설에 흥미로운 사례는 미국 대학 입학의 남녀 학생 비율이다. 전체로 보면 남학생의 입학 비율이 여학생의 입학 비율보다 높았다. 그런데 개별 학과를 보면 여학생의 입학 비율이 대체로 남학생의 입학 비율보다 높았다. 서로 상반되는 듯 보이는 이 결과는 관심의 대상이 비율인데 반해서 학과 단위에서 작용하는 지원자들의 행태를 반영하지 못한 데 따른 것이다. 사례로는 <a href="https://namu.wiki/w/%EC%8B%AC%EC%8A%A8%EC%9D%98%20%EC%97%AD%EC%84%A4">여기</a>와 <a href="https://medium.com/bondata/simpsons-paradox-and-confounding-190a26f9e039">여기</a>를 참고하자.</p>
</div></div><p>여기서 중요한 것은 역설 자체가 아니다. 역설의 함정에 빠지지 않고 어디에 포커스를 둘 것인지가 문제다. 만일 인구 구성의 각 그룹 별 경향을 평균적으로 살펴보는 것이 관심 사항이라면 위 그림에서 그룹 각각의 기울기를 평균한 값이 우리가 찾는 경향이다. 반대로 개별 그룹은 중요하지 않고 인구 전체가 관심사라면 개별 인구를 동일하게 보고 기울기를 찾는 게 맞다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/regression/https:/slidetodoc.com/presentation_image_h/792ab2d7ce21c60c396545ec752d13fe/image-44.jpg" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">DAG로 본 confounder &amp; collider</figcaption><p></p>
</figure>
</div>
<p>심슨의 역설은 DAG(Directed Acyclic Graph)를 통한 인과 추론에서 교란 요인(confounder)에 해당한다. A –&gt; Z가 현재 우리가 관찰하는 사실이다. 예를 들어, 교육 수준이 높을수록 졸업 후 취업 시 임금이 높다. 하지만 이는 교육 수준과 임금 모두에게 영향을 미치는 제3의 요인을 고려하지 않는 것일지도 모른다. 교육 수준과 임금 모두에게 영향을 주는 미처 파악하지 못한 변인, 예를 들어 능력치(C)가 있다고 하자. 이 능력치는 교육 수준과 임금 모두에게 영향을 준다.</p>
<p>이 능력치를 그룹화해서 비교하는 게 가능하다고 가정하자. 이는 위의 심슨 가족 그림에서 가족별로 각 그룹을 나누는 것에 해당한다. 이렇게 능력치를 고려하면 교육은 오히려 졸업 후 임금을 낮출 수도 있다. C(능력치)라는 변수를 명백하게 고려하면 A(교육 수준)가 Z(임금)에 미치는 영향의 크기가 변할 수 있다. 예컨대, C를 고려하지 않았을 때 존재하던 A–&gt;Z의 효과가 사라지거나 기대했던 것과 반대의 효과를 지닐 수도 있다.</p>
<section id="그래도-심슨의-역설이-잘-이해가-되지-않는다면" class="level3">
<h3 class="anchored" data-anchor-id="그래도-심슨의-역설이-잘-이해가-되지-않는다면">그래도 심슨의 역설이 잘 이해가 되지 않는다면…</h3>
<p>벡터를 통해 그래프로 설명하는 사례가 직관적으로 잘 와닿고 이해하기도 좋다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/regression/https:/upload.wikimedia.org/wikipedia/commons/thumb/9/9d/Simpsons-vector.svg/430px-Simpsons-vector.svg.png?20180610180117" class="my-figure5 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">붉은 벡터 1,2가 파란 벡터 1,2 보다 각각 더 높은 비율(벡터의 각도)를 지니고 있다. 그럼에도 둘을 결합했을 경우 파란 벡터가 더 높은 비율을 지니게 된다.</figcaption><p></p>
</figure>
</div>
</section>
</section>
<section id="collider-and-berksons-paradox" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="collider-and-berksons-paradox">Collider and Berkson’s Paradox</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/regression/https:/brilliant-staff-media.s3-us-west-2.amazonaws.com/tiffany-wang/1Mvt8RPtlU.png" class="my-figure5 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">전체를 볼 것인가 부분을 볼 것인가?</figcaption><p></p>
</figure>
</div>
<p>이번에는 벅슨의 역설을 살펴볼 차례다. 보통 수능 점수와 대학 성적은 별 관련이 없고 심지어 역의 상관성이 있다는 이야기를 접할 때가 있다. 이것은 맞는 주장인가? 이런 종류의 주장은 대체로 전체를 가정한다. ‘수능 점수와 대학 성적이 별로 상관이 없으니, 수능은 인간의 능력을 판단하는 지표로 별로 유용하지 않아.’ 이야기가 이렇게 흐르기 마련이다.</p>
<p>위의 그림에서 보듯이 이러한 경향은 보편적인 주장이 아니라 특정한 집단 내에서만 타당한 주장이다. 위 그림에서는 내가 관찰하는 집단에 대해서 일종의 자기 선택이 일어난 경우에 해당한다. 내가 속한 밴드의 집단보다 수능 점수와 대학 성적이 모두 낮은 집단은 내가 속한 관찰 집단과는 다른 집단에 속한다. 반면 내가 속한 밴드보다 수능 점수도 높고 대학 성적도 우월한 집단도 마찬가지다.</p>
<p>벅슨의 역설은 심슨의 역설과 동일하지만 반대의 측면을 지적한다. 전체 대해서 존재하는 경향성이 그룹으로 쪼개서 보면 반대가 되거나 사라지는 경우를 의미한다.</p>
<p>벅슨의 역설에 해당하는 인과 추론의 DAG 사례가 충돌 요인(collider)이다. 변수를 고려하지 않았다면 전체에 관해서 온전한 주장이 성립했을 것이지만, 해당 변수를 고려해 그룹을 나누게 되면 오히려 잘못된 관계를 추정하게 된다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>벅슨의 역설은 통제하지 않아야 할 변수를 통제할 때 발생하기도 하지만 많은 경우 표본 자체를 살피지 않은 데에서 생기기도 한다. 예를 들어 아래 그림을 보자.</p>
<p><img src="https://www.lostineconomics.com/posts/regression/https:/mixtape.scunning.com/03-Directed_Acyclical_Graphs_files/figure-html/moviestar-dag-1.png" class="img-fluid"></p>
<p>보통 배우가 되려면 연기 재능과 외모 둘 중 하나는 갖추어야 한다고들 한다. 이 말 자체는 맞지만 이를 확대 해석해서 외모와 연기 재능이 역의 상관성이 있다고 주장하는 경우가 있다. 이는 모집단 전체(모든 사람)에 대해서 타당한 말일까? 배우라는 집단으로 제한해보면 외모와 재능이 모두 미달되는 사람들은 배우가 아닌 다른 직업을 찾았을 가능성이 높다. 외모와 재능을 사분면으로 나눌 때 3 사분면에 위치한 사람들이 사라진 배우라는 집단에 대해서는 음의 상관성이 관찰되는 것처럼 보인다.</p>
</div></div></section>
<section id="중요한-것은-질문과-문제-설정" class="level2">
<h2 class="anchored" data-anchor-id="중요한-것은-질문과-문제-설정">중요한 것은 질문과 문제 설정</h2>
<p>이렇게 보면 심슨의 역설이든 벅슨의 역설이든 어떤 절대적인 규칙을 알려주는 것이 아니다. 관심을 두는 실증의 효과가 어떻게 작용하는 효과인가라는 질문이 먼저이다. 연구가 전체에 관한 특성을 묻는 질문이라면 충돌 요인(collider)이 변수에 없는지 살펴봐야 한다. 반면 집단을 나누는 것이 효과를 살펴보는 데 중요하다면 교란 요인(confounder)에 주의해야 한다. 충돌 요인이든 교란 요인이든 둘 다 실증 연구를 오도할 수 있지만 방해하는 수준이 다르다.</p>
<p>이제 회귀 분석에서 통제한다는 것의 의미를 다시 정리해 보자. 회귀 분석의 모델링의 관점에서 보면 통제 변수와 설명 변수 간에 차이가 없다. 연구자의 의도에 비춰 볼 때 통제 변수는 설명 변수에 의도하지 않은 영향이 포함되는 것을 막아 준다. 앞서 말했듯이 회귀 분석은 통제 변수에 따라서 관찰을 여러 그룹으로 나누고 이에 따라서 설명 변수의 효과를 자동으로 계산하는 기계이다. 무엇인가를 통제하지 못했다는 것은 이 설명 변수에 그 효과까지 함께 포함되는 것을 의미한다. 이런 상황에서 발생할 수 있는 사례 중 하나가 심슨의 역설이다. 반면, 넣지 말아야 할 변수를 넣는다는 것은 설명 변수의 효과를 과장하는 결과를 낳는다. 그리고 특정한 인구 집단 혹은 경우에 발생한 일을 일반화해 주장하게 되는 것은 벅슨의 역설이다.</p>
<p>이렇게 보면 심슨의 역설과 벅슨의 역설은 회귀 분석에서 모델링의 중요성 혹은 적절한 중도를 지키는 것이 얼마나 어려운지를 잘 보여준다. 회귀 분석의 길은 앵그리스트와 피스케 선생이 말했듯이 진정 “도”의 길이었던 것이다!</p>


</section>

 ]]></description>
  <category>regression</category>
  <guid>https://www.lostineconomics.com/posts/regression/2022-05-26-total-and-parts.html</guid>
  <pubDate>Wed, 25 May 2022 15:00:00 GMT</pubDate>
  <media:content url="https://149695847.v2.pressablecdn.com/wp-content/uploads/2018/12/simpsons-paradox.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>PyTorch + WSL</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-05-25-pytorch.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>파이토치를 Windows + WSL2 조합으로 설치하는 법을 간단하게 안내한다.</li>
</ul>
</section>
<section id="pytorch" class="level2">
<h2 class="anchored" data-anchor-id="pytorch">PyTorch</h2>
<p>파이토치는 기계 학습을 위한 라이브러리이다. 대체로 구글에서 만드는 제품을 선호하다보니 텐서플로를 주로 썼다. 최근 들어 텐서플로를 쓰기 싫어진 이유가 작업 환경이 복잡하고 다양해진 탓이다. 회사에서 윈도 기반 컴퓨터를, 집에서 M1 맥북을 쓰다보니 좀 통일된 작업 환경이 있었으면 싶었다. 텐서플로의 경우 M1에서 쓸 때 많은 제약을 받는다. M1 GPU를 이용하기 위해서 메탈 관련 설치를 하는 것이야 하드웨어의 특성상 그렇다고 쳐도 2.X 버전을 쓰지 못하는 것이나 파이썬 버전의 제약 등이 이유 없이 찜찜하더라. 이용 환경이 파편화된 느낌을 받았다.</p>
<p>이때 개발자 커뮤니티에서 파이토치가 좋은 평가를 받는다는 사실을 알게 되었다. 내 수준에서 기계 학습 프레임워크 간의 차이는 크게 문제가 되지 않는다. 텐서가 인풋으로 들어가는 것은 마찬가지이고 모델링 역시 크게 다를 것이 없겠다 싶어서 설치해서 써보기로 했다.</p>
</section>
<section id="일관된-설치-방법" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="일관된-설치-방법">일관된 설치 방법</h2>
<p><a href="https://pytorch.kr/get-started/locally/">https://pytorch.kr/get-started/locally/</a></p>
<p>위 링크를 통해 설치 방법이 일관되게 안내된다. 플랫폼과 상황 별로 잘 나뉘어 있으니 원하는 대로 설정을 하면 된다. 윈도 이용자라면 윈도 네이티브보다는 WSL에 설치하는 것을 권장한다. 관리나 정신 건강 상의 이유도 있겠지만, 퍼포먼스가 체감상 조금 나은 듯 싶다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>Conda 환경을 쓴다면 윈도라고 크게 다를 것은 없을 듯 싶다.</p>
</div></div></section>
<section id="pytorch-m1-gpu" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="pytorch-m1-gpu">PyTorch + M1 GPU</h2>
<p>Macos + M1의 경우라도 설치 페이지를 통해 쉽고 일관된 방식으로 설치할 수 있다. 만일 GPU를 쓰고 싶다면 <code>PyTorch 빌드</code> 항목에서 “Preview(Nightly)”를 택하면 된다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>자세한 것은 <a href="https://discuss.pytorch.kr/t/apple-m1-gpu/286#preview-3">여기</a>를 참고하자.</p>
</div></div><p>파이토치의 경우 별다른 설정 없이 conda를 통해 설치하면, M1의 GPU를 활용이 가능하다.</p>
</section>
<section id="pytorch-wsl-cuda" class="level2">
<h2 class="anchored" data-anchor-id="pytorch-wsl-cuda">PyTorch + WSL + CUDA</h2>
<p>WSL 2가 이제 표준이 되었으니 이를 그냥 WSL로 부르도록 하자. 위 링크의 선택지에서 OS 종류를 Linux, Windows 어느 것으로 해도 설치 방식이 동일하다. 패키지 설치를 conda가 맡고 있기 때문이다. 엔비디아의 GPU를 활용하는 CUDA 버전 역시 11.3으로 선택하면 별 문제 없이 설치에 필요한 conda 명령어 셋을 보여준다.</p>
<section id="conda-환경-생성" class="level3">
<h3 class="anchored" data-anchor-id="conda-환경-생성">Conda 환경 생성</h3>
<p>콘다에서 환경(env)을 만들어 그 안에 쓰면 여러모로 편리하다. 혹시 문제가 생겼을 때 생성된 환경만 날려버리면 된다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">?</span> conda create <span class="at" style="color: #657422;">-n</span> YOUR-ENV-NAME python=3.10</span>
<span id="cb1-2"><span class="ex" style="color: null;">?</span> conda env list </span>
<span id="cb1-3"><span class="ex" style="color: null;">?</span> conda activate YOUR-ENV-NAME</span></code></pre></div>
<ul>
<li><code>conda create -n</code>은 <code>YOUR-ENV-NAME</code>으로 환경을 만들라는 명령이고, <code>python=3.10</code>은 파이썬 3.10을 설치하라는 명령이다.</li>
<li><code>conda env list</code>는 현재 설치된 환경을 보여준다.</li>
<li><code>conda activate YOUR-ENV-NAME</code>는 해당 환경을 선택한다.</li>
</ul>
<p>이렇게 해놓고 파이토치를 설치하면 된다.</p>
</section>
<section id="cuda-설정" class="level3">
<h3 class="anchored" data-anchor-id="cuda-설정">CUDA 설정</h3>
<p>WSL 초기에는 CUDA 설정이 무척 까다로웠다. 최신 버전에서는 그런 문제가 없다. 엔비디아의 CUDA를 지원하는 GPU라면 최신 드라이버를 깔고 최신 버전의 WSL을 이용하면 된다. 모든 작업이 화면 뒤에서 잘 이루어진다. 편해도 너무 편하다.</p>
</section>
</section>
<section id="testing-code" class="level2">
<h2 class="anchored" data-anchor-id="testing-code">Testing Code</h2>
<p>모든 설치를 마쳤다면 이제 테스트를 돌려볼 차례다. 테스트 코드로 간단한 신경망 정도를 돌려보면 될 것이다. 작업시 취향에 맞는 IDE를 택하면 된다. Jupyter를 깔아서 웹에서 작업해도 되고 VS 코드로 WSL에 원격 접속해서 작업해도 된다. 이 경우에도 Jupyter 설치는 필요하다. 필요한 요소를 VS 코드가 알려주니, 화면에 지시를 따르면 되겠다.</p>
<p>Python 커널을 선택할 때 앞서 만들어 놓은 환경에 속한 파이썬을 택해야 한다. 엉뚱한 커널과 연결되어 있으면 당연히 돌아가지 않을 수 있다.</p>
<section id="a-code-to-test" class="level3">
<h3 class="anchored" data-anchor-id="a-code-to-test">A code to test</h3>
<p><a href="https://tutorials.pytorch.kr/beginner/basics/quickstart_tutorial.html">튜토리얼</a></p>
<p>튜토리얼의 코드를 실행하면서 에러가 떴다면, 설치 과정에서 뭔가 잘못된 것이다. 특별히 복잡한 것은 없으니 다시 잘 살펴보면 된다. 다른 부분은 생략하고 학습에 활용할 장치를 선택하는 부분만 간략하게 언급하겠다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># 학습에 사용할 CPU나 GPU 장치를 얻습니다.</span></span>
<span id="cb2-2">device <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"cuda"</span> <span class="cf" style="color: #003B4F;">if</span> torch.cuda.is_available() <span class="cf" style="color: #003B4F;">else</span> <span class="st" style="color: #20794D;">"cpu"</span></span>
<span id="cb2-3"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Using </span><span class="sc" style="color: #5E5E5E;">{</span>device<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> device"</span>)</span></code></pre></div>
<ul>
<li><code>device</code>를 선택하는 부분은
<ul>
<li>“cpu”: 플랫폼 별 CPU 활용</li>
<li>“cuda”: 엔비디아 GPU</li>
<li>“mps”: M1 GPU</li>
</ul></li>
</ul>
</section>
</section>
<section id="as-good-as-it-gets" class="level2">
<h2 class="anchored" data-anchor-id="as-good-as-it-gets">As Good as It Gets</h2>
<p>모든 과정이 너무 순탄해서 감동이었다. 이제 다른 기계 학습 프레임워크는 못 쓸 것 같…</p>


</section>

 ]]></description>
  <category>computer-tool</category>
  <category>machine-learning</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-05-25-pytorch.html</guid>
  <pubDate>Tue, 24 May 2022 15:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/max/649/1*6sV-YTdpob36egPM-yXGXA.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Trilemma, Lately</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/economics/2022-05-16-trilemma.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>모두가 트릴레마를 넘어서고 싶어 하지만, 그럴 수는 없다. 거시 경제든 코인이든.</li>
</ul>
</section>
<section id="거시-경제의-트릴레마" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="거시-경제의-트릴레마">거시 경제의 트릴레마</h2>
<p>트릴레마(trilemma)는 두 개의 모순된 선택을 지니는 딜레마의 확장 버전이다. 세 개의 선택지 중에서 두 개는 조합이 가능하지만 그로 인해서 하나의 가치를 포기해야만 하는 상황을 의미한다.</p>
<p>트릴레마 중에서 가장 많이 알려진 것은 거시 경제의 트릴레마다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/economics/https:/www.economist.com/img/b/640/580/90/sites/default/files/images/print-edition/20160827_EBC992.png" class="my-figure5 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">거시경제의 트릴레마</figcaption><p></p>
</figure>
</div>
<p><br> 위 그림에서 보듯이 ‘자본 이동 capital mobility’, ‘고정 환율제 fixed exchange rate’, ’통화 정책의 자율성 monetary autonomy’이 트릴레마를 이룬다. 세 가지 모두 일국의 거시 경제에 도움이 된다. 그림에 예시가 되어 있으니 이해에 도움이 될 것이다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><a href="https://voxeu.org/article/trilemmas-capital-flows-and-domestic-and-international-order">Trilemmas in capital flows, and domestic and international order | VOX, CEPR Policy Portal (voxeu.org)</a> 글에는 거시 경제의 트릴레마 이외에 관련 트렐레마가 몇 가지 더 소개되어 있다.</p>
</div></div><p>시대적 조건에 따라서는 트릴레마의 강도가 미묘하게 변화하기도 한다. 예를 들어 보자. 오늘날 금융 자본주의에서는 자본 이동이 가하는 압박이 상당하다. 이런 환경에서 고정환율제를 택하건 변동환율제를 택하건 간에 자본 이동이 일국의 독자적인 거시경제 정책을 제약하는 경우가 많다.</p>
<p>브레튼우즈 체제는 자본이동을 제약한 대신 고정환율제와 독자적인 거시경제 정책을 택한 조합이다. 현대 중국의 경우 약간의 독자적인 금융정책을 가장 우선에 두면서 약간의 고정환율제의 요소를 지니고 있다. 대신 자본이동에 관한 통제는 철저하다.</p>
<p>트릴레마를 구성할 때 중요한 것은 무엇일까? 딜레마를 이루는 요소를 잘 선정해야 한다. 트릴레마를 이룰 수 없는 녀석들을 트릴레마라고 주장한다면 반지성적으로 보일 뿐이다. 트렐레마는 그것이 현실 혹은 역사를 잘 설명할 때 유용성을 지닌다. 위에서 보듯이, 개별 국가의 거시경제 정책 없이 금본위제 기반의 빠른 금융의 세계화가 19세기 중후반은 삼각형의 왼쪽에 해당한다. 2차 대전 이후 브레튼우즈 체제는 고정환율제, 개별 국가의 독자적인 거시경제 운용의 정책의 프레임이었고 대신 국제간 자본이동은 상당 수준으로 제한되었다.</p>
<p>위 삼각형에는 없지만 트릴레마의 사례를 극적으로 보여주는 것이 1990년 영국의 중앙은행인 영란은행과 조지 소로스 간의 환율 전쟁이다. 파운드-마르크의 밴드 내 고정환율제를 구축했던 영국에서 외환 보유고가 충분하지 않음을 감지한 헤지 펀드는 영국의 외환 선물 시장에서 파운드를 던지고 외화를 퍼내기 시작했다. 이는 파운드가 압력을 이기지 못하고 평가 절하를 할 수밖에 없으며, 이 경우 파운드 선물을 판매한(숏 포지션) 헤지 펀드는 큰 돈을 벌게 될 것이기 때문이다. 실제로 발생한 일은 이와 얼추 비슷하다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>일국의 법정 통화를 향한 이런 공격이 항상 성공하는 것은 아니다. 조지 소로스의 퀀텀 펀드를 비롯해 몇 개의 헤지 펀드가 달러에 고정된 홍콩 달러에 대해서 치밀한 분석을 거쳐 비슷한 공격을 가했지만, 중국 정부의 자본시장 통제와 이자율 인상 등의 조치로 인해 성공을 거두지 못했다.</p>
</div></div></section>
<section id="스테이블-코인의-트릴레마" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="스테이블-코인의-트릴레마">스테이블 코인의 트릴레마</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.lostineconomics.com/posts/economics/https:/voxeu.org/sites/default/files/image/FromMay2014/ganesh13mayfig1.png" class="my-figure7 img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">스테이블 코인의 트릴레마</figcaption><p></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p><a href="https://voxeu.org/article/algorithmic-stablecoins-and-devaluation-risk">Algorithmic stablecoins and devaluation risk | VOX, CEPR Policy Portal (voxeu.org)</a> 글에는 루나와 테라USD의 원리 및 최근의 상황이 잘 요약되어 있다.</p>
</div></div><p><br> 스테이블 코인의 트렐리마가 흥미로운 이유는 무엇일까? 최근의 여러가지 사태도 있지만, 전체적인 도식이 위 거시경제의 트릴레마와 많이 닮았다. 스테이블 코인이란 일종의 고정환율제다. 위 ’영란 은행 대 소로스’의 일화에서 보았듯이 스테이블 코인의 가치가 유지되기 힘들다는 의구심이 발생하는 순간 해당 코인은 유사한 투기적인 공격에 노출될 수 있다.</p>
<p>스테이블 코인 테라 USD의 경우 테더(Tether)처럼 현실 법화(legal tender)에 묶인 게 아니라 비트코인에 묶여 있었다. 비트코인 자체의 가격 변화가 심하다면 안정적(stable)이라는 수식어가 무색한 상황이 얼마든지 생길 수 있다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>그렇다면 USD에 혹은 다른 법화에 묶는 스테이블 코인은 괜찮을까? 현실의 법화는 국가 혹은 지역 공동체의 법에 의해 지불, 보증, 부채 이행을 보장받는 화폐다. 그리고 이 화폐는 국가 혹은 여타 법적 존재가 최종 대부자로 자리매김하고 있다. 이 화폐에 기반한 상업 활동 및 금융 활동과는 별개로 이에 기반한 화폐 체계는 최종 대부자라는 법화의 공공재에 무임승차 하는 것과 비슷하다. 탈중앙화를 핵심 가치로 중앙은행의 타락을 거부한 암호 화폐가 돌고 돌아서 결국 중앙은행에 의존하게 되는 것 역시 아이러니하다.</p>
</div></div><p>스테이블 코인의 트릴레마를 해결하는 방법은 무엇일까? 트릴레마를 응용한다면 탈중앙화-자본 효율을 추구하는 알고리즘 기반의 이점을 포기하는 방향이 있다. 충분한 수준의 법화 보유고 확보하거나(삼각형의 오른쪽) 혹은 스마트 컨트랙트를 통해서 특정한 조건에서 충분한 수준의 보유고를 확보하거나(삼각형의 왼쪽) 해야 한다.</p>
<p>다만 스마트 컨트랙트를 통해서 고정 교환비라는 제약 아래 투기적 공격을 막아내기에 충분한 담보 비율을 사전적으로 알 수 있는지는 분명하지 않다. 이 상황이 불비 정보(incomplete information)의 상황이라면 현재 지니고 있는 정보를 통해 미래의 모든 상황을 충분히 파악하기 힘들다. 이때 미래의 사태를 대응하기 위한 장치를 스마트 컨트랙트에 미리 넣을 수 있을까?</p>
<p>특정한 시점에 레짐 체인지를 통해서 일시적으로 중앙화의 해법을 택한다는 식의 메타 룰을 스마트 컨트랙트에 넣을 수 있는 것인지 잘 모르겠다. 만일 그렇다고 해도 해당 상황에서 누가 통제를 할지 이 통제를 위한 정당성은 어떻게 준비할 수 있는지 등등은 나에게는 여전히 의문이다.</p>


</section>

 ]]></description>
  <category>economics</category>
  <guid>https://www.lostineconomics.com/posts/economics/2022-05-16-trilemma.html</guid>
  <pubDate>Sun, 15 May 2022 15:00:00 GMT</pubDate>
  <media:content url="https://www.lostineconomics.com/posts/economics/goodecon.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Blogging with Quarto</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-05-14-blogging-with-quarto.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>독립 블로깅 툴을 고민하고 있는 당신, Quarto로 오라.</li>
</ul>
</section>
<section id="why" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="why">Why</h2>
<p>블로깅 툴은 관리가 편한 게 제일 좋다. 다만 상용 툴에는 내 취향에 어긋나는 몇 가지 제약이 있다.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX"> 수식의 생성이 쉽지 않다.</li>
<li>생각보다 깔끔한 툴이 별로 없다.</li>
<li>왠지 모를 종속된 느낌적 느낌</li>
</ul>
<p>별도의 서버를 호스팅해서 워드프레스 같은 툴을 깔아서 쓸 용기는 부족하니 적당한 선에서 타협이 필요하다. 이 요구를 딱 맞는 것이 github(깃헙)의 스태틱 웹 서비스 Github Pages다. 스테틱 웹이란 html 페이지를 호출한 브라우저에 html을 띄워주는 단순한 서비스를 의미한다. 내가 작성한 포스팅을 html로 생성하는 일관된 방법만 있다면 스태틱이라는 사실 자체가 문제는 아니다. 페이지를 생성하는 약간의 귀찮음이 더해지는 정도라고 보면 될 것이다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>깃헙 페이지스는 스태틱 페이지를 생성하고 관리하는 프레임워크 Jekyll을 품고 있다. 일정한 구조에 맞춰서 콘텐츠를 떨구면 알아서 블로그를 생성한다. 경우에 따라서는 생각보다 편리한 기능이다.</p>
</div></div></section>
<section id="tools" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="tools">Tools</h2>
<section id="history-of-lostineconomics.com" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="history-of-lostineconomics.com">History of lostineconomics.com</h3>
<p>스태틱 웹을 이용할 수 있게 해주는 도구는 대체로 다른 도구에 종속되어 있었다. 이 블로그의 최초 버전은 RStudio에서 제공하는 Blogdown이라는 도구를 활용했다. 작동하는 방식은 여느 스태틱 웹을 생성하는 툴과 비슷하다. 사용하기에 부족함이 없지만, RStudio에 종속되어 있다는 것이 내내 마음에 들지 않았다.</p>
<p>두번째 버전에서는 ’꼼수’를 써 봤다. 깃헙의 각 리포지토리(리포) 별로 html 호스팅이 가능하다는 점에 착안했다. 포스팅 별로 각각 리포를 두고 html을 생성한다. 이 html의 링크를 모아 블로그의 홈을 만들었다. 개별 포스팅을 용도에 맞게 특화할 수 있다는 장점이 있었지만, 별도의 깃헙 리포로 된 구조 때문에 포스팅이 늘어가면서 관리가 번거로워졌다.</p>
<p>세번째 버전은 fastpages를 활용했다. fastpages는 깃헙 액션스의 빌드 기능을 활용한다. 사용자는 <code>.md</code>로 콘텐츠를 전달하고 나머지 빌드는 모두 깃헙 위에서 이루어진다. 별도의 로컬 프로세스가 없다는 점에서 편리한 접근이다. 하지만 디자인의 요소가 많이 아쉽고, 시간이 흐를 수록 프로젝트의 지원이 부족해지는 점이 불안했다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>fastpages 활용은 <a href="https://anarinsk.github.io/lostineconomics_quarto/posts/computer-tool/2020-03-07-blogging-with-fastpages.html">여기</a>를 참고하자.</p>
</div></div></section>
<section id="quarto" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="quarto"><a href="https://quarto.org/">Quarto</a></h3>
<p>이 프로젝트의 홈에 따르면 Quarto는 ’과학 문서(scientific document)’의 작성을 위해 고안된 의존성을 최소화한 도구다. 앞서 소개한 BlogDown과 같은 툴이 RStudio와 같은 특정 도구에 의존한다면 이 녀석은 Jupyter, VS Code, RStudio 및 여느 범용 에디터와도 함께 쓸 수 있다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>Quarto는 사절지를 의미한다. 책을 조판할 때 큰 종이에 인쇄해서 네번 접어 조판하는 방식을 뜻한다.</p>
</div></div><p>Quarto 프로젝트는 아직 초기지만 상당한 기대와 지지를 받고 있다. 이 프로젝트의 장점은 아래와 같다.</p>
<ul>
<li>마크 다운 기반의 문서 작성, 스태틱 웹 도구 그리고 계산 기반 문서 작성 도구의 기능을 부족하지 않게 두루 갖추고 있다.</li>
<li>각종 기능에 관한 문서화가 체계적으로 잘 되어 있다.</li>
<li>CLI 기반이라서 도구 의존성이 낮다.</li>
</ul>
<p>프로젝트가 초기여서 안정성이 떨어지는 경우가 있고, 아직 쓰는 사람이 많지 않아 구글링을 통해 필요한 정보를 충분히 얻기 힘든 경우가 있다. 이러한 불편함은 시간이 흐르면 빠르게 해결될 것으로 생각한다. 아울러 Quarto가 머지 않아 Jekyll과 같이 github의 기본 빌드 옵션이 되기를 바라보자.</p>
</section>
</section>
<section id="application" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="application">Application</h2>
<p>이제 Quarto를 이용해 기존 fastpages 기반 블로그를 대체해보자. 기존 블로그 포스팅은 어떻게 가져올 수 있을까? 포스팅의 양이 많지 않을 경우 반복 작업을 해도 되고, 필요하면 간단한 스크립트를 통해서 일괄해서 바꿀 수 있다.</p>
<section id="github-리포-생성" class="level3">
<h3 class="anchored" data-anchor-id="github-리포-생성">Github 리포 생성</h3>
<p>깃헙 페이지스를 활용할 깃헙 리포를 생성하자. 그리고 이 녀석을 로컬로 클론해두면 준비가 끝난다. 아래의 사항을 주의하자.</p>
<ul>
<li>리포의 종류는 private이 아닌 public이어야 한다. 그래야 블로그가 서빙된다.</li>
<li>깃헙 페이지스 기능을 활성화 해두자.</li>
</ul>
</section>
<section id="블로그-페이지-생성" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="블로그-페이지-생성">블로그 페이지 생성</h3>
<p><a href="https://quarto.org/docs/websites/website-blog.html#blog-projects">Quarto - Creating a Blog</a></p>
<p>먼저 전체적인 블로그의 구조를 생성해야 한다. 터미날에서 아래와 같이 입력하자.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">$</span> quarto create-project {YOUR-BLOG-DIR} <span class="at" style="color: #657422;">--type</span> website:blog</span></code></pre></div>
<p><code>YOUR-BLOG-DIR</code> 은 앞서 지정한 깃허브 리포의 디렉토리에 해당한다. 생성하고자 하는 디렉토리 안에 있다면 생략해도 된다. 이 명령을 실행하면 해당 디렉토리에 블로그를 서비스하기 위해 필요한 파일들이 생성된다. <code>/home/tmp/</code> 디렉토리 아래 블로그의 뼈대를 생성한다면 아래와 같이 실행된다.</p>
<p><img src="https://www.lostineconomics.com/posts/computer-tool/images/quarto_blog_terminal-1.gif" class="img-fluid"></p>

<div class="no-row-height column-margin column-container"><div class="">
<p>작업 순서상 깃허브와 연동된 리포를 먼저 만들고 그 디렉토리 안에 quarto 프로젝트를 생성하는 것이 자연스럽다.</p>
</div></div><p>생성된 파일, 디렉토리 중에서 중요한 내용을 간단히 짚어보자.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">File</th>
<th style="text-align: left;">Desc</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">_quarto.yml</td>
<td style="text-align: left;">블로그 설정 yml</td>
</tr>
<tr class="even">
<td style="text-align: left;"><a href="https://quarto.org/docs/websites/website-blog.html#home-page">index.qmd</a></td>
<td style="text-align: left;">index.html 설정</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><a href="https://quarto.org/docs/websites/website-blog.html#about-page">about.qmd</a></td>
<td style="text-align: left;">about 페이지 내용</td>
</tr>
<tr class="even">
<td style="text-align: left;"><a href="https://quarto.org/docs/websites/website-blog.html#posts-directory">posts/</a></td>
<td style="text-align: left;">포스팅이 담길 디렉토리</td>
</tr>
<tr class="odd">
<td style="text-align: left;">styles.css</td>
<td style="text-align: left;">개별 스타일 css</td>
</tr>
</tbody>
</table>
<p>posts 디렉토리에 <code>.qmd</code> 확장자를 지닌 포스팅 파일을 넣는다. 나머지 파일들에 관한 설명은 공식 문서에 잘 되어 있다.</p>
<ul>
<li><code>_quarto.yml</code>은 기본 설정된 항목을 필요에 따라서 고쳐도 충분하다. 보다 많은 설정이 필요하다면 <a href="https://github.com/quarto-dev/quarto-web/blob/main/_quarto.yml">여기</a> 내용을 참고하자.</li>
<li>나머지 설정은 위 표에 링크된 내용을 참고하면 된다.</li>
</ul>
</section>
<section id="렌더링" class="level3">
<h3 class="anchored" data-anchor-id="렌더링">렌더링</h3>
<ul>
<li>페이지 준비와 설정이 잘 되었으면 렌더링을 하면 된다.</li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">$</span> quarto render </span>
<span id="cb2-2"><span class="ex" style="color: null;">$</span> quarto preview </span></code></pre></div>
<p><code>render</code> 명령어는 페이지를 렌더링하고 <code>preview</code>는 페이지를 미리 보여준다.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto">VS Code의 Quarto extension</a>을 쓰면 해당 과정을 편리하게 진행할 수 있다. VS 코드와 쓰면 좋은 이유가 하나 더 있다. 터미널에서 위 명령을 실행하면 페이지 전체를 전부 생성한다. VS 코드에서 쓰면 수정한 페이지의 내용만 골라서 생성한다.</p>
<p>다시 강조한다. Quarto는 스태틱 웹에 기반한 도구다. 새로운 포스팅을 포함하여 새로운 변경 사항이 로컬에서 발생했다면, 이를 render한 후 이 녀석을 깃헙 리포에 동기화 해야 최종적으로 웹 블로그에 반영된다. 렌더링을 잊지 말자.</p>
</section>
</section>
<section id="customization" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="customization">Customization</h2>
<section id="styles.css" class="level3">
<h3 class="anchored" data-anchor-id="styles.css"><code>styles.css</code></h3>
<p>앞서 언급했듯이 <code>_quarto.yml</code>에서 별도의 <code>.css</code> 파일을 설정할 수 있다. 취향에 따라서 원하는 만큼 커스터마이즈를 할 수 있다. 내 경우는 아래 두 가지 요소를 조정했다.</p>
<ul>
<li>한글의 경우 기본 폰트 이외 추가 폰트를 쓰고 싶을 때</li>
<li>각 구성 요소별로 크기를 조정하고 싶을 때</li>
</ul>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb3-1"><span class="co" style="color: #5E5E5E;">/* css styles */</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;">@import</span> <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">'https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css'</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-3"><span class="im" style="color: #00769E;">@import</span> <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">'https://cdn.rawgit.com/moonspam/NanumSquare/master/nanumsquare.css'</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-4"><span class="im" style="color: #00769E;">@import</span> <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">"https://cdn.jsdelivr.net/gh/wan2land/d2coding/d2coding-ligature-subset.css"</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-5"></span>
<span id="cb3-6">h1<span class="op" style="color: #5E5E5E;">,</span> h2<span class="op" style="color: #5E5E5E;">,</span> h3<span class="op" style="color: #5E5E5E;">,</span> h4<span class="op" style="color: #5E5E5E;">,</span> h5<span class="op" style="color: #5E5E5E;">,</span> h6 {</span>
<span id="cb3-7">    <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'NanumSquare'</span> <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-8">    <span class="kw" style="color: #003B4F;">font-weight</span> : <span class="dv" style="color: #AD0000;">600</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-9">  }</span>
<span id="cb3-10"></span>
<span id="cb3-11">h1 {</span>
<span id="cb3-12">    <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">155</span><span class="dt" style="color: #AD0000;">%</span></span>
<span id="cb3-13">}</span>
<span id="cb3-14"></span>
<span id="cb3-15">h2 {</span>
<span id="cb3-16">  <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">135</span><span class="dt" style="color: #AD0000;">%</span></span>
<span id="cb3-17">}</span>
<span id="cb3-18"></span>
<span id="cb3-19">h3 {</span>
<span id="cb3-20">  <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">115</span><span class="dt" style="color: #AD0000;">%</span></span>
<span id="cb3-21">}</span>
<span id="cb3-22"></span>
<span id="cb3-23">h4<span class="op" style="color: #5E5E5E;">,</span> h5<span class="op" style="color: #5E5E5E;">,</span> h6 {</span>
<span id="cb3-24">  <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">100</span><span class="dt" style="color: #AD0000;">%</span></span>
<span id="cb3-25">}</span>
<span id="cb3-26"></span>
<span id="cb3-27">ul<span class="op" style="color: #5E5E5E;">,</span> li<span class="op" style="color: #5E5E5E;">,</span> ol{</span>
<span id="cb3-28">    <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'pretendard'</span> <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-29">    <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">100</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-30">   }</span>
<span id="cb3-31"></span>
<span id="cb3-32">p {</span>
<span id="cb3-33">    <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'pretendard'</span> <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-34">    <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">95</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-35">    <span class="kw" style="color: #003B4F;">font-weight</span>: <span class="dv" style="color: #AD0000;">400</span><span class="op" style="color: #5E5E5E;">;</span> </span>
<span id="cb3-36">}</span>
<span id="cb3-37"></span>
<span id="cb3-38"><span class="fu" style="color: #4758AB;">.category</span> {</span>
<span id="cb3-39">  <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">90</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-40">}</span>
<span id="cb3-41"></span>
<span id="cb3-42"><span class="fu" style="color: #4758AB;">.sourceCode</span> {</span>
<span id="cb3-43">  <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'D2Coding'</span><span class="op" style="color: #5E5E5E;">,</span> <span class="dv" style="color: #AD0000;">monospace</span> <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-44">  <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">95</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-45">}</span></code></pre></div>
<ul>
<li><code>@import...</code> | 폰트를 로딩한다. 이 블로그에는 프리텐다드, 나눔스퀘어, D3코딩 글꼴이 활용되었다.<br>
</li>
<li>나머지는 디자인 관련 설정이다. 아주 간단한 css 설정으로 잘 보면 의미를 하는 데에는 큰 어려움이 없을 것이다.</li>
</ul>
</section>
<section id="디렉토리-관리" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="디렉토리-관리">디렉토리 관리</h3>
<p><code>posts/</code> 내 별도의 디렉토리를 만들어 포스팅을 구별할 수도 있다. 다만, 포스팅 <code>.qmd</code>을 작성할 때 별도의 <code>.html</code>을 삽입했다면, 해당 <code>.html</code>을 각 디렉토리마다 넣어줘야 한다. 예를 들어 google analytics의 html을 포함시켰다면 해당 파일을 각 디렉토리 별로 넣어주자.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>Quarto의 기능은 생각보다 유연하고 다양하다. css나 js에 관한 지식이 부족해도 유용하게 활용할 다양한 기능을 갖추고 있다. <a href="https://quarto.org/docs/authoring/figures.html">여기</a> 소개된 그림 배치에 관한 기능이 한 사례인데, 홈페이지에 <a href="https://quarto.org/docs/authoring/markdown-basics.html">authoring</a> 항목을 살펴보도록 하자.</p>
</div></div></section>
<section id="기타" class="level3">
<h3 class="anchored" data-anchor-id="기타">기타</h3>
<p>원본에서 조금 더 손 본 부분은 이 블로그의 깃헙 리포 <a href="https://github.com/anarinsk/lostineconomics_quarto">anarinsk/lostineconomics_quarto</a>에서 직접 확인하기를 바란다.</p>


</section>
</section>

 ]]></description>
  <category>computer-tool</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-05-14-blogging-with-quarto.html</guid>
  <pubDate>Fri, 13 May 2022 15:00:00 GMT</pubDate>
  <media:content url="https://pulverer.si.edu/sites/default/files/styles/essay_large/public/image_assets/Fig1_Japanese%20bookmaking_05.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How to make a manageable C.V.</title>
  <dc:creator>JS HUHH</dc:creator>
  <link>https://www.lostineconomics.com/posts/computer-tool/2022-05-10-how-to-make-cv.html</link>
  <description><![CDATA[ 



<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-JNRF3S74Z4"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JNRF3S74Z4');
</script><section id="tl-dr" class="level2">
<h2 class="anchored" data-anchor-id="tl-dr">TL; DR</h2>
<ul>
<li>Markdown으로 관리 가능한 이력서를 빌드해보자.</li>
</ul>
</section>
<section id="why" class="level2">
<h2 class="anchored" data-anchor-id="why">Why?</h2>
<p>이력서를 만드는 방법은 다양하다. 정해진 포맷이 있다면 채워 넣으면 될 일이지만, 그렇지 않은 경우 여러가지 선택지를 고민하게 된다. 아카데미에 있는 분이라면 <img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX">으로 이력서를 만드는 데 익숙할 것이다. 요즘은 Notion(노션)으로도 꽤 근사한 이력서를 만들 수 있다.</p>
<p>이력서 제작에 중요한 가치는 아마 아래의 세 가지가 아닐까 싶다.</p>
<ol type="1">
<li>최적의 정보 전달</li>
<li>시각적인 심미성</li>
<li>관리의 편의</li>
</ol>
<p>일단 2는 제외하도록 하겠다. 미감이 부족한 나는 최소주의를 지향한다. 즉, 좋은 템플릿을 선택해서 텍스트를 잘 배치하는 정도를 고민하는 게 내게 최선이다. 템플릿을 따를 경우 1 역시 고민이 크게 줄어든다. 그렇다면 관심은 3에 집중된다.</p>
</section>
<section id="도구-그것이-문제로다" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="도구-그것이-문제로다">도구 그것이 문제로다</h2>
<section id="노션은-왜-사랑-받을까" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="노션은-왜-사랑-받을까">노션은 왜 사랑 받을까?</h3>
<p>3의 문제를 조금 더 뜯어보자. 관리의 편의성은 두 개로 나눌 수 있다. 하나는 이력의 변경 및 수정을 쉽게 할 수 있는지, 즉 이력서 관리의 문제다. 다른 하나는 이렇게 만들어진 이력서를 잘 배포할 수 있는지에 관한 것이다.</p>
<p>배포의 경우 과거에는 큰 문제가 없었다. PDF 등 일정한 포맷의 문서 파일이면 충분했다. 하지만 요즘은 많은 정보를 웹 또는 모바일 웹으로 접한다. 이에 부응하려면 html로 배포하는 것이 좋다. 첨부 파일이 아니라 html 이력서를 의도에 맞게 호스팅해주는 적절한 서비스가 있다면 더 좋을 것이다. 노션이 이력서 배포의 도구로 최근 각광받는 이유가 여기에 있다. 노션을 사용하면 WYSIWYM으로 다양한 형태의 편집을 지원하고 작성된 내용을 바로 웹으로 배포할 수 있다. 이 점에서 노션은 좋은 선택지다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>WYSIWYM = What You See Is What You Mean, 즉 별도의 컴파일 없이 변화된 내용이 어떻게 구현되는지를 바로 볼 수 있는 형태의 소프트웨어 구현 방식을 지칭한다. 쉽게 워드, 아래아 한글을 생각하면 된다.</p>
</div></div></section>
<section id="pdf라면-rm-latex" class="level3">
<h3 class="anchored" data-anchor-id="pdf라면-rm-latex">PDF라면 <img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX">!</h3>
<p>정형화되고 디자인이 멋진 PDF 문서를 만들어 내는 데에는 <img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX">만한 것이 없다. 아카데미에서 주로 사용하는 도구로서 논문 이력 관리를 <img src="https://latex.codecogs.com/png.latex?%5Crm%20Bib%5CTeX">으로 하고 있다면 제법 편리하고 멋진 이력서를 얻을 수 있다. 다만 <img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX">은 진입 장벽이 꽤 높다. 일반적인 용도로 쓰기에는 버겁고 게다가 비효율적이다(느리다). 게다가 <img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX"> 기반 문서로는 그럴 듯한 html 파일을 생성하기가 쉽지 않다.</p>
</section>
<section id="markdown은-어떨까" class="level3">
<h3 class="anchored" data-anchor-id="markdown은-어떨까">Markdown은 어떨까?</h3>
<p>html, <img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX">과 같은 스크립트 도구와 노션과 같은 WYSIWYM의 장점을 적절하게 결합한 것이 markdown이다. 나는 거의 모든 문서를 마크다운으로 쓰고 있다. 아울러 마크다운의 <code>.md</code> 파일은 pandoc을 통해 다른 포맷(<code>.tex</code>, <code>.html</code>, <code>.docx</code> 등)으로 쉽게 변환된다. 이력서 역시 마크다운으로 직접 보면서 만든 후에 이를 html로 변환하고 이를 웹에서 호스팅할 수 있다면, 작성과 관리라는 두 장점을 모두 취할 수 있는 편리한 작업 흐름이 되지 않을까?</p>
<p>md가 html로 변환되기 때문에 html 및 css의 기술을 활용할 수 있다면 원하는 만큼 디자인을 손볼 수도 있다. 즉, 웹을 다루는 기술만 있다면 마크다운으로 충분한 수준의 커스터마이즈를 이뤄낼 수 있다. 물론 이 글은 그런 능력자를 위한 것이 아니다. 심미적 최소주의를 지향하면서 게으르게 만들어 낼 수 있는 그리고 관리 가능성을 최우선에 두는 이력서 제작이 이 포스팅의 목적이다.</p>
</section>
</section>
<section id="tools" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="tools">Tools</h2>
<p>우리의 목표는 마크다운을 통해 쓸 만한 이력서를 만들고 이 이력서를 웹에 호스팅해서 쉽게 접근할 수 있게 만드는 것이다. 이를 위해 아래 두 가지가 필요하다.</p>
<ol type="1">
<li>md를 편집할 수 있는 도구</li>
<li>github</li>
</ol>
<p>편집 도구의 경우 각자에게 맞는 에디터를 쓰면 된다. 특별한 선호가 없다면 VS Code를 권한다. 마크다운의 경우 편리한 웹 에디터들도 많이 있다.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>대표적으로 <a href="https://stackedit.io/">https://stackedit.io/</a></p>
</div></div><section id="github" class="level3">
<h3 class="anchored" data-anchor-id="github">Github</h3>
<p>깃허브(이하 깃헙)은 소스를 온라인으로 보관하고 이에 기반해 깃 기반의 (공동) 작업을 구현하는 서비스다. 깃헙에 붙여 있는 편리한 기능의 하나가 스태틱 웹을 배포해주는 것헙 페이지다. 쉽게 말해서 정적인 웹페이지를 호출한 사용자의 브라우저에 해당 페이지를 띄워주는 것이다. 주소 체계 역시 직관적이이서 이용하는 입장에서는 이 정도의 좋은 도구가 드물다. (게다가 무료!)</p>
<p>깃헙의 html 배포 서비스를 이용하는 자세한 방법은 <a href="https://pages.github.com/">여기</a>를 참고하자.</p>
<p>간략하게 설명하면 이렇다. 리포의 루트에 <code>index.html</code>을 떨궈 놓고 깃헙 페이지를 활성화하면 특정 주소의 url을 호출받았을 때 이 <code>index.html</code>을 웹 브라우저에 띄워준다. 다만 이렇게 작업할 경우는 html까지 내가 만들어야 한다. md에서 html을 만드는 일이 어려운 작업은 아니지만 이 또한 귀찮고 약간의 거슬리는 점들이 있다.</p>
<p>깃헙은 자체 블로그/웹페이지 툴로 jekyll을 활용하고 있다. 리포에 변경이 생겼을 때 github actions 라는 녀석이 작동해서 변화된 md 파일을 디자인 포맷에 맞게 html로 변경해 하당 파일을 호스팅할 수 있는 상태로 만든다. 이 jekyll을 활용하면 사용자는 그냥 md, 즉 내용만 고치고 html 변환부터 호스팅까지 모든 일을 깃헙이 맡는다.</p>
</section>
</section>
<section id="a-walk-through" class="level2">
<h2 class="anchored" data-anchor-id="a-walk-through">A Walk-through</h2>
<section id="fork" class="level3">
<h3 class="anchored" data-anchor-id="fork">Fork</h3>
<p>나는 아래 링크의 리포를 참고했다. 일단 해당 리포를 나의 리포로 포크하도록 하자. 이 리포에 설명이 잘 되어 있어서 대부분은 생략해도 되겠다. 시작할 때 깃헙 페이지의 브랜치를 <code>master</code>로 바꾸는 것을 잊지 말자. 디폴트 상태에서는 <code>gh-pages</code>라는 브랜치의 내용, 즉 아래 리포의 README.md가 웹으로 호스팅된다.</p>
<p><a href="https://github.com/elipapa/markdown-cv">elipapa/markdown-cv</a></p>
<p>문서는 깔끔하게 잘 되어 있다. html의 빌드는 깃헙 액션스를 이용해도 되고, 로컬에 Jekyll을 깔아서 해도 된다. 게으름을 지향하는 나는 당연히 깃헙 액션스를 선호한다!</p>
</section>
<section id="customization" class="level3">
<h3 class="anchored" data-anchor-id="customization">Customization</h3>
<p>문서의 디렉토리에서 바뀌야 할 것을 살펴보자.</p>
<ul>
<li><code>_config.yml</code></li>
<li><code>index.md</code></li>
<li><code>_layout/cv.html</code></li>
<li><code>media/</code></li>
</ul>
<section id="config.yml" class="level4">
<h4 class="anchored" data-anchor-id="config.yml"><code>_config.yml</code></h4>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">markdown</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> kramdown</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">style</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> davewhipp</span></span></code></pre></div>
<p>손 댈 것이 많지는 않다.</p>
<ul>
<li><code>style</code> | 이력서의 디자인 형식을 나타는 일종의 접두어다.
<ul>
<li>style 항목은 media 내에 있는 css 파일의 접두 단위를 지정하면 된다. 위 리포의 경우 davewhipp, jkhealy 두 개가 들어 있다. css를 잘 다룰 수 있다면 필요에 따라서 커스터마이즈를 하면 된다.</li>
</ul></li>
</ul>
</section>
<section id="index.md" class="level4">
<h4 class="anchored" data-anchor-id="index.md"><code>index.md</code></h4>
<p>이력서의 내용이 들어간 파일이다. 무려 아이작 뉴턴의 이력이 작성되어 있으니 이를 참고해서 적절하게 작성하면 된다. 건드리지 말아야 할 것은 헤더이다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="pp" style="color: #AD0000;">---</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">layout</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> cv</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">title</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Junsok Huhh's CV</span></span>
<span id="cb2-4"><span class="pp" style="color: #AD0000;">---</span></span></code></pre></div>
<ul>
<li><code>layout</code> | 그대로 두자.</li>
<li><code>title</code> | 문서의 타이틀이 아니라 브라우저의 제목에 표시되는 이름이다. 적절하게 바꾸면 된다.</li>
</ul>
</section>
<section id="layoutcv.html" class="level4">
<h4 class="anchored" data-anchor-id="layoutcv.html"><code>_layout/cv.html</code></h4>
<p>이 파일은 이력서 html 파일을 생성할 때 바탕이 되는 일종의 템플릿이다. <code>index.md</code> 파일의 내용이 html 안에 들어간다고 보면 된다. html을 커스터마이즈하고 싶다면 해당 파일의 <code>&lt;head&gt;...&lt;/head&gt;</code> 태그 사이에 필요한 내용을 넣어야 한다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="kw" style="color: #003B4F;">&lt;link</span>  <span class="er" style="color: #AD0000;">href</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"media/styles.css"</span>  <span class="er" style="color: #AD0000;">type</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"text/css"</span>  <span class="er" style="color: #AD0000;">rel</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"stylesheet"</span>  <span class="er" style="color: #AD0000;">media</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"screen"</span><span class="kw" style="color: #003B4F;">&gt;</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;">&lt;link</span>  <span class="er" style="color: #AD0000;">href</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"media/styles.css"</span>  <span class="er" style="color: #AD0000;">type</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"text/css"</span>  <span class="er" style="color: #AD0000;">rel</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"stylesheet"</span>  <span class="er" style="color: #AD0000;">media</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"print"</span><span class="kw" style="color: #003B4F;">&gt;</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;">&lt;!-- mathjax --&gt;</span></span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;">&lt;script</span><span class="ot" style="color: #003B4F;">  type=</span><span class="st" style="color: #20794D;">"text/x-mathjax-config"</span><span class="kw" style="color: #003B4F;">&gt;</span></span>
<span id="cb3-6">MathJax<span class="op" style="color: #5E5E5E;">.</span><span class="at" style="color: #657422;">Hub</span><span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">Config</span>({</span>
<span id="cb3-7"><span class="dt" style="color: #AD0000;">tex2jax</span><span class="op" style="color: #5E5E5E;">:</span> {</span>
<span id="cb3-8"><span class="dt" style="color: #AD0000;">inlineMath</span><span class="op" style="color: #5E5E5E;">:</span> [ [<span class="st" style="color: #20794D;">'$'</span><span class="op" style="color: #5E5E5E;">,</span><span class="st" style="color: #20794D;">'$'</span>]<span class="op" style="color: #5E5E5E;">,</span> [<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">("</span><span class="op" style="color: #5E5E5E;">,</span><span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)"</span>] ]<span class="op" style="color: #5E5E5E;">,</span></span>
<span id="cb3-9"><span class="dt" style="color: #AD0000;">processEscapes</span><span class="op" style="color: #5E5E5E;">:</span> <span class="kw" style="color: #003B4F;">true</span></span>
<span id="cb3-10">}</span>
<span id="cb3-11">})<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;">&lt;/script&gt;</span></span>
<span id="cb3-13"><span class="kw" style="color: #003B4F;">&lt;script</span><span class="ot" style="color: #003B4F;">  type=</span><span class="st" style="color: #20794D;">"text/javascript"</span>  <span class="er" style="color: #AD0000;">async</span></span>
<span id="cb3-14"><span class="ot" style="color: #003B4F;">src=</span><span class="st" style="color: #20794D;">"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML"</span><span class="kw" style="color: #003B4F;">&gt;&lt;/script&gt;</span></span></code></pre></div>
<ul>
<li><code>&lt;link...</code> | 이 두 줄은 커스텀 디자인을 담고 있는 특화된 css 파일을 삽입하기 위한 용도이다. 해당 파일의 이름은 <code>styles.css</code>이다.</li>
<li><code>&lt;!-- mathjax...</code> | 원래 리포에 <img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX"> 기호 출력을 위한 준비가 되어 있지 않다. mathjax는 자바 스크립트(js)로 웹에서 <img src="https://latex.codecogs.com/png.latex?%5Crm%20%5CLaTeX"> 출력 관련을 담당한다. math engine으로 mathjax 이외에 katex과 같이 더 빠른 js를 쓸 수 있지만, 이력서에서 텍을 과도하게 쓸 이유가 없다면 mathjax로 충분하다.</li>
</ul>
</section>
<section id="media" class="level4">
<h4 class="anchored" data-anchor-id="media"><code>media/</code></h4>
<p>이 디렉토리에는 일종의 디자인 설정이 들어 있다. 스타일 두 개가 각각 screen, print의 css 파일을 갖고 있다. 자신의 원하는 특화된 설정이 필요하면 별도의 파일을 만들고 이를 앞서 본 <code>cv.html</code>에서 읽어오면 된다. 내가 사용하는 <code>styles.css</code>의 내용 중에서 중요한 내용 몇 가지만 보고 가자.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb4-1"><span class="co" style="color: #5E5E5E;">/* css styles */</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;">/* @import url('https://fonts.googleapis.com/css2?family=Nanum+Gothic&amp;display=swap'); */</span></span>
<span id="cb4-4"><span class="im" style="color: #00769E;">@import</span>  <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">'https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css'</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-5"><span class="im" style="color: #00769E;">@import</span>  <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">'https://cdn.rawgit.com/moonspam/NanumSquare/master/nanumsquare.css'</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-6"><span class="im" style="color: #00769E;">@import</span>  <span class="fu" style="color: #4758AB;">url(</span><span class="st" style="color: #20794D;">"https://cdn.jsdelivr.net/gh/wan2land/d2coding/d2coding-ligature-subset.css"</span><span class="fu" style="color: #4758AB;">)</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-7"></span>
<span id="cb4-8">h1<span class="op" style="color: #5E5E5E;">,</span> h2<span class="op" style="color: #5E5E5E;">,</span> h3<span class="op" style="color: #5E5E5E;">,</span> h4<span class="op" style="color: #5E5E5E;">,</span> h5<span class="op" style="color: #5E5E5E;">,</span> h6 {</span>
<span id="cb4-9">    <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'NanumSquare'</span>  <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-10">    <span class="kw" style="color: #003B4F;">font-weight</span> : <span class="dv" style="color: #AD0000;">600</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-11">}</span>
<span id="cb4-12"></span>
<span id="cb4-13">h1 {</span>
<span id="cb4-14">    <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">180</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-15">}</span>
<span id="cb4-16"></span>
<span id="cb4-17">ul<span class="op" style="color: #5E5E5E;">,</span> li<span class="op" style="color: #5E5E5E;">,</span> ol<span class="op" style="color: #5E5E5E;">,</span> a{</span>
<span id="cb4-18">    <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'pretendard'</span>  <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-19">    <span class="kw" style="color: #003B4F;">font-size</span>:<span class="dv" style="color: #AD0000;">95</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-20">}</span>
<span id="cb4-21"></span>
<span id="cb4-22">p {</span>
<span id="cb4-23">    <span class="kw" style="color: #003B4F;">font-family</span>: <span class="st" style="color: #20794D;">'pretendard'</span>  <span class="at" style="color: #657422;">!important</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-24">    <span class="kw" style="color: #003B4F;">font-size</span>: <span class="dv" style="color: #AD0000;">100</span><span class="dt" style="color: #AD0000;">%</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-25">    <span class="kw" style="color: #003B4F;">font-weight</span>: <span class="dv" style="color: #AD0000;">400</span><span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb4-26">}</span></code></pre></div>
<ul>
<li><code>@import</code> | 한글 폰트를 로딩 하는 과정이다. 기본 폰트 외에 특화된 한글 글꼴을 쓰기 위해서는 별도의 로딩이 필요하다. 여기서는 제목으로는 ’나눔스퀘어’를 본문으로는 ’프리텐다드’를 사용했다. 로딩은 CDN을 활용하는데, 약간의 시간이 필요하지만 활용에 지장을 줄 정도는 아니다.</li>
<li>나머지 부분은 각 성분의 폰트와 크기 등을 필요에 맞게 적절하게 조정한 부분이다.</li>
</ul>
</section>
</section>
<section id="push-build-and-deploy" class="level3">
<h3 class="anchored" data-anchor-id="push-build-and-deploy">Push, build and deploy</h3>
<ul>
<li>이렇게 해당 부분을 필요에 따라서 수정한 후 깃헙으로 푸시 하면 깃헙 액션스가 html을 빌드하고 해당 문서를 깃헙 페이지로 배포한다. 배포 주소는 <code>{깃헙아이디}.github.io/{깃헙리포}/</code></li>
</ul>
</section>
</section>
<section id="bottomline" class="level2">
<h2 class="anchored" data-anchor-id="bottomline">Bottomline</h2>
<p>이렇게 만들어진 내 게으른 결과물은 아래와 같다.</p>
<ul>
<li>소스 | <a href="https://github.com/anarinsk/markdown-cv">anarinsk/markdown-cv</a></li>
<li>배포된 CV | <a href="https://anarinsk.github.io/markdown-cv/">Junsok Huhh’s CV</a></li>
</ul>


</section>

 ]]></description>
  <category>computer-tool</category>
  <guid>https://www.lostineconomics.com/posts/computer-tool/2022-05-10-how-to-make-cv.html</guid>
  <pubDate>Mon, 09 May 2022 15:00:00 GMT</pubDate>
  <media:content url="https://opem.b-cdn.net/wp-content/uploads/2022/01/curriculum-vitae-english-example.jpg.webp" medium="image" type="image/webp"/>
</item>
</channel>
</rss>
