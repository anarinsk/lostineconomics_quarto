{
  "hash": "1a43363305a98b219bb03f064db5dfcf",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Simpson's Paradox with Regression\ndescription: 펭귄의 부리로 직접 계산해보자.\nauthor: JS HUHH\ndate: 06/05/2022\nimage: ./images/simpson_2.png\ncategories:\n  - regression\n  - stats-simple\ndraft: false\nformat:\n  html:\n    code-fold: true\nfilters:\n  - lightbox\nlightbox: auto\n---\n\n## 회귀 분석으로 보는 심슨의 역설 \n\n심슨의 역설을 보통은 회귀 분석으로 설명하지 않는다. 그런데 회귀 분석으로 보면 보다 명확하다. 심슨 역설의 전형적인 사례를 펭귄 부리의 길이와 높이를 통해 살펴보도록 하자.\n\n:::{ .column-margin }\n데이터는 [여기](https://towardsdatascience.com/the-curious-case-of-simpsons-paradox-6f178548d7e8)를 참고하자.\n\n![펭귄 부리의 길이와 높이](https://user-images.githubusercontent.com/39834789/86522451-84949f00-be38-11ea-9555-6409579f3b58.png){}\n:::\n\n `culmen`은 새의 부리를 뜻한다. 옆 그림에서 보듯이 `length`는 부리의 앞으로 튀어나온 길이를, `depth`는 부리의 높이를 의미한다. 아래 보듯이 이 데이터는 펭귄의 세 가지 종족, 성별 등을 별도로 담고 있다.\n\n::: {#ddc27a35 .cell execution_count=1}\n``` {.python .cell-code}\n # Basic packages\nimport pandas as pd \nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n# Stats models pip \nimport statsmodels.formula.api as sm\nimport statsmodels as statsmodels\n%matplotlib inline\n\ncsv_addr = \"data/penguins_size.csv\"\nplt.style.use(\"fivethirtyeight\")# for pretty graphs\ndf  = pd.read_csv('data/penguins_size.csv')\ndf.head();\n#df.info();\ndf = df.dropna()\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nIndex: 334 entries, 0 to 343\nData columns (total 7 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            334 non-null    object \n 1   island             334 non-null    object \n 2   culmen_length_mm   334 non-null    float64\n 3   culmen_depth_mm    334 non-null    float64\n 4   flipper_length_mm  334 non-null    float64\n 5   body_mass_g        334 non-null    float64\n 6   sex                334 non-null    object \ndtypes: float64(4), object(3)\nmemory usage: 20.9+ KB\n```\n:::\n:::\n\n\n::: {#b0b9abfb .cell execution_count=2}\n``` {.python .cell-code}\nplt.rcParams['figure.figsize'] = [8, 4]\nsns.set(font_scale=0.7)\n\nfig, (ax1, ax2) = plt.subplots(ncols=2, sharey=True)\nsns.regplot(x = 'culmen_length_mm',y = 'culmen_depth_mm', data = df, scatter_kws={'alpha': 0.4}, ax=ax1)\nr = stats.pearsonr(df['culmen_length_mm'], df['culmen_depth_mm'])[0]\nax1.text(.03, 1, 'r={:.3f}'.format(r), transform=ax1.transAxes)\ncolors = ['darkorange', 'royalblue', '#555555']\nmarkers = ['.', '+', 'x']\n#\nfor i, value in enumerate(df['species'].unique()):\n    ax2 = sns.regplot(x=\"culmen_length_mm\", y=\"culmen_depth_mm\", ax=ax2,\n                      scatter_kws={'alpha': 0.4},\n                     color=colors[i],\n                     #marker=markers[i],                      \n                     data=df[df['species'] == value],\n                     label=value)\nax2.legend(loc='best');\n```\n\n::: {.cell-output .cell-output-display}\n![](2022-06-04-simpson-paradox-regression_files/figure-html/cell-3-output-1.png){width=730 height=379}\n:::\n:::\n\n\n패널의 왼쪽 그림에서 보듯이 종 구분 없이 펭귄 부리의 길이와 높이를 보면 서로 음의 상관성을 지니고 있는 듯 보인다. 그런데 이를 종별로 구별해서 살펴보면 오히려 길이와 높이는 양의 상관성을 지니고 있다. \n\n:::{ .column-margin }\n![펭귄 종류](https://user-images.githubusercontent.com/39834789/86522450-7f375480-be38-11ea-9437-9fd2a382aa7b.png){}\n:::\n\n::: {#40c768c6 .cell execution_count=3}\n``` {.python .cell-code}\nols1 = sm.ols(formula=\"culmen_depth_mm ~ culmen_length_mm\", data=df).fit(use_t=True)\nols2 = sm.ols(formula=\"culmen_depth_mm ~ species + culmen_length_mm\", data=df).fit(use_t=True)\nols3 = sm.ols(formula=\"culmen_depth_mm ~ species * culmen_length_mm\", data=df).fit(use_t=True)\n#ols1.summary()\n#ols2.summary()\n\nfrom stargazer.stargazer import Stargazer\nstargazer = Stargazer([ols1, ols2, ols3])\nstargazer\n\n#regs = [ols1, ols2, ols3]\n#from statsmodels.iolib.summary2 import summary_col\n#print(summary_col(\n#                  regs,\n#                  stars=True, \n#                  float_format='%0.2f',\n#                  model_names=['(1)','(2)','(3)'],\n#                  info_dict={\n#                    'N':lambda x: \"{0:d}\".format(int(x.nobs)), \n#                    'F': lambda x: \"{0:.2f}\".format(x.fvalue),\n#                    }, \n#                  regressor_order=['Intercept','culmen_length_mm','secies'])\n#    )\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<table style=\"text-align:center\"><tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr>\n<tr><td style=\"text-align:left\"></td><td colspan=\"3\"><em>Dependent variable: culmen_depth_mm</em></td></tr><tr><td style=\"text-align:left\"></td><tr><td style=\"text-align:left\"></td><td>(1)</td><td>(2)</td><td>(3)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr>\n\n<tr><td style=\"text-align:left\">Intercept</td><td>20.786<sup>***</sup></td><td>10.619<sup>***</sup></td><td>11.488<sup>***</sup></td></tr>\n<tr><td style=\"text-align:left\"></td><td>(0.854)</td><td>(0.691)</td><td>(1.162)</td></tr>\n<tr><td style=\"text-align:left\">culmen_length_mm</td><td>-0.082<sup>***</sup></td><td>0.199<sup>***</sup></td><td>0.177<sup>***</sup></td></tr>\n<tr><td style=\"text-align:left\"></td><td>(0.019)</td><td>(0.018)</td><td>(0.030)</td></tr>\n<tr><td style=\"text-align:left\">species[T.Chinstrap]</td><td></td><td>-1.919<sup>***</sup></td><td>-3.919<sup>*</sup></td></tr>\n<tr><td style=\"text-align:left\"></td><td></td><td>(0.226)</td><td>(2.070)</td></tr>\n<tr><td style=\"text-align:left\">species[T.Chinstrap]:culmen_length_mm</td><td></td><td></td><td>0.046<sup></sup></td></tr>\n<tr><td style=\"text-align:left\"></td><td></td><td></td><td>(0.046)</td></tr>\n<tr><td style=\"text-align:left\">species[T.Gentoo]</td><td></td><td>-5.080<sup>***</sup></td><td>-6.187<sup>***</sup></td></tr>\n<tr><td style=\"text-align:left\"></td><td></td><td>(0.194)</td><td>(1.778)</td></tr>\n<tr><td style=\"text-align:left\">species[T.Gentoo]:culmen_length_mm</td><td></td><td></td><td>0.027<sup></sup></td></tr>\n<tr><td style=\"text-align:left\"></td><td></td><td></td><td>(0.041)</td></tr>\n\n<td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr>\n<tr><td style=\"text-align: left\">Observations</td><td>334</td><td>334</td><td>334</td></tr><tr><td style=\"text-align: left\">R<sup>2</sup></td><td>0.052</td><td>0.766</td><td>0.767</td></tr><tr><td style=\"text-align: left\">Adjusted R<sup>2</sup></td><td>0.049</td><td>0.764</td><td>0.764</td></tr><tr><td style=\"text-align: left\">Residual Std. Error</td><td>1.919 (df=332)</td><td>0.956 (df=330)</td><td>0.957 (df=328)</td></tr><tr><td style=\"text-align: left\">F Statistic</td><td>18.313<sup>***</sup> (df=1; 332)</td><td>360.759<sup>***</sup> (df=3; 330)</td><td>216.026<sup>***</sup> (df=5; 328)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align: left\">Note:</td><td colspan=\"3\" style=\"text-align: right\"><sup>*</sup>p&lt;0.1; <sup>**</sup>p&lt;0.05; <sup>***</sup>p&lt;0.01</td></tr></table>\n```\n:::\n:::\n\n\n회귀 분석에서 종을 통제한 경우와 그렇지 않은 경우의 `culmen_length_mm`(부리의 길이)의 계수를 비교해보자. (1)은 종족을 통제하지 않은 회귀식으로 `culmen_length_mm`의 계수는 음수이다. 반면 종족을 통제한 (2)의 회귀식은 종족의 구분해 각 절편과 해당 종족 내의 부리의 길이와 높이의 관계를 계산해 이를 적절하게 가중 평균한 값이 `culmen_length_mm`의 계수가 된다. 회귀 테이블에서 보듯이 `culmen_length_mm`의 계수는 음수에서 양수로 바뀌어 있다. \n\n:::{ .column-margin }\n나머지 계수의 의미는 기본이 되는 Adelie 종족을 기준으로 다른 두 개의 종족의 절편이 얼마나 떨어져 있는지를 보여준다. 회귀식을 적어보면 다음과 같다. \n\n식 (1) $y_i = \\alpha_i + \\beta x_i$\n\n식 (2) $y_i = \\alpha_i + \\beta x_i + D_{1i} + D_{2i}$\n\n- $y_i$: `culmen_depth_mm` 부리의 높이 \n- $x_i$: `culmen_length_mm` 부리의 길이\n- $D_{1i}$: 종족이 `Chinstrap`일 경우 1 이외는 0 \n- $D_{2i}$: 종족이 `Gentoo`일 경우 1이외는 0\n\n식 (3)은 $\\beta_i$가 그룹별로 달라지는지 여부를 교호작용 항목을 통해 확인했다. (3)이 보여주듯이 그룹별로 $\\beta_i$는 통계적으로 유의미한 차이가 없다. \n:::\n\n",
    "supporting": [
      "2022-06-04-simpson-paradox-regression_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}