---
title: "Word2Vec" 
description: Word2Vec에 대한 기본 이해
author: "JS HUHH"
date: "02/07/2024"
image: "./images/cat-learning.webp"
categories: [the-lectures, machine-learning]
#fig-align: center
filters:
   - lightbox
   #- line-highlight
lightbox: auto
#jupyter: python3
draft: false
format:
  html:
    code-fold: false
    code-block-bg: true
    highlight-style: github
---

## TL; DR
w2v의 기본 아이디어 위주로 정리해보자. 

{{< video https://www.youtube.com/watch?v=viZrOnJclY0&t=451s >}}

## 넋두리 
이른바 NLP의 주요한 돌파구가 된 것이 w2v의 아이디어다. 요즘 유행하는 트랜스포머 알고리즘 또한 그 시작은 w2v에 있다. 실전에 응용되는 경우는 많지 않겠지만 아이디어를 다시 새기는 것은 필요하다. 

## Word to Vector 

컴퓨터는 당연히 말을 그대로 알아들을 수 없다. 컴퓨터가 언어를 이해하기 위해서는 언어를 먼저 숫자로 바꿔야 한다. 이 작업이 w2v의 전부이다. 

::: {layout="[-1, 5, -1]"}
![네 개의 단어를 숫자로 바꿔자.](./images/w2v/w2v-1.png)
:::

그렇다면, 중요한 것은 어떻게 바꾸는지에 있다. 우선 강의 슬라이드에 나온대로 "Troll 2", "is", "great", "Gymkata" 네 개의 단어를 생각해보자. 

가장 쉬운 방법은 해당 단어들에 임의로 숫자를 부여하는 것이다. 이렇게 숫자를 부여하면 컴퓨터에 넣을 수는 있다. 다만, 이렇게 부여된 숫자는 의미 있는 정보인가? 아니다. 인간의 언어가 지닌 의미를 컴퓨터에게 되도록 가깝게 옮기려면 말이 지니는 의미 혹은 연결망까지 모두 담겨야 한다. 

1. 왜 word to number가 아니라, vector일지 먼저 따져보자. 인간의 언어는 하나의 의미만 지니지 않고 다양한 의미를 지니고 있다. 이를 반영하기 위해서는 스칼라 숫자 하나로는 부족할 것이다. 벡터의 등장은 이런 점에서 타당하다. 
2. 다음으로는 비슷한 의미를 지니는 말들이 비슷한 값을 지니면 좋을 것이다. 언어의 원래 의미가 벡터에도 잘 반영되어야 한다는 뜻이다. 

## Neural Net

::: {layout="[-1, 5, -1]"}
![신경망을 구성해보자.](./images/w2v/w2v-2.png)
:::

이제 신경망을 구성해서 학습을 시킬 차례다. 투입은 당연히 각 단어의 벡터이다. 즉 해당 단어만을 1로 처리하고 나머지를 0으로 둔 벡터다. 아웃풋은 예측치가 된다. 해당 단어 뒤에 나올 말이다. 녀석을 쭉 학습시킬 때 바람직한 결과란 뒤에 나올 말을 잘 맞추는 녀석일 것이다. 

::: {layout="[-1, 5, -1]"}
![신경망의 투입이 예측(뒤에 나올 단어)을 잘 맞출 수 있도록 네트워크의 웨이트를 조율해나간다.](./images/w2v/w2v-3.png)
:::

물론 실전 뉴럴넷의 파라미터 차원을 훨씬 복잡하다. 그림에서 보듯이 단어를 3백만개 쓰고 100개의 액티베이션 펑션이 있다고 하면 6억 개의 웨이트가 필요하다. 

## Negative Sampling 

::: {layout="[-1, 5, -1]"}
![전체를 전부 학습하면 자원의 낭비가 막심하다!](./images/w2v/w2v-4.png)
:::

딱 봐도 너무 복잡하지 않나? 이 녀석들을 한방에 학습시키려면 너무 오랜 시간과 자원이 소모될 것이다. 그래서 조금 꼼수를 고안해볼 수 있을 것이다. 특정 단어를 예측하는데 필요한 단어를 임의로 선택하고 이 녀석의 연결망만 학습시키는 것이다. 이를 negative sampling이라고 한다.

::: {layout="[-1, 5, -1]"}
![Divide and Conquer!](./images/w2v/w2v-5.png)
:::


