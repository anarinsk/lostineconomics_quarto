---
title: "Julia와 R을 잘 깔아보자." 
description: "Macos/Linux에서 활용하기"   
author: "JS HUHH"
date: "08/18/2024"
image: "./images/cat-julia.webp"
categories: [Rstat, Julia, Jupyter, VSCode]
#fig-align: center
jupyter: python3
draft: false
format:
  html:
    code-overflow: wrap
    code-line-numbers: false
---

## TL; DR

- Macos와 Linux에서 Julia와 R을 세팅하는 방법을 알아보자. 

## Pixi는 쓰지 말자. 

앞서 pixi로 R과 Julia를 세팅하는 [방법](https://blog.lostineconomics.com/posts/computer-tool/2024-04-03-r_with_pixi.html)을 소개했다. 하지만 그다지 쓸모가 있지는 않더라. 그래서 이번에는 직접 설치하는 방법을 정리한다. 

## 전제 조건 

아래와 같은 조건에서 활용한다. 

- OS는 Macos 또는 Linux 
- R과 Julia를 설치하고자 한다.
- VS Code에서 활용한다. 

Julia와 R 모두 직접 설치하는 데 다소 애로사항이 있다. 다행히도 둘 모두 활용할 수 있는 전용 installer가 나와 있다. 이 녀석들을 쓰면 두 플랫폼 모두에서 쉽게 설치해서 랭귀지를 활용할 수 있다. 

## Julia 

### Juliaup 

뛰어난 인스톨러다. 설명이 필요 없다. 이 녀석만 있으면 플랫폼에 관계 없이 Julia를 깔고 지우고 버전 관리를 할 수 있다. 

### Symlink

아래 명령어로 확인하자. 

```bash
> where julia # 설치 경로를 확인하자. 
/opt/homebrew/bin/julia
```

위 경로가 정확한 바이너리의 경로는 아니다. 하지만 진짜 경로를 파악할 필요는 없다. Symlink의 주소를 파악하면 된다. 

### VS Code 설정 

Julia 익스텐션을 설치하고, `settings.json` 혹은 확장 설정에서 아래와 같이 설정하자. 

```json 
{
    "julia.executablePath": "/opt/homebrew/bin/julia"
}
```

Julia extension을 설치하면 Jupyter 커널까지 함께 이용할 수 있다. 

## Rstat 

### Rig 

R 역시 Linux에서 까는 것이 그다지 용이하지 않다. Macos에서는 어렵지는 않지만 터미널에 깔아서 쓰려면 역시 쉽지 않다. R에도 juliaup과 비슷한 인스톨러가 존재한다. Rig를 각 플랫폼에 맞게 설치하도록 하자. 

- For Macos: [LINK](https://github.com/r-lib/rig?tab=readme-ov-file#installing-rig-on-macos-)
- For Linux: [LINK](https://github.com/r-lib/rig?tab=readme-ov-file#installing-rig-on-linux-)

Rig를 통해 R을 설치하자. 

```bash
> rig install release # 최신 버전을 설치한다.
> rig --help 
```


### 설치 패키지 

우선 몇 가지 패키지부터 Conda와 R에 설치하도록 하자. 

#### Radian 

Radian: Conda를 통해 radian을 설치하자. 메인 터미널 대신 활용할 앱니다. 

#### R packages 

```R
> install.packages("languageserver") # 랭귀지서버 설치한다. (그래야 vscode에서 에러 안 뜬다)
> install.packages("devtools")
> devtools::install_github("IRkernel/IRkernel") # Jupyter notebook에서 R을 사용하려면 설치한다.
```

### symlink

`where R`를 실행하면 `/usr/local/bin/R`이 뜬다. 이 역시 Symlink다. 

```bash
lrwxr-xr-x    1 root   admin       47  8 19 19:21 R -> /Library/Frameworks/R.framework/Resources/bin/R
lrwxr-xr-x    1 root   admin       66  8 19 19:21 R-4.4-arm64 -> /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/bin/R
lrwxr-xr-x    1 root   admin       66  8 19 19:21 R-release -> /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/bin/R
lrwxr-xr-x    1 root   admin       53  8 19 19:21 Rscript -> /Library/Frameworks/R.framework/Resources/bin/Rscript
```

### VS Code 설정 

R extension을 깐다. 역시 터미널의 실행 파일 경로를 설정하면 되는데, 위 symlink 경로를 제시하면 된다. Jupyter의 경우 IRkernel을 설치했다면 쉽게 커널을 선택할 수 있을 것이다. 




