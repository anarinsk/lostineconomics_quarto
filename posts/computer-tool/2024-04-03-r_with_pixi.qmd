---
title: "Pixi + R" 
description: "꼬이면 지우고 말지!"   
author: "JS HUHH"
date: "04/03/2024"
image: "./images/cat-packages.webp"
categories: [computer-tool, r-stat]
lightbox: auto
#fig-align: center
filters:
   - lightbox
   #- line-highlight
#jupyter: python3
draft: false
format:
  html:
    highlight-style: pygments
    #code-line-numbers: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
---

## TL; DR

Pixi로 R도 부릴 수 있다.  

## 왜 pixi인가? 

픽시를 사랑한다. 픽시를 쓰면서 파이썬 패키지를 깔거나 세팅을 할 때 고민하지 않는다. (알 수 없는 이유로) 꼬이면 지우고 다시 깔면 그만이다. R을 이렇게 파이썬처럼 운용할 수 없을까? 문득 이런 생각이 들더라. Pixi의 베이스가 되는 conda에 R이 있다. 그렇다면 pixi를 통해 R을 깔 수 있지 않을까? 

이런 생각으로 쭉 해보니 의외로 잘 되더라. 이 포스팅은 (전적으로!) 이 내용을 까먹고 헤맬 미래의 나 놈을 위한 것이다.

## 얻는 것과 잃는 것

R의 IDE로 VS Code를 쓴다면 천군만마와도 같은 GitHub Copilot을 부릴 수 있다. 엄청난 장점이다. 잃는 것은 R과 최고의 궁합을 자랑하는 RStudio이다. RStudio에 임의의 R 커널을 연결할 수 있으면 좋겠는데 좀 더 비싼 기업용 버전인 workbench에서만 해당 기능을 지원하는 듯 싶다. 

RStudio는 아쉽지만 VS Code + pixi를 쓰는 것의 장점이 아쉬움 이상이다.  

## Pixi setting 

다음과 같은 사용 환경을 전제한다. 

- OS
  - Windows 11 WSL 2 + Ubutu 22.04 LTS 
  - Macos (Sonoma, Silicon)
- pixi

R을 깔고자 하는 디렉토리에서 아래와 같이 실행한다. 

```shell
$ pixi init # 픽시 초기화 
$ pixi add python=3.11 r-base radian # 파이썬, r-base, radian 추가 
```

위 명령어를 실행하면 `./.pixi/envs/default` 폴더 아래 파이썬, R-base 그리고 radian이 설치된다. radian은 파이썬으로 작성된 일종의 대안 터미널이다. 꽤 쓸만하다. 

VS Code에서 R을 쓰기 위해서 아래 두 패키지를 설치해야 한다. 

```R
> install.packages("languageserver")
> install.packages("httpgd")
```

## 라이브러리 설치 위치 지정

만일 기존에 R이 깔린 환경이 있다면 라이러리가 그쪽으로 설치된다. 라이브러리까지 하위 디렉토리에 설치하기 위해서는 몇가지 설정이 필요하다. `~/.zshrc` 혹은 이에 상당하는 환경에 깔린 설정 파일을 수정하자. 해당 파일을 연 후 아래와 같이 두자. 

```txt
export R_LIBS_USER="[로컬 디렉토리]/.pixi/envs/default/lib/R/library"
```

해당 환경을 활성화하면 이제 R의 라이브러가 해당 디렉토리 아래 깔리게 된다. 만일 기존에 설치된 R이 없거나 지웠다면 라이브러리의 위치는 픽시 아래로 잡힌다. 확인하는 방법은 R에서 `.libPaths()`를 실행하면 된다.

## VS Code 설정 

먼저 R의 [extension](https://marketplace.visualstudio.com/items?itemName=REditorSupport.r)을 받아서 설치하자. 해당 확장을 설치한 후 몇 가지 설정을 바꿔야 한다. 

:::{ layout="[1,1]" }

![익스텐션의 설정으로 가자.](./images/pixi-r-1-min.png)

![두 개 모두 적절한 위칠 바꿔주자](./images/pixi-r-2-min.png)

:::

이외에 `httpgd`를 쓰는 것을 체크하자. 

## VS Code로 R 쓰기  

<https://code.visualstudio.com/docs/languages/r>

전체적인 지침은 링크에 잘 정리가 되어 있다. 

### WSL2

WSL2 환경에서 pixi+R의 조합이 문제 없이 잘 돌아간다. 그냥 쓰면 된다. 혹시 R 코드가 실행되지 않으면 터미널에 R을 띄워주자. 

### Macos 

활용하는 데는 별 문제가 없다. 다만 C++ 코드가 제대로 컴파일되지 않아서 C++을 쓰는 패키지들이 제대로 깔리지 않는다. 어떻게 해야 할까? 패키지를 깔 때, pixi의 셸 환경으로 들어가면 된다. 

```bash
$ pixi shell
$ R or radian 
> install.packages("...")
```

일단 패키지가 한번 설치된 이후에 활용할 때는 쉘 환경이 필요하지 않다. 
