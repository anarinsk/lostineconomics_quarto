---
title: "소박한 웹서버" 
description: 싸게 만들어보자.  
author: "JS HUHH"
date: "09/21/2023"
image: "./images/pixi.webp"
categories: [computer-tool]
filters:
   - lightbox
   #- line-highlight
lightbox: auto
#jupyter: python3
draft: true
format:
  html:
    code-line-numbers: true
    highlight-style: arrow
---

## TL; DR
- 단순 용도의 개인용 웹 서버를 구축해보자. 
- 구매부터 기본 세팅까지 개인이 경험한 전 과정을 소개한다. (역시 나중에 잊어버릴 나 놈을 위한 것이다!)  

## 넋두리 

웹 서버라고 제목에 쓰긴 했지만, 사실 웹 서버라기보다는 단순한 파이썬 앱 호스팅, 토렌트 다운로드, 그리고 DLNA 서버 정도 만드는 목적이다. 우선 NAS 용도는 아니다. 깃헙과 스트리밍 서비스가 존재하는 시대에 굳이 개인용 NAS까지 만들 정도로 보관해야 할 자료가 없기 때문이다. 

## 서버 구매 

일단 최대한 싸고 간단하게 구축하는 것이 목표였다. 싸다는 대목에서 라즈베리 파이를 고민했으나 이런 저런 부품을 구비하려면 비용이 만만치 않더라. 알리익스를 검색해보니, N95와 같은 준수한 저전력 x86 CPU를 장착한 베이본 물건이 13만원 정도면 살 수 있더라. 윈도OS도 필요 없고 메모리와 nvme SSD는 이미 굴러다니는 게 있어서 이 베어본을 구매했다. 말 그대로 램과 SSD가 빠진 깡통이 온다. 16GB 메모리는 약 5.5만원 정도, 512GB SSD는 4만원 정도면 구매하니, 대략 10만원 정도 더하면 쓸만한 서버를 살 수 있는 셈이다. 

<https://www.aliexpress.com/item/1005005305248100.html>

## 우분투 설치 

USB에 다운받아서 설치하면 된다. 부팅 USB를 macos나 윈도에서 편리하게 만들 수 있다. [여기](https://ubuntu.com/tutorials/create-a-usb-stick-on-macos#1-overview)를 참고하자. 설치 과정에서 경험한 몇 가지 사실을 소개한다. 

- "Ubuntu 22.04.3 LTS" 서버 버전 설치했다. 이 녀석을 통해 GUI를 쓸 일이 없을 듯 해서 데스크탑 버전이나 GUI 활용을 위한 앱을 깔지 않았다. 
- 요즘 우분투 설치시 github을 통해서 ssh 오픈키를 가져올 수 있다. ssh 키를 깃헙에 미리 설정해두면 서버에 네트워크 접속할 때 무척 편하다. 해당 오픈키의 프라이빗 키가 설치된 노트북에서는 바로 접속이 가능하다. 
- 설치가 끝는 이후에는 별도의 기기를 통해 ssh 접속하는 게 작업에 유리하다. 복붙을 해야 할 일이 많은데 서버에 디스플레이와 키보드를 붙여서 써서는 이 작업이 용이하지 않다. 

## 설치 후 작업 

우분투 설치 후에 몇가지 작업을 해줘야 한다. 

### 기본 저장소 교체 및 업데이트 

apt 패키지 업데이트를 위한 주소는 `/etc/apt/sources.list` 파일을 편집하면 된다. 

```bash=
> sudo nano /etc/apt/sources.list
```

기본 저장소보다는 카카오의 미러 저장소가 국내에서는 빠르다. 해당 파일을 적당한 편집기로 열어 기본 패키지 저장소가 어떻게 되어 있는지 살펴보자. 파일 내의 모든 저장소 URL을 찾아 `http://archive.ubuntu.com/ubuntu/` 또는 `http://kr.archive.ubuntu.com/ubuntu/` 등의 주소를 `http://mirror.kakao.com/ubuntu/`로 변경하면 된다. 둘 중 뭘로 되어 있는지 모르니 확인 후 작업하는 것을 권장한다. 

### 패키지 업데이트와 업그레이드 

```bash=
> sudo apt update 
> sudo apt upgrade # OS 요소까지 모두 업그레이드하려면 full-upgrade  
```

### zsh 설치 

```bash=
> sudo apt update # 이미 실행했다면 건너뛰자 
> sudo apt install zsh # zsh 설치
> chsh -s $(which zsh) # zsh을 기본 셸로 설치 

# 로그아웃 후에 다시 로그인하면 zsh이 기본셸로 설정된다. 
> sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" # oh my zsh을 설치하자. 
```

### p10k 깔기 

```bash=
> git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
```

셸 꾸미기로 속 편하게 파워레벨10k를 쓰자. 

```bash=
# zsh 설정 열기 
> nano ~/.zshrc
# ZSH_THEME="robbyrussell" -> ZSH_THEME="powerlevel10k/powerlevel10k"
```

변경 후 셸을 다시 시작하면 설정화면이 뜬다. 취향대로 설정하도록 하자. 

### brew 설치 

우분투에서 필요한 앱을 까는 방법은 apt, snap 그리고 brew가 있다. OS 단위의 업데이트 혹은 OS와 프로세스과 깊게 연관된 앱들은 apt를 통해서 깔자. 이용자 레벨에서 필요한 앱들은 brew가 편하다. macos 만큼 편하지는 않지만 그래도 쓸만하다. 

<https://brew.sh/>

설치 후에는 화면에 뜬 사후 작업을 꼭 해줘야 한다. 그래야 brew 명령어를 제대로 실행할 수 있다. 사용하는 셸에 따라서 차별적인 명령어가 등장하니 유의하면 되겠다. 

### gh, pixi with brew 

이제 brew를 통해서 필요한 앱들을 깔겠다. 일단 깃헙을 활용하기 위한 gh와 파이썬 의존성 관리도구인 pixi를 깔도록 하자. 

```bash=
> brew install gh, pixi 
```

gh를 설치한 후 `gh auth login`을 통해 깃헙 계정에 로그인을 해두자. 필요한 리포가 있을 경우 `gh repo clone {리포-주소}`를 통해 편하게 당겨올 수 있다. 

## 토렌트 서버



## DLNA 서버 


